<?xml version="1.0" encoding="utf-8"?>
<databaseConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="DatabaseConfigSchema.xsd" location="INSTALLER" version="1.0.0" installationSequence="1" databaseConfigurationSequence="2">
  <!-- START TABLE SECTION -->
  <config sequence="1" type="FRESH" version="1.0.0" description="Installation">
    <script provider="SQL Server">
      CREATE TABLE Installation (
      Id int IDENTITY(1, 1) NOT NULL,
      Location varchar(50) NOT NULL,
      Type varchar(50) NOT NULL,
      Version varchar(50) NOT NULL,
      StartDate datetime NOT NULL,
      EndDate datetime,
      Status varchar(50) NOT NULL,
      CONSTRAINT PK_Installation_Id PRIMARY KEY (Id),
      CONSTRAINT UK_Installation_Type_Version UNIQUE(Type, Version))
    </script>
  </config>
  <config sequence="2" type="FRESH" version="1.0.0" description="DatabaseConfiguration">
    <script provider="SQL Server">
      CREATE TABLE DatabaseConfiguration (
      Id int IDENTITY(1, 1) NOT NULL,
      InstallationId int NOT NULL,
      Sequence bigint NOT NULL,
      Type varchar(50) NOT NULL,
      Version varchar(50) NOT NULL,
      Description varchar(256),
      Script text,
      CONSTRAINT PK_DatabaseConfiguration_Id PRIMARY KEY (Id),
      CONSTRAINT UK_DatabaseConfiguration_Sequence UNIQUE(Sequence))
    </script>
  </config>
  <config sequence="3" type="FRESH" version="1.0.0" description="Module">
    <script provider="SQL Server">
      CREATE TABLE Module(
      Id int IDENTITY(1,1) NOT NULL,
      Name varchar(100) NOT NULL,
      DisplayName varchar(100) NOT NULL,
      ImageUrl varchar(100) NULL,
      IsActive bit NOT NULL,
      SortOrder int NOT NULL,
      CONSTRAINT PK_Module_Id PRIMARY KEY(Id),
      CONSTRAINT UQ_Module_Name UNIQUE(Name))
    </script>
  </config>
  <config sequence="4" type="FRESH" version="1.0.0" description="Property">
    <script provider="SQL Server">
      CREATE TABLE Property(
      Id int IDENTITY(1,1) NOT NULL,
      ModuleName varchar(100) NOT NULL,
      Name varchar(100) NOT NULL,
      DisplayName varchar(100) NOT NULL,
      PermissionType varchar(100) NOT NULL,
      PermissionProperty varchar(100) NULL,
      ImageUrl varchar(100) NULL,
      Path varchar(100) NULL,
      IsActive bit NOT NULL,
      SortOrder int NOT NULL,
      CONSTRAINT PK_Property_Id PRIMARY KEY(Id),
      CONSTRAINT UQ_Property_Name UNIQUE(Name))
    </script>
  </config>
  <config sequence="5" type="FRESH" version="1.0.0" description="Command">
    <script provider="SQL Server">
      CREATE TABLE Command(
      Id int IDENTITY(1,1) NOT NULL,
      Name varchar(100) NOT NULL,
      DisplayName varchar(100) NOT NULL,
      PermissionType varchar(100) NOT NULL,
      PermissionCommand varchar(100) NULL,
      ToolTipText varchar(100) NULL,
      ImageUrl varchar(100) NULL,
      SeperatorUrl varchar(100) NULL,
      NavigateUrl varchar(256) NULL,
      SortOrder int NOT NULL,
      CONSTRAINT PK_Command_Id PRIMARY KEY(Id),
      CONSTRAINT UQ_Command_Name UNIQUE(Name))
    </script>
  </config>
  <config sequence="6" type="FRESH" version="1.0.0" description="PropertyCommand">
    <script provider="SQL Server">
      CREATE TABLE PropertyCommand(
      Id int IDENTITY(1,1) NOT NULL,
      PropertyName varchar(100) NOT NULL,
      CommandName varchar(100) NOT NULL,
      DisplayName varchar(100) NULL,
      ToolTipText varchar(100) NULL,
      ImageUrl varchar(100) NULL,
      SeperatorUrl varchar(100) NULL,
      NavigateUrl varchar(256) NULL,
      SortOrder int NOT NULL,
      CONSTRAINT PK_PropertyCommand_Id PRIMARY KEY(Id),
      CONSTRAINT UQ_PropertyCommand_PropertyName_CommandName UNIQUE(PropertyName, CommandName))
    </script>
  </config>
  <config sequence="7" type="FRESH" version="1.0.0" description="Role">
    <script provider="SQL Server">
      CREATE TABLE Role(
      Id int IDENTITY(1,1) NOT NULL,
      Name varchar(100) NOT NULL,
      CONSTRAINT PK_Role_Id PRIMARY KEY(Id),
      CONSTRAINT UQ_Role_Name UNIQUE(Name))
    </script>
  </config>
  <config sequence="8" type="FRESH" version="1.0.0" description="RoleProperty">
    <script provider="SQL Server">
      CREATE TABLE RoleProperty(
      Id int IDENTITY(1,1) NOT NULL,
      RoleName varchar(100) NOT NULL,
      PropertyName varchar(100) NOT NULL,
      CONSTRAINT PK_RoleProperty_Id PRIMARY KEY(Id),
      CONSTRAINT UQ_RoleProperty_RoleName_PropertyName UNIQUE(RoleName, PropertyName))
    </script>
  </config>
  <config sequence="9" type="FRESH" version="1.0.0" description="RoleCommand">
    <script provider="SQL Server">
      CREATE TABLE RoleCommand(
      Id int IDENTITY(1,1) NOT NULL,
      RoleName varchar(100) NOT NULL,
      PropertyName varchar(100) NOT NULL,
      CommandName varchar(100) NOT NULL,
      CONSTRAINT PK_RoleCommand_Id PRIMARY KEY(Id),
      CONSTRAINT UQ_RoleCommand_RoleName_PropertyName_CommandName UNIQUE(RoleName, PropertyName, CommandName))
    </script>
  </config>
  <config sequence="10" type="FRESH" version="1.0.0" description="User">
    <script provider="SQL Server">
      CREATE TABLE [User](
      Id int IDENTITY(1,1) NOT NULL,
      Login varchar(50) NOT NULL,
      Password varchar(50) NOT NULL,
      Name varchar(100) NOT NULL,
      IsActive bit NOT NULL,
      CONSTRAINT PK_User_Id PRIMARY KEY(Id),
      CONSTRAINT UQ_User_Login UNIQUE(Login))
    </script>
  </config>
  <config sequence="11" type="FRESH" version="1.0.0" description="UserRole">
    <script provider="SQL Server">
      CREATE TABLE UserRole(
      Id int IDENTITY(1,1) NOT NULL,
      UserLogin varchar(50) NOT NULL,
      RoleName varchar(100) NOT NULL,
      CONSTRAINT PK_UserRole_Id PRIMARY KEY(Id),
      CONSTRAINT UQ_UserRole_UserLogin_RoleName UNIQUE(UserLogin, RoleName))
    </script>
  </config>
  <config sequence="12" type="FRESH" version="1.0.0" description="DbTransaction">
    <script provider="SQL Server">
      CREATE TABLE DbTransaction(
      Id int IDENTITY(1,1) NOT NULL,
      Description varchar(100) NULL,
      CreatedBy varchar(50) NOT NULL,
      CreatedDate datetime NOT NULL,
      CONSTRAINT PK_DbTransaction_Id PRIMARY KEY(Id))
    </script>
  </config>
  <config sequence="13" type="FRESH" version="1.0.0" description="DbTransactionDetails">
    <script provider="SQL Server">
      CREATE TABLE DbTransactionDetails(
      Id int IDENTITY(1,1) NOT NULL,
      DbTransactionId int NOT NULL,
      Type varchar(10) NOT NULL,
      TableName varchar(100) NOT NULL,
      IdentityColumn varchar(100) NOT NULL,
      IdentityValue varchar(100) NOT NULL,
      Value xml NULL,
      CONSTRAINT PK_DbTransactionDetails_Id PRIMARY KEY(Id))
    </script>
  </config>
  <config sequence="14" type="FRESH" version="1.0.0" description="District">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[Division](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [Name] [varchar](100) NOT NULL,
      CONSTRAINT [PK_Division] PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="15" type="FRESH" version="1.0.0" description="District">
    <script provider="SQL Server">
      CREATE TABLE [District](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [DivisionId] [int] NULL,
      [Name] [varchar](50) NOT NULL,
      CONSTRAINT [PK_District_Id] PRIMARY KEY ([Id]),
      CONSTRAINT [FK_District_Division] FOREIGN KEY([DivisionId]) REFERENCES [dbo].[Division] ([Id]))
    </script>
  </config>
  <config sequence="16" type="FRESH" version="1.0.0" description="Thana">
    <script provider="SQL Server">
      CREATE TABLE [Thana](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [DistrictId] [int] NOT NULL,
      [Name] [varchar](50) NOT NULL,
      CONSTRAINT [PK_Thana_Id] PRIMARY KEY ([Id]))
    </script>
  </config>
  <config sequence="17" type="FRESH" version="1.0.0" description="Zone">
    <script provider="SQL Server">
      CREATE TABLE [Zone](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [Name] [varchar](50) NOT NULL,
      [Status] [INT] NOT NULL,
      CONSTRAINT [PK_Zone_Id] PRIMARY KEY ([Id]))
    </script>
  </config>
  <config sequence="18" type="FRESH" version="1.0.0" description="Subzone">
    <script provider="SQL Server">
      CREATE TABLE [Subzone](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [ZoneId] [int] NOT NULL,
      [Name] [varchar](50) NOT NULL,
      [Status] [INT] NOT NULL,
      [NameInBangla] [nchar](50) NULL,
      [OpeningDate] [DATE] NULL,
      [ClosingDate] [DATE] NULL,
      CONSTRAINT [PK_Subzone_Id] PRIMARY KEY ([Id]))
    </script>
  </config>
  <config sequence="19" type="FRESH" version="1.0.0" description="Region">
    <script provider="SQL Server">
      CREATE TABLE [Region](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [SubZoneId] [int] NOT NULL,
      [Name] [varchar](50) NOT NULL,
      [Status] [INT] NOT NULL,
      [OpeningDate] [DATE] NULL,
      [ClosingDate] [DATE] NULL,
      CONSTRAINT [PK_Region_Id] PRIMARY KEY ([Id]))
    </script>
  </config>
  <config sequence="20" type="FRESH" version="1.0.0" description="Branch">
    <script provider="SQL Server">
      CREATE TABLE [Branch](
      Id [int] IDENTITY(-2,1) NOT NULL,
      ThanaId [int] NOT NULL,
      RegionId [int] NOT NULL,
      Code [int] NULL,
      Name [varchar](100) NOT NULL,
      BranchType [int] NOT NULL,
      OpeningDate [datetime] NOT NULL,
      MobileNumber [varchar](50) NULL,
      Status [int] NOT NULL,
      LocationType [int] NOT NULL,
      [Village] [varchar](50)  NULL,
      [PostOffice] [varchar](50) NULL,
      [PostCode] [varchar](4)  NULL,
      [NameInBangla] [nchar](50) NULL
      CONSTRAINT [PK_Branch_Id] PRIMARY KEY ([Id]))
    </script>
  </config>
  <config sequence ="21" type="FRESH" version="1.0.0" description="Config">
    <script provider="SQL Server">
      CREATE TABLE Config(
      Id int IDENTITY(1,1) NOT NULL,
      [Key] varchar(100) NOT NULL,
      Name varchar(100) NOT NULL,
      DataType varchar(100) NOT NULL,
      ReadableDataType varchar(100) NOT NULL,
      [Value] varchar(100) NOT NULL,
      CONSTRAINT PK_Config_Id PRIMARY KEY (Id),
      CONSTRAINT UK_Config_Key UNIQUE([Key]))
    </script>
  </config>
  <config sequence="22" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      CREATE TABLE ReportConfig(
      Id int IDENTITY(1, 1),
      Name varchar(200) NOT NULL,
      Type int NOT NULL,
      Query text NOT NULL,
      Location bit NOT NULL,
      Position bit NOT NULL,
      ReligionAndSex bit NOT NULL,
      DateBetween bit NOT NULL,
      CONSTRAINT PK_ReportConfig_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="23" type="FRESH" version="1.0.0" description="UserLocation">
    <script provider="SQL Server">
      CREATE TABLE UserLocation(
      Id int IDENTITY(1, 1),
      Login varchar(50) NOT NULL,
      ZoneId int,
      SubzoneId int,
      RegionId int,
      BranchId int,
      CONSTRAINT PK_UserLocation_Id PRIMARY KEY (Id),
      CONSTRAINT UK_UserLocation_Login UNIQUE(Login))
    </script>
  </config>
  <config sequence="24" type="FRESH" version="1.0.0" description="UserLocation">
    <script provider="SQL Server">
      alter table [User] add IsReset bit
      alter table [User] add LastResetDate datetime
      alter table [User] add UserType int
    </script>
  </config>

  <!--HRM START-->
  <config sequence="101" type="FRESH" version="1.0.0" description="H_Grade">
    <script provider="SQL Server">
      CREATE TABLE H_Grade(
      Id int IDENTITY(1, 1),
      Name varchar(50) NOT NULL,
      SortOrder [int] NOT NULL,
      RomanName varchar(50) NULL,
      CONSTRAINT PK_H_Grade_Id PRIMARY KEY (Id),
      CONSTRAINT UK_H_Grade_Name UNIQUE(Name))
    </script>
  </config>
  <config sequence="102" type="FRESH" version="1.0.0" description="H_Designation">
    <script provider="SQL Server">
      CREATE TABLE H_Designation(
      Id int IDENTITY(1, 1),
      [Name] varchar(50) NOT NULL,
      [BanglaName] varchar(50) NULL,
      [ShortName] varchar(50) NULL,
      [Status] int,
      [SortOrder] [int] NOT NULL,
      CONSTRAINT PK_H_Designation_Id PRIMARY KEY (Id),
      CONSTRAINT UK_H_Designation_Name UNIQUE(Name))
    </script>
  </config>
  <config sequence="103" type="FRESH" version="1.0.0" description="H_GradeDesignation">
    <script provider="SQL Server">
      CREATE TABLE H_GradeDesignation(
      Id int IDENTITY(1, 1),
      H_GradeId [int] NOT NULL,
      H_DesignationId [int] NOT NULL,
      CONSTRAINT PK_H_GradeDesignation_Id PRIMARY KEY (Id),
      CONSTRAINT UK_H_GradeDesignation_H_GradeId_H_DesignationId UNIQUE(H_GradeId, H_DesignationId))
    </script>
  </config>
  <config sequence="104" type="FRESH" version="1.0.0" description="H_Department">
    <script provider="SQL Server">
      CREATE TABLE H_Department(
      Id int IDENTITY(1, 1),
      Name varchar(50) NOT NULL,
      SortOrder [int] NOT NULL,
      CONSTRAINT PK_H_Department_Id PRIMARY KEY (Id),
      CONSTRAINT UK_H_Department_Name UNIQUE(Name))
    </script>
  </config>
  <config sequence="105" type="FRESH" version="1.0.0" description="H_Address">
    <script provider="SQL Server">
      CREATE TABLE H_Address(
      Id int IDENTITY(1, 1),
      Village [varchar](100) NOT NULL,
      PostOffice [varchar](100) NULL,
      PostCode [int] NULL,
      ThanaId [int] NOT NULL,
      Phone [varchar](30) NULL,
      Email [varchar](30) NULL,
      CONSTRAINT PK_H_Address_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="106" type="FRESH" version="1.0.0" description="H_Employee">
    <script provider="SQL Server">
      CREATE TABLE H_Employee(
      Id int IDENTITY(1, 1),
      Code [int] NOT NULL,
      Name [varchar](100) NOT NULL,
      FatherName [varchar](100) NULL,
      MotherName [varchar](100) NULL,
      DateOfBirth [datetime] NULL,
      BloodGroup [int] NULL,
      Sex [int] NOT NULL,
      MaritalStatus [int] NOT NULL,
      Religion [int] NOT NULL,
      Photo [image] NULL,
      PermanentAddressId [int] NULL,
      PresentAddressId [int] NULL,
      AppointmentLetterDate [datetime] NULL,
      AppointmentLetterNo [varchar](100) NULL,
      JoiningDate [datetime] NOT NULL,
      PermanentLetterDate [datetime] NULL,
      PermanentLetterNo [varchar](100) NULL,
      PermanentDate [datetime] NULL,
      EmploymentType [int] NOT NULL,
      Status [int] NOT NULL,
      NationalId varchar(20) not null,
      NameInBangla nchar(50) not null,
      CONSTRAINT PK_H_Employee_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="107" type="FRESH" version="1.0.0" description="H_EmployeeGrade">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeGrade(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      H_GradeId [int] NOT NULL,
      StartDate [datetime] NOT NULL,
      EndDate [datetime] NOT NULL,
      CONSTRAINT PK_H_EmployeeGrade_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="108" type="FRESH" version="1.0.0" description="H_EmployeeDesignation">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeDesignation(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      H_DesignationId [int] NOT NULL,
      StartDate [datetime] NOT NULL,
      EndDate [datetime] NOT NULL,
      CONSTRAINT PK_H_EmployeeDesignation_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="109" type="FRESH" version="1.0.0" description="H_EmployeeDepartment">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeDepartment(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      H_DepartmentId [int] NOT NULL,
      StartDate [datetime] NOT NULL,
      EndDate [datetime] NOT NULL,
      CONSTRAINT PK_H_EmployeeDepartment_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="110" type="FRESH" version="1.0.0" description="H_EmployeeBranch">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeBranch(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      BranchId [int] NOT NULL,
      StartDate [datetime] NOT NULL,
      EndDate [datetime] NOT NULL,
      CONSTRAINT PK_H_EmployeeBranch_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="111" type="FRESH" version="1.0.0" description="H_ProfessionalQualification">
    <script provider="SQL Server">
      CREATE TABLE H_ProfessionalQualification(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      Certification [varchar](200) NOT NULL,
      InstituteName [varchar](100) NOT NULL,
      Location [varchar](100) NOT NULL,
      StartDate [datetime] NOT NULL,
      EndDate [datetime] NOT NULL,
      SortOrder [int] NOT NULL,
      CONSTRAINT PK_H_ProfessionalQualification_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="112" type="FRESH" version="1.0.0" description="H_Training">
    <script provider="SQL Server">
      CREATE TABLE H_Training(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      Title [varchar](200) NOT NULL,
      Topics [varchar](200) NOT NULL,
      InstituteName [varchar](100) NOT NULL,
      Country [varchar](100) NOT NULL,
      Location [varchar](100) NOT NULL,
      TrainingYear [varchar](100) NOT NULL,
      Duration [varchar](100) NULL,
      SortOrder [int] NOT NULL,
      CONSTRAINT PK_H_Training_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="113" type="FRESH" version="1.0.0" description="H_Experience">
    <script provider="SQL Server">
      CREATE TABLE H_Experience(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      CompanyName [varchar](200) NOT NULL,
      CompanyBusiness [varchar](100) NOT NULL,
      CompanyLocation [varchar](100) NOT NULL,
      PositionHeld [varchar](100) NOT NULL,
      Department [varchar](100) NOT NULL,
      Responsibilities [varchar](1000) NOT NULL,
      StartDate [datetime] NOT NULL,
      EndDate [datetime] NULL,
      SortOrder [int] NOT NULL,
      CONSTRAINT PK_H_Experience_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="114" type="FRESH" version="1.0.0" description="H_EmployeeTransfer">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeTransfer(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      Type [int] NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      SourceBranchId [int] NOT NULL,
      DestinationBranchId [int] NOT NULL,
      JoiningDate [datetime] NOT NULL,
      Remarks [varchar](300) NULL,
      CONSTRAINT PK_H_EmployeeTransfer_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="115" type="FRESH" version="1.0.0" description="H_EmployeePromotion">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeePromotion(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      Type [int] NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      OldH_GradeId [int] NOT NULL,
      NewH_GradeId [int] NOT NULL,
      OldH_DesignationId [int] NOT NULL,
      NewH_DesignationId [int] NOT NULL,
      PromotionDate [datetime] NOT NULL,
      Remarks [varchar](300) NULL,
      CONSTRAINT PK_H_EmployeePromotion_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="116" type="FRESH" version="1.0.0" description="H_EmployeeLeave">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeLeave(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      Type [int] NOT NULL,
      JoinType [int] NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      StartDate [datetime] NOT NULL,
      EndDate [datetime] NULL,
      Cause [varchar](300) NULL,
      [Status] int,
      CONSTRAINT PK_H_EmployeeLeave_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="117" type="FRESH" version="1.0.0" description="H_EmployeeDrop">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeDrop(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      Type [int] NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      DropDate [datetime] NOT NULL,
      Cause [varchar](300) NULL,
      CONSTRAINT PK_H_EmployeeDrop_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="118" type="FRESH" version="1.0.0" description="H_EmployeeRejoin">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeRejoin(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      LeaveType [int] NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      FromDate [datetime] NOT NULL,
      RejoinDate [datetime] NOT NULL,
      SourceBranchId [int] NOT NULL,
      DestinationBranchId [int] NOT NULL,
      RejoinType [int] NOT NULL,
      CONSTRAINT PK_H_EmployeeRejoin_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="119" type="FRESH" version="1.0.0" description="H_EmployeeReemployment">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeReemployment(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      DropoutType [int] NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      FromDate [datetime] NOT NULL,
      ReemploymentDate [datetime] NOT NULL,
      SourceBranchId [int] NOT NULL,
      DestinationBranchId [int] NOT NULL,
      ReemploymentType [int] NOT NULL,
      Cause [varchar](300) NULL,
      CONSTRAINT PK_H_EmployeeReemployment_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="120" type="FRESH" version="1.0.0" description="H_EmployeeIncrementHeldup">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeIncrementHeldup(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      IncrementStop [int] NOT NULL,
      FromDate [datetime] NOT NULL,
      ToDate [datetime] NOT NULL,
      BranchId [int] NOT NULL,
      Cause [varchar](300) NULL,
      CONSTRAINT PK_H_EmployeeIncrementHeldup_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="121" type="FRESH" version="1.0.0" description="H_EmployeeWarning">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeWarning(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      Duration [varchar](100) NOT NULL,
      TotalWarningTime [int] NOT NULL,
      BranchId [int] NOT NULL,
      Cause [varchar](300) NULL,
      CONSTRAINT PK_H_EmployeeWarning_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="122" type="FRESH" version="1.0.0" description="H_EmployeePenalty">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeePenalty(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      FineType [varchar](250) NOT NULL,
      FineTime [int] NOT NULL,
      FineAmount [float] NOT NULL,
      Duration [int] not NULL,
      CONSTRAINT PK_H_EmployeePenalty_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="123" type="FRESH" version="1.0.0" description="H_EmployeeActingDesignation">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeActingDesignation(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      InchargedGradeId [int] NOT NULL,
      InchargedDesignationId [int] NOT NULL,
      FromDate [datetime] NOT NULL,
      ToDate [datetime] NOT NULL,
      CONSTRAINT PK_H_EmployeeActingDesignation_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="124" type="FRESH" version="1.0.0" description="H_EmployeeWaitingForPosting">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeWaitingForPosting(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      Type [int] NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      StartDate [datetime] NOT NULL,
      CONSTRAINT PK_H_EmployeeWaitingForPosting_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="125" type="FRESH" version="1.0.0" description="H_EmployeeSalary">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeSalary(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      BasicSalary [float] NOT NULL,
      LastIncrementDate [datetime] NOT NULL,
      CONSTRAINT PK_H_EmployeeSalary_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="126" type="FRESH" version="1.0.0" description="H_EmployeeSpecialHonor">
    <script provider="SQL Server">
      CREATE TABLE H_EmployeeSpecialHonor(
      Id int IDENTITY(1, 1),
      H_EmployeeId [int] NOT NULL,
      SubjectOfHonor [varchar](300) NOT NULL,
      LetterNo [varchar](200) NOT NULL,
      LetterDate [datetime] NOT NULL,
      CONSTRAINT PK_H_EmployeeSpecialHonor_Id PRIMARY KEY (Id))
    </script>
  </config>
  <config sequence="127" type="FRESH" version="1.0.0" description="H_BranchTransfer">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[H_BranchTransfer](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [LetterNo] [nvarchar](50) NOT NULL,
      [LetterDate] [datetime] NOT NULL,
      [BranchId] [int] NOT NULL,
      [SourceRegionId] [int] NOT NULL,
      [DestinationRegionId] [int] NOT NULL,
      [TransferDate] [datetime] NOT NULL,
      CONSTRAINT [PK_H_BranchTransfer] PRIMARY KEY ([Id]),
      CONSTRAINT [FK_H_BranchTransfer_Branch] FOREIGN KEY([BranchId]) REFERENCES [dbo].[Branch] ([Id]),
      CONSTRAINT [FK_H_BranchTransfer_Region] FOREIGN KEY([SourceRegionId]) REFERENCES [dbo].[Region] ([Id]),
      CONSTRAINT [FK_H_BranchTransfer_Region1] FOREIGN KEY([DestinationRegionId]) REFERENCES [dbo].[Region] ([Id]))
    </script>
  </config>
  <config sequence="128" type="FRESH" version="1.0.0" description="H_FinalPayment">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[H_FinalPayment](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [H_EmployeeId] [int] NOT NULL,
      [LetterNo] [varchar](50) NOT NULL,
      [LetterDate] [datetime] NOT NULL,
      [ClosingDate] [datetime] NOT NULL,
      [NetPay] [numeric](9, 2) NOT NULL,
      CONSTRAINT [PK_H_FinalPayment] PRIMARY KEY ([Id]),
      CONSTRAINT [FK_H_FinalPayment_H_Employee] FOREIGN KEY([H_EmployeeId]) REFERENCES [dbo].[H_Employee] ([Id]))
    </script>
  </config>
  <config sequence="129" type="FRESH" version="1.0.0" description="H_FinalPayment">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[BoardUniversity](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [Name] [varchar](100) NOT NULL,
      CONSTRAINT [PK_BoardUniversity] PRIMARY KEY ([Id]))
    </script>
  </config>
  <config sequence="130" type="FRESH" version="1.0.0" description="H_FinalPayment">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[GroupSubject](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [Name] [varchar](100) NOT NULL,
      CONSTRAINT [PK_GroupSubject] PRIMARY KEY([Id]))
    </script>
  </config>
  <config sequence="131" type="FRESH" version="1.0.0" description="H_FinalPayment">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[ExamName](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [Name] [varchar](50) NOT NULL,
      CONSTRAINT [PK_ExamName] PRIMARY KEY ([Id]))
    </script>
  </config>
  <config sequence="132" type="FRESH" version="1.0.0" description="H_FinalPayment">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[H_AcademicQualification](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [H_EmployeeId] [int] NOT NULL,
      [Level] [int] NOT NULL,
      [ExamNameId] [int] NOT NULL,
      [GroupSubjectId] [int] NOT NULL,
      [BoardUniversityId] [int] NOT NULL,
      [Result] [varchar](10) NOT NULL,
      [GPA] [numeric](3, 2) NULL,
      [PassingYear] [int] NOT NULL,
      [SortOrder] [int] NOT NULL,
      Institution varchar(200) not null,
      CONSTRAINT [PK_H_AcademicQualification_Id] PRIMARY KEY ([Id]),
      CONSTRAINT [FK_H_AcademicQualification_BoardUniversity] FOREIGN KEY([BoardUniversityId]) REFERENCES [dbo].[BoardUniversity] ([Id]),
      CONSTRAINT [FK_H_AcademicQualification_ExamName] FOREIGN KEY([ExamNameId]) REFERENCES [dbo].[ExamName] ([Id]),
      CONSTRAINT [FK_H_AcademicQualification_GroupSubject] FOREIGN KEY([GroupSubjectId]) REFERENCES [dbo].[GroupSubject] ([Id]),
      CONSTRAINT [FK_H_AcademicQualification_H_EmployeeId] FOREIGN KEY([H_EmployeeId]) REFERENCES [dbo].[H_Employee] ([Id]))
    </script>
  </config>
  <config sequence="133" type="FRESH" version="1.0.0" description="BranchOpenClose">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[BranchOpenClose](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [BranchId] [int] NOT NULL,
      [LetterNo] [varchar](50) NOT NULL,
      [LetterDate] [datetime] NOT NULL,
      [Effectivedate] [datetime] NOT NULL,
      [Types] [int] NOT NULL,
      [IsRecent] [bit] NOT NULL,
      CONSTRAINT [PK_BranchOpenClose] PRIMARY KEY ([Id]),
      CONSTRAINT [FK_BranchOpenClose_Branch] FOREIGN KEY([BranchId]) REFERENCES [dbo].[Branch] ([Id]))
    </script>
  </config>
  <config sequence="134" type="FRESH" version="1.0.0" description="BranchOpenClose">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[H_EmployeeTransferHistory](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [H_EmployeeId] [int] NOT NULL,
      [Type] [int] NOT NULL,
      [LetterNo] [varchar](200) NOT NULL,
      [LetterDate] [datetime] NOT NULL,
      [SourceBranchId] [int] NOT NULL,
      [DestinationBranchId] [int] NOT NULL,
      [JoiningDate] [datetime] NOT NULL,
      [Remarks] [varchar](300) NULL,
      [EntryDateTime] [datetime] NOT NULL,
      [Status] [int] NOT NULL,
      [UserLogin] [varchar](50) NOT NULL,
      CONSTRAINT [PK_H_EmployeeTransferHistory_Id] PRIMARY KEY ([Id]),
      CONSTRAINT [FK_H_EmployeeTransferHistory_DestinationBranchId] FOREIGN KEY([DestinationBranchId]) REFERENCES [dbo].[Branch] ([Id]),
      CONSTRAINT [FK_H_EmployeeTransferHistory_H_EmployeeId] FOREIGN KEY([H_EmployeeId]) REFERENCES [dbo].[H_Employee] ([Id]),
      CONSTRAINT [FK_H_EmployeeTransferHistory_SourceBranchId] FOREIGN KEY([SourceBranchId]) REFERENCES [dbo].[Branch] ([Id]))
    </script>
  </config>
  <config sequence="135" type="FRESH" version="1.0.0" description="BranchOpenClose">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[H_EmployeePermanent](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [H_EmployeeId] [int] NOT NULL,
      [LetterNo] [varchar](50) NOT NULL,
      [LetterDate] [datetime] NOT NULL,
      [PermanentDate] [datetime] NOT NULL,
      [Remarks] [varchar](250) NULL,
      CONSTRAINT [PK_H_EmployeePermanent] PRIMARY KEY ([Id]),
      CONSTRAINT [FK_H_EmployeePermanent_H_Employee] FOREIGN KEY([H_EmployeeId]) REFERENCES [dbo].[H_Employee] ([Id]))
    </script>
  </config>
  <config sequence="136" type="FRESH" version="1.0.0" description="H_EmployeeSubzone">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[H_EmployeeSubzone](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [H_EmployeeId] [int] NOT NULL,
      [SubzoneId] [int] NOT NULL,
      [SubzoneDate] [datetime] NOT NULL,
      [ZoneId] [int] NOT NULL,
      [ZoneDate] [datetime] NOT NULL,
      CONSTRAINT [PK_H_EmployeeSubzone] PRIMARY KEY([Id]),
      CONSTRAINT [FK_H_EmployeeSubzone_H_Employee] FOREIGN KEY([H_EmployeeId]) REFERENCES [dbo].[H_Employee] ([Id]),
      CONSTRAINT [FK_H_EmployeeSubzone_Subzone] FOREIGN KEY([SubzoneId]) REFERENCES [dbo].[Subzone] ([Id]),
      CONSTRAINT [FK_H_EmployeeSubzone_Zone] FOREIGN KEY([ZoneId]) REFERENCES [dbo].[Zone] ([Id]))
    </script>
  </config>
  <config sequence="137" type="FRESH" version="1.0.0" description="H_EmployeePhoto">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[H_EmployeePhoto](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [H_EmployeeId] [int] NOT NULL,
      [Photo] [image] NOT NULL,
      CONSTRAINT [PK_H_EmployeePhoto] PRIMARY KEY([Id]),
      CONSTRAINT [FK_H_EmployeePhoto_H_Employee] FOREIGN KEY([H_EmployeeId]) REFERENCES [dbo].[H_Employee] ([Id]))
    </script>
  </config>
  <config sequence="138" type="FRESH" version="1.0.0" description="H_EmployeePromotionHistory">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[H_EmployeePromotionHistory](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [H_EmployeeId] [int] NOT NULL,
      [Type] [int] NOT NULL,
      [LetterNo] [varchar](50) NULL,
      [LetterDate] [date] NULL,
      [OldH_GradeId] [int] NULL,
      [NewH_GradeId] [int] NULL,
      [OldH_DesignationId] [int] NULL,
      [NewH_DesignationId] [int] NULL,
      [PromotionDate] [date] NULL,
      [Remarks] [varchar](50) NOT NULL,
      [Status] [varchar](50) NULL,
      [UserLogin] [varchar](50) NOT NULL,
      CONSTRAINT [PK_H_EmployeePhoto] PRIMARY KEY([Id]),
      CONSTRAINT [FK_H_EmployeePromotionHistory_H_Employee] FOREIGN KEY([H_EmployeeId]) REFERENCES [dbo].[H_Employee] ([Id]),
      CONSTRAINT [FK_H_EmployeePromotionHistory_H_Designation] FOREIGN KEY([OldH_DesignationId]) REFERENCES [dbo].[H_Designation] ([Id]),
      CONSTRAINT [FK_H_EmployeePromotionHistory_H_Designation1] FOREIGN KEY([NewH_DesignationId]) REFERENCES [dbo].[H_Designation] ([Id]),
      CONSTRAINT [FK_H_EmployeePromotionHistory_H_Grade] FOREIGN KEY([OldH_GradeId]) REFERENCES [dbo].[H_Grade] ([Id]),
      CONSTRAINT [FK_H_EmployeePromotionHistory_H_Grade1] FOREIGN KEY([NewH_GradeId]) REFERENCES [dbo].[H_Grade] ([Id]))
    </script>
  </config>
  <config sequence="139" type="FRESH" version="1.0.0" description="H_FileUpload">
    <script provider="SQL Server">
      CREATE TABLE [dbo].[H_FileUpload](
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [H_EmployeeId] [int] NOT NULL,
      [Title] [varchar](50) NOT NULL,
      [FileName] [varchar](50) NOT NULL,
      [UploadDate] [date] NULL,
      CONSTRAINT [PK_H_EmployeePhoto] PRIMARY KEY([Id]),
      CONSTRAINT [FK_H_FileUpload_H_Employee] FOREIGN KEY([H_EmployeeId]) REFERENCES [dbo].[H_Employee] ([Id]))
    </script>
  </config>
  <!--HRM END-->
  <!-- END TABLE SECTION -->
  <!-- START VIEW SECTION -->
  <config sequence="1001" type="ALWAYS" version="1.0.0" description="UserCommandView">
    <script provider="SQL Server">
      CREATE VIEW UserCommandView
      AS
      SELECT DISTINCT UserRole.UserLogin, UserRole.RoleName, RoleCommand.PropertyName, RoleCommand.CommandName
      FROM UserRole
      INNER JOIN RoleCommand ON UserRole.RoleName = RoleCommand.RoleName
      UNION
      SELECT DISTINCT InheritedUserRole.UserLogin, InheritedUserRole.RoleName, InheritedRoleCommand.PropertyName, InheritedCommand.Name
      FROM UserRole AS InheritedUserRole
      INNER JOIN RoleCommand AS InheritedRoleCommand ON InheritedUserRole.RoleName = InheritedRoleCommand.RoleName
      INNER JOIN Command AS InheritedCommand ON InheritedCommand.PermissionCommand = InheritedRoleCommand.CommandName AND InheritedCommand.PermissionType = 'INHERITED'
      UNION
      SELECT DISTINCT AutoUserRole.UserLogin, AutoUserRole.RoleName, AutoPropertyCommand.PropertyName, AutoCommand.Name
      FROM UserRole AS AutoUserRole
      CROSS JOIN Command AS AutoCommand
      INNER JOIN PropertyCommand AS AutoPropertyCommand ON AutoPropertyCommand.CommandName = AutoCommand.Name
      WHERE AutoCommand.PermissionType = 'AUTO'
    </script>
  </config>
  <config sequence="1002" type="ALWAYS" version="1.0.0" description="UserPropertyView">
    <script provider="SQL Server">
      CREATE VIEW UserPropertyView
      AS
      SELECT DISTINCT Property.ModuleName, UserRole.UserLogin, UserRole.RoleName, RoleProperty.PropertyName
      FROM RoleProperty
      INNER JOIN UserRole ON UserRole.RoleName = RoleProperty.RoleName
      INNER JOIN Property ON Property.Name = RoleProperty.PropertyName
      UNION
      SELECT DISTINCT InheritedProperty.ModuleName, InheritedUserRole.UserLogin, InheritedRoleProperty.RoleName, InheritedProperty.Name
      FROM RoleProperty AS InheritedRoleProperty
      INNER JOIN UserRole AS InheritedUserRole ON InheritedUserRole.RoleName = InheritedRoleProperty.RoleName
      INNER JOIN Property AS InheritedProperty ON InheritedProperty.PermissionProperty = InheritedRoleProperty.PropertyName AND InheritedProperty.PermissionType = 'INHERITED'
      UNION
      SELECT DISTINCT AutoProperty.ModuleName, AutoUserRole.UserLogin, AutoUserRole.RoleName, AutoProperty.Name AS PropertyName
      FROM UserRole AS AutoUserRole
      CROSS JOIN Property AS AutoProperty
      WHERE AutoProperty.PermissionType = 'AUTO'
    </script>
  </config>
  <config sequence="1003" type="ALWAYS" version="1.0.0" description="RolePropertyView">
    <script provider="SQL Server">
      CREATE VIEW RolePropertyView
      AS
      SELECT
      Property.ModuleName,
      RoleProperty.RoleName,
      RoleProperty.PropertyName,
      Property.DisplayName AS PropertyDisplayName
      FROM RoleProperty
      INNER JOIN Property ON RoleProperty.PropertyName = Property.Name
    </script>
  </config>
  <config sequence="1004" type="ALWAYS" version="1.0.0" description="PropertyCommandView">
    <script provider="SQL Server">
      CREATE VIEW PropertyCommandView
      AS
      SELECT
      PropertyCommand.Id,
      PropertyCommand.PropertyName,
      PropertyCommand.CommandName,
      Command.PermissionType,
      Command.PermissionCommand,
      ISNULL(PropertyCommand.DisplayName, Command.DisplayName) AS DisplayName,
      ISNULL(PropertyCommand.ToolTipText, Command.ToolTipText) AS ToolTipText,
      ISNULL(PropertyCommand.ImageUrl, Command.ImageUrl) AS ImageUrl,
      ISNULL(PropertyCommand.SeperatorUrl, Command.SeperatorUrl) AS SeperatorUrl,
      ISNULL(PropertyCommand.NavigateUrl, Command.NavigateUrl) AS NavigateUrl,
      PropertyCommand.SortOrder
      FROM Command INNER JOIN PropertyCommand ON Command.Name = PropertyCommand.CommandName
    </script>
  </config>
  <config sequence="1006" type="ALWAYS" version="1.0.0" description="SubzoneView">
    <script provider="SQL Server">
      CREATE VIEW SubzoneView
      AS
      SELECT Subzone.Id, Subzone.Name, ZoneId, Zone.Name AS ZoneName,Subzone.Status
      FROM Subzone
      INNER JOIN Zone ON Zone.Id = ZoneId
    </script>
  </config>
  <config sequence="1007" type="ALWAYS" version="1.0.0" description="RegionView">
    <script provider="SQL Server">
      CREATE VIEW RegionView
      AS
      SELECT Region.Id, Region.Name, ZoneId, Zone.Name AS ZoneName, SubzoneId, Subzone.Name AS SubzoneName, Region.Status
      FROM Region
      INNER JOIN Subzone ON Subzone.Id = SubzoneId
      INNER JOIN Zone ON ZoneId = Zone.Id
    </script>
  </config>
  <config sequence="1008" type="ALWAYS" version="1.0.0" description="ThanaView">
    <script provider="SQL Server">
      CREATE VIEW ThanaView
      AS
      SELECT Thana.Id, Thana.Name, DistrictId, District.Name AS DistrictName
      FROM Thana
      INNER JOIN District ON DistrictId = District.Id
    </script>
  </config>
  <config sequence="1009" type="ALWAYS" version="1.0.0" description="BranchView">
    <script provider="SQL Server">
      CRAETE VIEW [dbo].[BranchView]
      AS
      SELECT Branch.Id,
      Code,
      Branch.Name,
      Branch.BranchType,
      Branch.OpeningDate,
      Branch.NameInBangla,
      MobileNumber,
      Branch.Status,
      LocationType,
      RegionId,
      Region.Name AS RegionName,
      SubzoneId,
      Subzone.Name AS SubzoneName,
      ZoneId,
      Zone.Name AS ZoneName,
      ThanaId,
      Thana.Name AS ThanaName,
      Thana.DistrictId,
      District.Name AS DistrictName
      FROM Branch
      INNER JOIN Region ON RegionId = Region.Id
      INNER JOIN Subzone ON SubzoneId = Subzone.Id
      INNER JOIN Zone ON ZoneId = Zone.Id
      INNER JOIN Thana ON ThanaId = Thana.Id
      INNER JOIN District ON Thana.DistrictId = District.Id
    </script>
  </config>
  <config sequence="1010" type="ALWAYS" version="1.0.0" description="H_AcademicQualificationView">
    <script provider="SQL Server">
      CREATE VIEW [dbo].[H_AcademicQualificationView]
      AS
      SELECT dbo.H_AcademicQualification.Id, dbo.H_AcademicQualification.H_EmployeeId, dbo.H_AcademicQualification.[Level],dbo.H_AcademicQualification.Institution,
      ISNULL(convert(varchar,dbo.H_AcademicQualification.GPA), dbo.H_AcademicQualification.Result) AS Result
      ,dbo.H_AcademicQualification.PassingYear,
      dbo.H_AcademicQualification.SortOrder, dbo.ExamName.Name AS ExamName, dbo.GroupSubject.Name AS SubjectName,
      dbo.BoardUniversity.Name AS BoardName
      FROM dbo.H_AcademicQualification
      INNER JOIN dbo.ExamName ON dbo.H_AcademicQualification.ExamNameId = dbo.ExamName.Id
      INNER JOIN dbo.GroupSubject ON dbo.H_AcademicQualification.GroupSubjectId = dbo.GroupSubject.Id
      INNER JOIN dbo.BoardUniversity ON dbo.H_AcademicQualification.BoardUniversityId = dbo.BoardUniversity.Id
    </script>
  </config>
  <config sequence="1011" type="BOTH" version="1.0.0" description="Zone Column Adding">
    <script provider="SQL Server">

      alter table zone

      add  OpeningDate  Datetime null
      alter table zone
      add    [ClosingDate]  Datetime null
    </script>
  </config>


  <config sequence="2001" type="ALWAYS" version="1.0.0" description="H_EmployeeView">
    <script provider="SQL Server">
      CREATE VIEW [dbo].[H_EmployeeView]
      AS
      SELECT
      H_Employee.Id,
      H_Employee.Name,
      H_Employee.NameInBangla,
      H_Employee.Code,
      FatherName,
      MotherName,
      DateOfBirth,
      BloodGroup,
      Sex,
      MaritalStatus,
      Religion,
      PermanentAddressId,
      PresentAddressId,
      AppointmentLetterDate,
      AppointmentLetterNo,
      JoiningDate,
      H_Employee.EmploymentType,
      H_Employee.Status,
      BranchId,
      Branch.Name AS BranchName,
      RegionId,
      Region.Name AS RegionName,
      SubzoneId,
      Subzone.Name AS SubzoneName,
      ZoneId,
      Zone.Name AS ZoneName,
      H_DepartmentId,
      H_Department.Name AS DepartmentName,
      H_DesignationId,
      H_Designation.Name AS DesignationName,
      H_GradeId,
      H_Grade.Name AS GradeName
      FROM H_Employee
      INNER JOIN H_EmployeeBranch ON H_Employee.Id = H_EmployeeBranch.H_EmployeeId AND (H_EmployeeBranch.EndDate = '2099-12-31' OR H_EmployeeBranch.EndDate = (SELECT MAX(EndDate) FROM H_EmployeeBranch WHERE H_EmployeeBranch.H_EmployeeId = H_Employee.Id))
      INNER JOIN Branch ON Branch.Id = BranchId
      INNER JOIN Region ON Region.Id = RegionId
      INNER JOIN Subzone ON Subzone.Id = SubzoneId
      INNER JOIN Zone ON Zone.Id = ZoneId
      INNER JOIN H_EmployeeDepartment ON H_Employee.Id = H_EmployeeDepartment.H_EmployeeId AND (H_EmployeeDepartment.EndDate = '2099-12-31' OR H_EmployeeDepartment.EndDate = (SELECT MAX(EndDate) FROM H_EmployeeDepartment WHERE H_EmployeeDepartment.H_EmployeeId = H_Employee.Id))
      INNER JOIN H_Department ON H_Department.Id = H_DepartmentId
      INNER JOIN H_EmployeeDesignation ON H_Employee.Id = H_EmployeeDesignation.H_EmployeeId AND (H_EmployeeDesignation.EndDate = '2099-12-31' OR H_EmployeeDesignation.EndDate = (SELECT MAX(EndDate) FROM H_EmployeeDesignation WHERE H_EmployeeDesignation.H_EmployeeId = H_Employee.Id))
      INNER JOIN H_Designation ON H_Designation.Id = H_DesignationId
      INNER JOIN H_EmployeeGrade ON H_Employee.Id = H_EmployeeGrade.H_EmployeeId AND (H_EmployeeGrade.EndDate = '2099-12-31' OR H_EmployeeGrade.EndDate = (SELECT MAX(EndDate) FROM H_EmployeeGrade WHERE H_EmployeeGrade.H_EmployeeId = H_Employee.Id))
      INNER JOIN H_Grade ON H_Grade.Id = H_GradeId
    </script>
  </config>
  <config sequence="2002" type="ALWAYS" version="1.0.0" description="H_EmployeeTransferView">
    <script provider="SQL Server">
      CREATE VIEW [dbo].[H_EmployeeTransferView]
      AS
      SELECT dbo.H_EmployeeTransferHistory.Id,dbo.H_EmployeeTransferHistory.Type,
      dbo.H_EmployeeTransferHistory.LetterNo, dbo.H_EmployeeTransferHistory.LetterDate, dbo.H_EmployeeTransferHistory.JoiningDate,dbo.H_EmployeeTransferHistory.H_EmployeeId as Emp_ID,
      dbo.H_EmployeeTransferHistory.Remarks, db.Name as DestinationBranch,sb.Name as SourceBranch, dbo.H_Employee.Name AS EmployeeName,
      FROM  dbo.H_EmployeeTransferHistory
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeTransferHistory.H_EmployeeId = dbo.H_Employee.Id AND H_EmployeeTransferHistory.Status=1
      INNER JOIN dbo.Branch db ON dbo.H_EmployeeTransferHistory.DestinationBranchId = db.Id
      INNER JOIN dbo.Branch sb ON  dbo.H_EmployeeTransferHistory.SourceBranchId = sb.Id
    </script>
  </config>
  <config sequence="3001" type="FRESH" version="1.0.0" description="Module">
    <script provider="SQL Server">
      INSERT INTO Module(Name, DisplayName, ImageUrl, IsActive, SortOrder) VALUES('HRM', 'HRM', '~/Images/HR.gif', 'True', 10);
      INSERT INTO Module(Name, DisplayName, ImageUrl, IsActive, SortOrder) VALUES('REPORT', 'Report', '~/Images/Report.gif', 'True', 20);
      INSERT INTO Module(Name, DisplayName, ImageUrl, IsActive, SortOrder) VALUES('DBMANAGEMENT', 'Database Management', '~/Images/DbManagement.gif', 'True', 30);
      INSERT INTO Module(Name, DisplayName, ImageUrl, IsActive, SortOrder) VALUES('SECURITY', 'Security', '~/Images/security.gif', 'True', 40);
      INSERT INTO Module(Name, DisplayName, ImageUrl, IsActive, SortOrder) VALUES('ADMIN', 'Admin', '~/Images/TBAdd.gif', 'True', 50);
      INSERT INTO Module(Name, DisplayName, ImageUrl, IsActive, SortOrder) VALUES('AUDIT', 'Audit', '~/Images/Audit.gif', 'True', 60);
    </script>
  </config>
  <config sequence="3002" type="FRESH" version="1.0.0" description="Property">
    <script provider="SQL Server">
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'DISTRICT LIST', 'Govt.District', 'OWN', NULL, NULL, 'Admin/DistrictList.aspx', 'True', 10)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'DISTRICT ADD', 'New District', 'INHERITED', 'DISTRICT LIST', NULL, 'Admin/DistrictList.aspx', 'False', 20)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'THANA LIST', 'Govt.Thana', 'OWN', NULL, NULL, 'Admin/ThanaList.aspx', 'True', 30)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'THANA ADD', 'New Thana', 'INHERITED', 'THANA LIST', NULL, 'Admin/ThanaList.aspx', 'False', 40)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'ZONE LIST', 'ASA Zone', 'OWN', NULL, NULL, 'Admin/ZoneList.aspx', 'True', 50)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'ZONE ADD', 'New Zone', 'INHERITED', 'ZONE LIST', NULL, 'Admin/ZoneList.aspx', 'False', 60)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'SUBZONE LIST', 'ASA District', 'OWN', NULL, NULL, 'Admin/SubzoneList.aspx', 'True', 10)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'SUBZONE ADD', 'New Subzone', 'INHERITED', 'SUBZONE LIST', NULL, 'Admin/SubzoneList.aspx', 'False', 20)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'REGION LIST', 'Region', 'OWN', NULL, NULL, 'Admin/RegionList.aspx', 'True', 70)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'REGION ADD', 'New Region', 'INHERITED', 'REGION LIST', NULL, 'Admin/RegionList.aspx', 'False', 80)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'BRANCH LIST', 'Branch', 'OWN', NULL, NULL, 'Admin/BranchList.aspx', 'True', 110)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'BRANCH ADD', 'New Branch', 'INHERITED', 'BRANCH LIST', NULL, 'Admin/BranchList.aspx', 'False', 110)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'H_DEPARTMENT LIST', ' Department', 'OWN', NULL, NULL, 'Admin/H_DepartmentList.aspx', 'True', 120)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'H_DEPARTMENT ADD', ' Department', 'INHERITED', 'H_DEPARTMENT LIST', NULL, 'Admin/H_DepartmentList.aspx', 'False', 130)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'H_GRADE LIST', ' Grade', 'OWN', NULL, NULL, 'Admin/H_GradeList.aspx', 'True', 140)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'H_GRADE ADD', ' Grade', 'INHERITED', 'H_GRADE LIST', NULL, 'Admin/H_GradeList.aspx', 'False', 150)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'H_DESIGNATION LIST', ' Designation', 'OWN', NULL, NULL, 'Admin/H_DesignationList.aspx', 'True', 160)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'H_DESIGNATION ADD', ' Designation', 'INHERITED', 'H_DESIGNATION LIST', NULL, 'Admin/H_DesignationList.aspx', 'False', 170)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'CONFIG LIST', 'Config', 'OWN', NULL, NULL, 'Admin/ConfigList.aspx', 'True', 190)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'CONFIG ADD', 'New Config', 'INHERITED', 'CONFIG LIST', NULL, 'Admin/ConfigList.aspx', 'False', 200)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'REPORTCONFIG LIST', 'Report Config', 'OWN', NULL, NULL, 'Admin/ReportConfigList.aspx', 'True', 210)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'REPORTCONFIG ADD', 'Report Config', 'INHERITED', 'REPORTCONFIG LIST', NULL, 'Admin/ReportConfigList.aspx', 'False', 220)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('SECURITY', 'ROLE LIST', 'Role', 'OWN', NULL, '~/Images/Role.gif', 'Security/RoleList.aspx', 'True', 10)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('SECURITY', 'ROLE ADD', 'New Role', 'INHERITED', 'ROLE LIST', NULL, 'Security/RoleAdd.aspx', 'False', 20)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('SECURITY', 'USER LIST', 'User', 'OWN', NULL, '~/Images/User.gif', 'Security/UserList.aspx', 'True', 30)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('SECURITY', 'USER ADD', 'New User', 'INHERITED', 'USER LIST', NULL, 'Security/UserAdd.aspx', 'False', 40)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('DBMANAGEMENT', 'UPGRADE DATABASE', 'Upgrade Database', 'OWN', NULL, NULL, 'DbManagement/DbManagement.aspx', 'True', 10)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('DBMANAGEMENT', 'BACKUP DATABASE', 'Backup Database', 'OWN', NULL, NULL, 'DbManagement/DbManagement.aspx', 'True', 20)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('DBMANAGEMENT', 'RESTORE DATABASE', 'Restore Database', 'OWN', NULL, NULL, 'DbManagement/DbManagement.aspx', 'True', 30)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('DBMANAGEMENT', 'EXECUTE SCRIPT', 'Execute Script', 'OWN', NULL, NULL, 'DbManagement/DbManagement.aspx', 'True', 40)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('DBMANAGEMENT', 'SHRINK DATABASE', 'Shrink Database', 'OWN', NULL, NULL, 'DbManagement/DbManagement.aspx', 'True', 50)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('AUDIT', 'DBTRANSACTION LIST', 'Db Transaction', 'OWN', NULL, NULL, 'Audit/DbTransactionList.aspx', 'True', 10)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('AUDIT', 'DBTRANSACTION ADD', 'New Db Transaction', 'INHERITED', 'DBTRANSACTION LIST', NULL, 'Audit/DbTransactionAdd.aspx', 'False', 20)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('AUDIT', 'DBTRANSACTIONDETAILS LIST', 'Db Transaction Details', 'OWN', NULL, NULL, 'Audit/DbTransactionDetailsList.aspx', 'True', 30)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('AUDIT', 'DBTRANSACTIONDETAILS ADD', 'New Db Transaction Details', 'INHERITED', 'DBTRANSACTIONDETAILS LIST', NULL, 'Audit/DbTransactionDetailsAdd.aspx', 'False', 40)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEE LIST', ' Employee', 'OWN', NULL, NULL, 'HRM/H_EmployeeList.aspx', 'True', 70)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEE ADD', ' Employee', 'INHERITED', 'H_EMPLOYEE LIST', NULL, 'HRM/H_EmployeeList.aspx', 'False', 80)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_ACADEMICQUALIFICATION LIST', ' Academic Qualification', 'INHERITED', 'H_EMPLOYEE LIST', NULL, 'HRM/H_AcademicQualificationList.aspx', 'False', 90)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_ACADEMICQUALIFICATION ADD', ' Academic Qualification', 'INHERITED', 'H_EMPLOYEE LIST', NULL, 'HRM/H_AcademicQualificationList.aspx', 'False', 100)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EXPERIENCE LIST', ' Experience', 'INHERITED', 'H_EMPLOYEE LIST', NULL, 'HRM/H_ExperienceList.aspx', 'False', 110)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EXPERIENCE ADD', ' Experience', 'INHERITED', 'H_EMPLOYEE LIST', NULL, 'HRM/H_ExperienceList.aspx', 'False', 120)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_PROFESSIONALQUALIFICATION LIST', ' Professional Qualification', 'INHERITED', 'H_EMPLOYEE LIST', NULL, 'HRM/H_ProfessionalQualificationList.aspx', 'False', 130)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_PROFESSIONALQUALIFICATION ADD', ' Professional Qualification', 'INHERITED', 'H_EMPLOYEE LIST', NULL, 'HRM/H_ProfessionalQualificationList.aspx', 'False', 140)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_TRAINING LIST', ' Training', 'INHERITED', 'H_EMPLOYEE LIST', NULL, 'HRM/H_TrainingList.aspx', 'False', 150)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_TRAINING ADD', ' Training', 'INHERITED', 'H_EMPLOYEE LIST', NULL, 'HRM/H_TrainingList.aspx', 'False', 160)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEETRANSFER LIST', ' Employee Transfer', 'OWN', NULL, NULL, 'HRM/H_EmployeeTransferList.aspx', 'True', 170)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEETRANSFER ADD', ' Employee Transfer', 'INHERITED', 'H_EMPLOYEETRANSFER LIST', NULL, 'HRM/H_EmployeeTransferAdd.aspx', 'False', 175)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEEPROMOTION ADD', ' Employee Promotion', 'OWN', NULL, NULL, 'HRM/H_EmployeePromotionAdd.aspx', 'True', 180)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEELEAVE ADD', ' Employee Leave', 'OWN', NULL, NULL, 'HRM/H_EmployeeLeaveAdd.aspx', 'True', 190)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEEDROP ADD', ' Employee Drop', 'OWN', NULL, NULL, 'HRM/H_EmployeeDropAdd.aspx', 'True', 200)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEEREJOIN ADD', ' Employee Rejoin', 'OWN', NULL, NULL, 'HRM/H_EmployeeRejoinAdd.aspx', 'True', 210)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEEREEMPLOYMENT ADD', ' Employee Reemployment', 'OWN', NULL, NULL, 'HRM/H_EmployeeReemploymentAdd.aspx', 'True', 220)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEEINCREMENTHELDUP ADD', ' Employee Increment Heldup', 'OWN', NULL, NULL, 'HRM/H_EmployeeIncrementHeldupAdd.aspx', 'True', 230)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEEWARNING ADD', ' Employee Warning', 'OWN', NULL, NULL, 'HRM/H_EmployeeWarningAdd.aspx', 'True', 240)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEEPENALTY ADD', ' Employee Penalty', 'OWN', NULL, NULL, 'HRM/H_EmployeePenaltyAdd.aspx', 'True', 250)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEEACTINGDESIGNATION ADD', ' Employee Acting Designation', 'OWN', NULL, NULL, 'HRM/H_EmployeeActingDesignationAdd.aspx', 'True', 260)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEEWAITINGFORPOSTING ADD', ' Employee Waiting For Posting', 'OWN', NULL, NULL, 'HRM/H_EmployeeWaitingForPostingAdd.aspx', 'True', 270)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEESALARY ADD', ' Employee Salary', 'OWN', NULL, NULL, 'HRM/H_EmployeeSalaryAdd.aspx', 'True', 280)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEESPECIALHONOR ADD', ' Employee Special Honor', 'OWN', NULL, NULL, 'HRM/H_EmployeeSpecialHonorAdd.aspx', 'True', 390)

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('REPORT', 'HRM REPORT', 'HRM Report', 'OWN', NULL, NULL, 'Reports/HRM_Report.aspx', 'True', 700)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('REPORT', 'QUICK SUMMARY', 'Quick Summary', 'OWN', NULL, NULL, 'Reports/QuickSummaryReport.aspx', 'True', 710)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('REPORT', 'LETTEROFIDCARD', 'Letter Of Id Card', 'OWN', NULL, NULL, 'Reports/LetterOfIdCard.aspx', 'True', 720)
    </script>
  </config>
  <config sequence="3003" type="FRESH" version="1.0.0" description="Command">
    <script provider="SQL Server">
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('ADD', 'Add', 'OWN', NULL, NULL, '~/Images/TBAdd.gif', '~/Images/TBSeperator.gif', NULL, 1)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('DELETE', 'Delete', 'OWN', NULL, NULL, '~/Images/TBDelete.gif', '~/Images/TBSeperator.gif', 'javascript:DeleteSelected();', 2)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('RESET PASSWORD', 'Reset Password', 'OWN', NULL, NULL, NULL, '~/Images/TBSeperator.gif', 'javascript:Confirm(''This will reset selected user(s) password. Do you want to continue?'', ''RESET PASSWORD'');', 7)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('EXCEL', 'Export', 'AUTO', NULL, NULL, '~/Images/TBExportToExcel.gif', '~/Images/TBSeperator.gif', NULL, 9)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('PRINT', 'Print', 'AUTO', NULL, NULL, '~/Images/Print.gif', '~/Images/TBSeperator.gif', NULL, 16)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('REFRESH', 'Refresh', 'AUTO', NULL, NULL, '~/Images/TBRefresh.gif', '~/Images/TBSeperator.gif', NULL, 8)

      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('SAVE', 'Save', 'OWN', NULL, NULL, '~/Images/TBSave.gif', '~/Images/TBSeperator.gif', NULL, 3)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('SAVE AND CLOSE', 'Save &amp; Close', 'INHERITED', 'SAVE', NULL, '~/Images/TBSaveClose.gif', '~/Images/TBSeperator.gif', NULL, 4)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('SAVE AND NEW', 'Save &amp; New', 'INHERITED', 'SAVE', NULL, '~/Images/TBSaveNew.gif', '~/Images/TBSeperator.gif', NULL, 5)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('SEARCH', 'Search', 'OWN', NULL, NULL, '~/Images/Search1.gif', '~/Images/TBSeperator.gif', NULL, 15)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('CANCEL', 'Cancel', 'AUTO', NULL, NULL, '~/Images/TBCancelChanges.gif', '~/Images/TBSeperator.gif', 'javascript:CancelForm();', 6)

      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('UPGRADE', 'Upgrade Database', 'OWN', NULL, NULL, NULL, '~/Images/TBSeperator.gif', NULL, 10)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('BACKUP', 'Backup Database', 'OWN', NULL, NULL, NULL, '~/Images/TBSeperator.gif', NULL, 11)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('RESTORE', 'Restore Database', 'OWN', NULL, NULL, NULL, '~/Images/TBSeperator.gif', NULL, 12)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('EXECUTE', 'Execute Script', 'OWN', NULL, NULL, NULL, '~/Images/TBSeperator.gif', NULL, 13)
      INSERT INTO Command(Name, DisplayName, PermissionType, PermissionCommand, ToolTipText, ImageUrl, SeperatorUrl, NavigateUrl, SortOrder) VALUES('SHRINK', 'Shrink Datasase', 'OWN', NULL, NULL, NULL, '~/Images/TBSeperator.gif', NULL, 14)
    </script>
  </config>
  <config sequence="3004" type="FRESH" version="1.0.0" description="PropertyCommand">
    <script provider="SQL Server">
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('ROLE LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('ROLE LIST', 'DELETE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('USER LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('USER LIST', 'DELETE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('USER LIST', 'RESET PASSWORD', 3)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('ROLE ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('ROLE ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('ROLE ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('ROLE ADD', 'CANCEL', 4)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('USER ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('USER ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('USER ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('USER ADD', 'CANCEL', 4)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('UPGRADE DATABASE', 'UPGRADE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('BACKUP DATABASE', 'BACKUP', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('RESTORE DATABASE', 'RESTORE', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('EXECUTE SCRIPT', 'EXECUTE', 4)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('SHRINK DATABASE', 'SHRINK', 5)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('SUBZONE LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('DISTRICT LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('ZONE LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('REGION LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('THANA LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('BRANCH LIST', 'ADD', 1)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('SUBZONE ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('SUBZONE ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('SUBZONE ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('DISTRICT ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('DISTRICT ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('DISTRICT ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('ZONE ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('ZONE ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('ZONE ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('REGION ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('REGION ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('REGION ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('THANA ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('THANA ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('THANA ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('BRANCH ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('BRANCH ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('BRANCH ADD', 'SAVE AND NEW', 3)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('CONFIG ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('CONFIG ADD', 'SAVE AND CLOSE', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('REPORTCONFIG LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('REPORTCONFIG LIST', 'DELETE', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('REPORTCONFIG ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('REPORTCONFIG ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('REPORTCONFIG ADD', 'SAVE AND NEW', 3)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_DEPARTMENT LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_DEPARTMENT LIST', 'DELETE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_DESIGNATION LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_DESIGNATION LIST', 'DELETE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEE LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEE LIST', 'DELETE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_GRADE LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_GRADE LIST', 'DELETE', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_DEPARTMENT ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_DEPARTMENT ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_DEPARTMENT ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_DESIGNATION ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_DESIGNATION ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_DESIGNATION ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEE ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEE ADD', 'CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName, SortOrder) VALUES('H_EMPLOYEE ADD', 'REFRESH','New', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_GRADE ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_GRADE ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_GRADE ADD', 'SAVE AND NEW', 3)

      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName, SortOrder) VALUES('H_ACADEMICQUALIFICATION LIST', 'ADD', 'Add Academic Qualification', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName,  SortOrder) VALUES('H_ACADEMICQUALIFICATION LIST', 'DELETE', 'Delete Academic Qualification', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName,  SortOrder) VALUES('H_EXPERIENCE LIST', 'ADD', 'Add Experience', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName,  SortOrder) VALUES('H_EXPERIENCE LIST', 'DELETE', 'Delete Experience' ,2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName,  SortOrder) VALUES('H_PROFESSIONALQUALIFICATION LIST', 'ADD', 'Add Professional Qualification', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName,  SortOrder) VALUES('H_PROFESSIONALQUALIFICATION LIST', 'DELETE', 'Delete Professional Qualification', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName,  SortOrder) VALUES('H_TRAINING LIST', 'ADD', 'Add Training', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName,  SortOrder) VALUES('H_TRAINING LIST', 'DELETE', 'Delete Training', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName, SortOrder) VALUES('H_ACADEMICQUALIFICATION ADD', 'SAVE', 'Save Academic Qualification', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_ACADEMICQUALIFICATION ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_ACADEMICQUALIFICATION ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName, SortOrder) VALUES('H_EXPERIENCE ADD', 'SAVE', 'Save Experience', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EXPERIENCE ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EXPERIENCE ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName, SortOrder) VALUES('H_PROFESSIONALQUALIFICATION ADD', 'SAVE', 'Save Professional Qualification', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_PROFESSIONALQUALIFICATION ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_PROFESSIONALQUALIFICATION ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, DisplayName, SortOrder) VALUES('H_TRAINING ADD', 'SAVE', 'Save Training', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_TRAINING ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_TRAINING ADD', 'SAVE AND NEW', 3)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEETRANSFER LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEETRANSFER ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEETRANSFER ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEPROMOTION ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEPROMOTION ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEELEAVE ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEELEAVE ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEDROP ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEDROP ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEREJOIN ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEREJOIN ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEREEMPLOYMENT ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEREEMPLOYMENT ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEINCREMENTHELDUP ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEINCREMENTHELDUP ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEWARNING ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEWARNING ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEPENALTY ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEPENALTY ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEACTINGDESIGNATION ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEACTINGDESIGNATION ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEWAITINGFORPOSTING ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEWAITINGFORPOSTING ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEESALARY ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEESALARY ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEESPECIALHONOR ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEESPECIALHONOR ADD', 'SAVE AND NEW', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('HRM REPORT', 'EXCEL', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('HRM REPORT', 'SEARCH', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('QUICK SUMMARY', 'EXCEL', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('LETTEROFIDCARD', 'PRINT', 1)
    </script>
  </config>
  <config sequence="3005" type="FRESH" version="1.0.0" description="Role">
    <script provider="SQL Server">
      INSERT INTO Role(Name) VALUES('Admin')
    </script>
  </config>
  <config sequence="3006" type="FRESH" version="1.0.0" description="User">
    <script provider="SQL Server">
      INSERT INTO [User](Login, Password, Name, IsActive) VALUES('admin', 'admin', 'Administrator', 'True')
    </script>
  </config>
  <config sequence="3007" type="FRESH" version="1.0.0" description="UserRole">
    <script provider="SQL Server">
      INSERT INTO UserRole(UserLogin, RoleName) VALUES('admin', 'Admin')
    </script>
  </config>
  <config sequence="3008" type="FRESH" version="1.0.0" description="RoleProperty">
    <script provider="SQL Server">
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'ROLE LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'USER LIST')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'UPGRADE DATABASE')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'BACKUP DATABASE')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'RESTORE DATABASE')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'EXECUTE SCRIPT')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'SHRINK DATABASE')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'DBTRANSACTION LIST')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'SUBZONE LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'DISTRICT LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'ZONE LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'REGION LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'THANA LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'BRANCH LIST')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'CONFIG LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'REPORTCONFIG LIST')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_DEPARTMENT LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_DESIGNATION LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEE LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_GRADE LIST')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_ACADEMICQUALIFICATION LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EXPERIENCE LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_PROFESSIONALQUALIFICATION LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_TRAINING LIST')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEETRANSFER LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEETRANSFER ADD')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEPROMOTION ADD')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEELEAVE ADD')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEDROP ADD')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEREJOIN ADD')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEREEMPLOYMENT ADD')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEINCREMENTHELDUP ADD')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEWARNING ADD')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEPENALTY ADD')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEACTINGDESIGNATION ADD')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEWAITINGFORPOSTING ADD')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEESALARY ADD')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEESPECIALHONOR ADD')

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'HRM REPORT')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'QUICK SUMMARY')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'LETTEROFIDCARD')
    </script>
  </config>
  <config sequence="3009" type="FRESH" version="1.0.0" description="RoleCommand">
    <script provider="SQL Server">
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'ROLE LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'ROLE LIST', 'DELETE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'USER LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'USER LIST', 'DELETE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'USER LIST', 'RESET PASSWORD')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'ROLE ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'USER ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'UPGRADE DATABASE', 'UPGRADE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'BACKUP DATABASE', 'BACKUP')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'RESTORE DATABASE', 'RESTORE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'EXECUTE SCRIPT', 'EXECUTE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'SHRINK DATABASE', 'SHRINK')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'SUBZONE LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'DISTRICT LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'ZONE LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'REGION LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'THANA LIST', 'ADD')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'SUBZONE ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'DISTRICT ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'ZONE ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'REGION ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'THANA ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'BRANCH LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'BRANCH ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'CONFIG ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'REPORTCONFIG LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'REPORTCONFIG LIST', 'DELETE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'REPORTCONFIG ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_DEPARTMENT LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_DEPARTMENT LIST', 'DELETE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_DESIGNATION LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_DESIGNATION LIST', 'DELETE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEE LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEE LIST', 'DELETE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_GRADE LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_GRADE LIST', 'DELETE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_DEPARTMENT ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_DESIGNATION ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEE ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_GRADE ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_ACADEMICQUALIFICATION LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_ACADEMICQUALIFICATION LIST', 'DELETE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EXPERIENCE LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EXPERIENCE LIST', 'DELETE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_PROFESSIONALQUALIFICATION LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_PROFESSIONALQUALIFICATION LIST', 'DELETE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_TRAINING LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_TRAINING LIST', 'DELETE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_ACADEMICQUALIFICATION ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EXPERIENCE ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_PROFESSIONALQUALIFICATION ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_TRAINING ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEETRANSFER LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEETRANSFER ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEPROMOTION ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEELEAVE ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEDROP ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEREJOIN ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEREEMPLOYMENT ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEINCREMENTHELDUP ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEWARNING ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEPENALTY ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEACTINGDESIGNATION ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEWAITINGFORPOSTING ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEESALARY ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEESPECIALHONOR ADD', 'SAVE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'HRM REPORT', 'EXCEL')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'HRM REPORT', 'SEARCH')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'QUICK SUMMARY', 'EXCEL')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'LETTEROFIDCARD', 'PRINT')
    </script>
  </config>
  <config sequence="3010" type="FRESH" version="1.0.0" description="Config">
    <script provider="SQL Server">
      INSERT INTO Config([Key], [Name], [DataType], [ReadableDataType], [Value]) VALUES('DECIMAL PLACE', 'Decimal Place', 'System.Int32', 'Integer', '0')
      INSERT INTO Config([Key], [Name], [DataType], [ReadableDataType], [Value]) VALUES('DAYS IN YEAR', 'Days In Year', 'System.Int32', 'Integer', '360')
      INSERT INTO Config([Key], [Name], [DataType], [ReadableDataType], [Value]) VALUES('REPORT EXTENSION', 'Report Extension', 'System.String', 'Text', '.xls')
      INSERT INTO Config([Key], [Name], [DataType], [ReadableDataType], [Value]) VALUES('ENABLE AUDIT', 'Enable Audit', 'System.Boolean', 'Boolean', 'True')
      INSERT INTO Config([Key], [Name], [DataType], [ReadableDataType], [Value]) VALUES('AUDIT DURATION', 'Audit Duration', 'System.Int32', 'Integer', '7')
      INSERT INTO Config([Key], [Name], [DataType], [ReadableDataType], [Value]) VALUES('ENABLE BLOCK', 'Enable Block', 'System.Boolean', 'Boolean', 'True')
      INSERT INTO Config([Key], [Name], [DataType], [ReadableDataType], [Value]) VALUES('BLOCK DURATION', 'Block Duration', 'System.Int32', 'Integer', '30')
      INSERT INTO Config([Key], [Name], [DataType], [ReadableDataType], [Value]) VALUES('YEAR ENDING MONTH', 'Year Ending Month', 'System.Int32', 'Integer', '12')
    </script>
  </config>
  <config sequence="3011" type="FRESH" version="1.0.0" description="District">
    <script provider="SQL Server">
      SET IDENTITY_INSERT [District] ON;
      INSERT INTO District (Id, Name) VALUES (1,'Bagerhat')
      INSERT INTO District (Id, Name) VALUES (2,'Bandarban')
      INSERT INTO District (Id, Name) VALUES (3,'Barguna')
      INSERT INTO District (Id, Name) VALUES (4,'Barishal')
      INSERT INTO District (Id, Name) VALUES (5,'Bhola')
      INSERT INTO District (Id, Name) VALUES (6,'Bogra')
      INSERT INTO District (Id, Name) VALUES (7,'Brahmanbaria')
      INSERT INTO District (Id, Name) VALUES (8,'Chandpur')
      INSERT INTO District (Id, Name) VALUES (9,'Chapai Nawabganj')
      INSERT INTO District (Id, Name) VALUES (10,'Chittagong')
      INSERT INTO District (Id, Name) VALUES (11,'Chuadanga')
      INSERT INTO District (Id, Name) VALUES (12,'Comilla')
      INSERT INTO District (Id, Name) VALUES (13,'Coxs Bazar')
      INSERT INTO District (Id, Name) VALUES (14,'Dhaka')
      INSERT INTO District (Id, Name) VALUES (16,'Dinajpur')
      INSERT INTO District (Id, Name) VALUES (17,'Faridpur')
      INSERT INTO District (Id, Name) VALUES (18,'Feni')
      INSERT INTO District (Id, Name) VALUES (19,'Gaibandha')
      INSERT INTO District (Id, Name) VALUES (20,'Gazipur')
      INSERT INTO District (Id, Name) VALUES (21,'Gopalganj')
      INSERT INTO District (Id, Name) VALUES (22,'Habiganj')
      INSERT INTO District (Id, Name) VALUES (23,'Jamalpur')
      INSERT INTO District (Id, Name) VALUES (24,'Jessore ')
      INSERT INTO District (Id, Name) VALUES (25,'Jhalakati')
      INSERT INTO District (Id, Name) VALUES (26,'Jhenaidaha')
      INSERT INTO District (Id, Name) VALUES (27,'Joypurhat')
      INSERT INTO District (Id, Name) VALUES (28,'Khagrachhari')
      INSERT INTO District (Id, Name) VALUES (29,'Khulna')
      INSERT INTO District (Id, Name) VALUES (30,'Kishoreganj')
      INSERT INTO District (Id, Name) VALUES (31,'Kurigram')
      INSERT INTO District (Id, Name) VALUES (32,'Kushtia')
      INSERT INTO District (Id, Name) VALUES (33,'Lakshmipur')
      INSERT INTO District (Id, Name) VALUES (34,'Lalmonirhat')
      INSERT INTO District (Id, Name) VALUES (35,'Madaripur')
      INSERT INTO District (Id, Name) VALUES (36,'Magura')
      INSERT INTO District (Id, Name) VALUES (37,'Manikganj')
      INSERT INTO District (Id, Name) VALUES (38,'Meherpur')
      INSERT INTO District (Id, Name) VALUES (39,'Moulvibazar')
      INSERT INTO District (Id, Name) VALUES (40,'Munshiganj')
      INSERT INTO District (Id, Name) VALUES (41,'Mymensingh')
      INSERT INTO District (Id, Name) VALUES (42,'Naogaon')
      INSERT INTO District (Id, Name) VALUES (43,'Narail')
      INSERT INTO District (Id, Name) VALUES (44,'Narayangonj')
      INSERT INTO District (Id, Name) VALUES (45,'Narsingdi')
      INSERT INTO District (Id, Name) VALUES (46,'Natore')
      INSERT INTO District (Id, Name) VALUES (47,'Netrakona')
      INSERT INTO District (Id, Name) VALUES (48,'Nilphamari')
      INSERT INTO District (Id, Name) VALUES (49,'Noakhali')
      INSERT INTO District (Id, Name) VALUES (50,'Pabna')
      INSERT INTO District (Id, Name) VALUES (51,'Panchagarh')
      INSERT INTO District (Id, Name) VALUES (52,'Patuakhali')
      INSERT INTO District (Id, Name) VALUES (53,'Pirojpur')
      INSERT INTO District (Id, Name) VALUES (54,'Rajbari')
      INSERT INTO District (Id, Name) VALUES (55,'Rajshahi')
      INSERT INTO District (Id, Name) VALUES (56,'Rangamati')
      INSERT INTO District (Id, Name) VALUES (57,'Rangpur')
      INSERT INTO District (Id, Name) VALUES (58,'Satkhira')
      INSERT INTO District (Id, Name) VALUES (59,'Shariatpur')
      INSERT INTO District (Id, Name) VALUES (60,'Sherpur')
      INSERT INTO District (Id, Name) VALUES (61,'Sirajganj')
      INSERT INTO District (Id, Name) VALUES (62,'Sunamganj')
      INSERT INTO District (Id, Name) VALUES (63,'Sylhet')
      INSERT INTO District (Id, Name) VALUES (64,'Tangail')
      INSERT INTO District (Id, Name) VALUES (65,'Thakurgaon')
      SET IDENTITY_INSERT [District] OFF;
    </script>
  </config>
  <config sequence="3012" type="FRESH" version="1.0.0" description="Thana">
    <script provider="SQL Server">
      SET IDENTITY_INSERT [Thana] ON;
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(1, 14, 'CENTRAL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(2, 3, 'AMTALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(3, 3, 'BAMNA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(4, 3, 'BARGUNA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(5, 3, 'BETAGI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(6, 3, 'PATHARGHATA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(7, 4, 'AGAILJHARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(8, 4, 'BAKERGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(9, 4, 'GAURNADI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(10, 4, 'MEHENDIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(11, 5, 'BHOLA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(12, 5, 'BURHANUDDIN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(13, 5, 'CHAR FASSON')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(14, 5, 'DAULATKHAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(15, 5, 'LALMOHAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(16, 5, 'MANPURA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(17, 5, 'TAZUMUDDIN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(18, 25, 'JHALAKATI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(19, 25, 'KATHALIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(20, 25, 'NALCHITY')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(21, 25, 'RAJAPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(22, 52, 'BAUPHAL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(23, 52, 'DASMINA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(24, 52, 'GALACHIPA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(25, 52, 'KALAPARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(26, 52, 'MIRZAGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(27, 52, 'PATUAKHALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(28, 52, 'DUMKI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(29, 53, 'BHANDARIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(30, 53, 'KAWKHALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(31, 53, 'MATHBARIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(32, 53, 'NAZIRPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(33, 53, 'NESARABAD (SWARUPKATI)')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(34, 53, 'PIROJPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(35, 2, 'BANDARBAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(36, 2, 'LAMA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(37, 2, 'NAIKHONGCHHARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(38, 2, 'ROWANGCHHARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(39, 2, 'ALIKADAM')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(40, 7, 'AKHAURA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(41, 7, 'ASHUGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(42, 7, 'BANCHARAMPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(43, 7, 'BRAHMANBARIA SADAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(44, 7, 'KASBA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(45, 7, 'NABINAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(46, 7, 'NASIRNAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(47, 7, 'SARAIL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(48, 8, 'CHANDPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(49, 8, 'FARIDGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(50, 8, 'HAIMCHAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(51, 8, 'HAZIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(52, 8, 'KACHUA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(53, 8, 'MATLAB')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(54, 8, 'SHAHRASTI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(55, 10, 'ANWARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(56, 10, 'BANSHKHALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(57, 10, 'BOALKHALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(58, 10, 'CHANDANAISH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(59, 10, 'CHANDGAON')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(60, 10, 'DOUBLE MOORING')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(61, 10, 'FATIKCHHARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(62, 10, 'HATHAZARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(63, 10, 'KOTWALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(64, 10, 'LOHAGARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(65, 10, 'MIRSHARAI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(66, 10, 'PAHARTALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(67, 10, 'PANCHLAISH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(68, 10, 'PATIYA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(69, 10, 'RANGUNIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(70, 10, 'RAOZAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(71, 10, 'SANDWIP')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(72, 10, 'SATKANIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(73, 10, 'SITAKUNDA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(74, 10, 'PATENGA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(75, 10, 'BIAJIT BOSTAMI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(76, 10, 'HALI SHAHAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(77, 10, 'BANDAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(78, 10, 'KARNAFULI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(79, 10, 'KHULSHI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(80, 10, 'BAKULIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(81, 10, 'EAST JOARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(82, 12, 'BARURA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(83, 12, 'BRAHMANPARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(84, 12, 'BURICHANG')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(85, 12, 'CHANDINA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(86, 12, 'CHAUDDAGRAM')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(87, 12, 'COMILLA SADAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(88, 12, 'DAUDKANDI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(89, 12, 'DEBIDWAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(90, 12, 'HOMNA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(91, 12, 'LAKSAM')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(92, 12, 'MURADNAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(93, 12, 'NANGALKOT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(94, 12, 'MEGNA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(95, 12, 'TITASH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(96, 12, 'MANOHARGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(97, 12, 'KOTWALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(98, 13, 'CHAKARIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(99, 13, 'COXS BAZAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(100, 13, 'KUTUBDIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(101, 13, 'MAHESHKHALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(102, 13, 'RAMU')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(103, 13, 'TEKNAF')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(104, 13, 'UKHIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(105, 13, 'PEKUA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(106, 18, 'CHHAGALNAIYA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(107, 18, 'DAGANBHUIYAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(108, 18, 'FENI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(109, 18, 'PARSHURAM')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(110, 18, 'SONAGAZI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(111, 18, 'FULGAZI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(112, 28, 'DIGHINALA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(113, 28, 'KHAGRACHHARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(114, 28, 'MAHALCHHARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(115, 28, 'MANIKCHHARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(116, 28, 'MATIRANGA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(117, 28, 'PANCHHARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(118, 28, 'RAMGARH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(119, 33, 'LAKSHMIPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(120, 33, 'RAIPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(121, 33, 'RAMGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(122, 33, 'RAMGATI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(123, 49, 'BEGUMGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(124, 49, 'CHATKHIL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(125, 49, 'COMPANIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(126, 49, 'HATIYA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(127, 49, 'NOAKHALI (SUDHARAM)')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(128, 49, 'SENBAGH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(129, 49, 'SONAIMURI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(130, 56, 'BAGHAICHHARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(131, 56, 'KAPTAI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(132, 56, 'KAWKHALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(133, 56, 'LANGADU')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(134, 56, 'RAJASTHALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(135, 56, 'RANGAMATI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(136, 14, 'CANTONMENT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(137, 14, 'TURAG')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(138, 14, 'DEMRA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(139, 14, 'UTTAR KHAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(140, 14, 'ADABAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(141, 14, 'DHAMRAI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(142, 14, 'ASHULIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(143, 14, 'DHANMONDI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(144, 14, 'AZAMPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(145, 14, 'DOHAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(146, 14, 'DAKSHIN KHAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(147, 14, 'GULSHAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(148, 14, 'JATRABARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(149, 14, 'KERANIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(150, 14, 'KHILKSHET')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(151, 14, 'KOTWALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(152, 14, 'LALBAGH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(153, 14, 'PALTAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(154, 14, 'MIRPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(155, 14, 'MOHAMMADPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(156, 14, 'MOTIJHEEL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(157, 14, 'NAWABGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(158, 14, 'PALLABI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(159, 14, 'RAMNA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(160, 14, 'SABUJBAGH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(161, 14, 'SAVAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(162, 14, 'SUTRAPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(163, 14, 'TEJGAON')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(164, 14, 'UTTARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(165, 14, 'BADDA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(166, 14, 'KAFRUL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(167, 14, 'HAJARIBAG')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(168, 14, 'SHAMPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(169, 14, 'KAMRANGIRCHAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(170, 14, 'KHILGAON')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(171, 17, 'ALFADANGA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(172, 17, 'BHANGA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(173, 17, 'BOALMARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(174, 17, 'CHARBHADRASAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(175, 17, 'FARIDPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(176, 17, 'MADHUKHALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(177, 17, 'NAGARKANDA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(178, 17, 'SADARPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(179, 17, 'SALTHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(180, 20, 'GAZIPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(181, 20, 'KALIAKAIR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(182, 20, 'KALIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(183, 20, 'KAPASIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(184, 20, 'SREEPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(185, 20, 'TONGI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(186, 20, 'JOYDEBPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(187, 21, 'GOPALGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(188, 21, 'KASHIANI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(189, 21, 'KOTALIPARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(190, 21, 'MUKSUDPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(191, 21, 'TUNGIPARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(192, 23, 'NANDINA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(193, 23, 'BAKSIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(194, 23, 'DEWANGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(195, 23, 'ISLAMPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(196, 23, 'JAMALPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(197, 23, 'MADARGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(198, 23, 'MELANDAHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(199, 23, 'SARISHABARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(200, 30, 'ASTAGRAM')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(201, 30, 'BAJITPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(202, 30, 'BHAIRAB')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(203, 30, 'HOSSAINPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(204, 30, 'ITNA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(205, 30, 'KARIMGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(206, 30, 'KATIADI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(207, 30, 'KISHOREGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(208, 30, 'KULIARCHAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(209, 30, 'MITHAMAIN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(210, 30, 'NIKLI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(211, 30, 'PAKUNDIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(212, 30, 'TARAIL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(213, 35, 'KALKINI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(214, 35, 'MADARIPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(215, 35, 'RAJOIR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(216, 35, 'SHIBCHAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(217, 37, 'DAULATPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(218, 37, 'GHIOR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(219, 37, 'HARIRAMPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(220, 37, 'MANIKGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(221, 37, 'SATURIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(222, 37, 'SHIBALAYA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(223, 37, 'SINGAIR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(224, 40, 'GAZARIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(225, 40, 'LOUHAJANG')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(226, 40, 'MUNSHIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(227, 40, 'SIRAJDIKHAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(228, 40, 'SREENAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(229, 40, 'TONGIBARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(230, 41, 'BHALUKA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(231, 41, 'DHOBAURA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(232, 41, 'GAFFARGAON')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(233, 41, 'GOURIPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(234, 41, 'HALUAGHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(235, 41, 'ISHWARGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(236, 41, 'MUKTAGACHHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(237, 41, 'MYMENSINGH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(238, 41, 'NANDAIL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(239, 41, 'PHULBARIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(240, 41, 'PHULPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(241, 41, 'TRISHAL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(242, 41, 'TARAKANDA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(243, 44, 'ARAIHAZAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(244, 44, 'BANDAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(245, 44, 'NARAYANGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(246, 44, 'RUPGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(247, 44, 'SONARGAON')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(248, 44, 'FATULLA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(249, 44, 'SIDDIRGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(250, 45, 'BELABO')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(251, 45, 'MONOHARDI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(252, 45, 'NARSINGDI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(253, 45, 'PALASH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(254, 45, 'RAIPURA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(255, 45, 'SHIBPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(256, 47, 'DHOBAURA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(257, 47, 'ATPARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(258, 47, 'BARHATTA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(259, 47, 'DURGAPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(260, 47, 'KALMAKANDA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(261, 47, 'KENDUA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(262, 47, 'KHALIAJURI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(263, 47, 'MADAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(264, 47, 'MOHANGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(265, 47, 'NETROKONA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(266, 47, 'PURBADHALA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(267, 54, 'BALIAKANDI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(268, 54, 'GOALANDAGHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(269, 54, 'PANGSHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(270, 54, 'RAJBARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(271, 59, 'JAJIRA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(272, 59, 'GOSAIRHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(273, 59, 'SHARIATPUR (PALANG)')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(274, 60, 'JHENAIGATI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(275, 60, 'NAKLA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(276, 60, 'NALITABARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(277, 60, 'SHERPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(278, 60, 'SREEBARDI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(279, 64, 'BASAIL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(280, 64, 'BHUAPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(281, 64, 'DELDUAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(282, 64, 'GHATAIL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(283, 64, 'GOPALPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(284, 64, 'KALIHATI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(285, 64, 'MADHUPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(286, 64, 'MIRZAPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(287, 64, 'NAGARPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(288, 64, 'SAKHIPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(289, 64, 'TANGAIL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(290, 64, 'DHANBARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(291, 1, 'BAGERHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(292, 1, 'CHITALMARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(293, 1, 'FAKIRHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(294, 1, 'KACHUA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(295, 1, 'MOLLAHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(296, 1, 'MONGLA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(297, 1, 'MORRELGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(298, 1, 'RAMPAL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(299, 1, 'SARANKHOLA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(300, 11, 'ALAMDANGA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(301, 11, 'CHUADANGA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(302, 11, 'DAMURHUDA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(303, 11, 'JIBANNAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(304, 24, 'ABHAYNAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(305, 24, 'BAGHERPARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(306, 24, 'CHAUGACHHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(307, 24, 'JESSORE')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(308, 24, 'JHIKARGACHHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(309, 24, 'KESHABPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(310, 24, 'MANIRAMPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(311, 24, 'SHARSHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(312, 26, 'HARINAKUNDA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(313, 26, 'JHENAIDAHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(314, 26, 'KALIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(315, 26, 'KOTCHANDPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(316, 26, 'MAHESHPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(317, 26, 'SHAILKUPA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(318, 29, 'BATIAGHATA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(319, 29, 'DACOPE')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(320, 29, 'DAULATPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(321, 29, 'DIGHALIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(322, 29, 'DUMURIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(323, 29, 'KHALISHPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(324, 29, 'KHAN JAHAN ALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(325, 29, 'KHULNA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(326, 29, 'KOYRA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(327, 29, 'PAIKGACHHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(328, 29, 'PHULTALA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(329, 29, 'RUPSA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(330, 29, 'SONADANGA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(331, 29, 'TEROKHADA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(332, 32, 'BHERAMARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(333, 32, 'DAULATPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(334, 32, 'KHOKSA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(335, 32, 'KUMARKHALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(336, 32, 'KUSHTIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(337, 32, 'MIRPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(338, 36, 'MAGURA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(339, 36, 'MOHAMMADPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(340, 36, 'SHALIKHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(341, 36, 'SREEPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(342, 38, 'GANGNI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(343, 38, 'MEHERPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(344, 38, 'MUJIB NAGER')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(345, 43, 'KALIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(346, 43, 'LOHAGARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(347, 43, 'NARAIL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(348, 43, 'NARAGATI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(349, 58, 'ASSASUNI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(350, 58, 'DEBHATA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(351, 58, 'KALAROA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(352, 58, 'KALIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(353, 58, 'SATKHIRA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(354, 58, 'SHYAMNAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(355, 58, 'TALA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(356, 6, 'ADAMDIGHI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(357, 6, 'BOGRA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(358, 6, 'DHUNAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(359, 6, 'DUPCHANCHIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(360, 6, 'GABTALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(361, 6, 'KAHALOO')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(362, 6, 'NANDIGRAM')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(363, 6, 'SARIAKANDI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(364, 6, 'SHERPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(365, 6, 'SHIBGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(366, 6, 'SONATALA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(367, 6, 'SHAHJAHANPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(368, 9, 'BHOLAHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(369, 9, 'CHAPAI NAWABGONJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(370, 9, 'GOMASTAPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(371, 9, 'NACHOLE')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(372, 9, 'SHIBGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(373, 16, 'SETABGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(374, 16, 'BIRAL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(375, 16, 'BIRAMPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(376, 16, 'BIRGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(377, 16, 'BOCHAGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(378, 16, 'CHIRIRBANDAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(379, 16, 'DINAJPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(380, 16, 'GHORAGHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(381, 16, 'HAKIMPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(382, 16, 'KAHAROLE')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(383, 16, 'KHANSAMA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(384, 16, 'NAWABGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(385, 16, 'PARBATIPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(386, 16, 'PHULBARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(387, 19, 'GAIBANDHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(388, 19, 'GOBINDAGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(389, 19, 'PALASHBARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(390, 19, 'PHULCHHARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(391, 19, 'SADULLAPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(392, 19, 'SAGHATTA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(393, 19, 'SUNDARGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(394, 27, 'AKKELPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(395, 27, 'JOYPURHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(396, 27, 'KALAI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(397, 27, 'KHETLAL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(398, 27, 'PANCHBIBI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(399, 31, 'BHURUNGAMARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(400, 31, 'CHAR RAJIBPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(401, 31, 'CHILMARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(402, 31, 'KURIGRAM')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(403, 31, 'NAGESHWARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(404, 31, 'PHULBARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(405, 31, 'RAJARHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(406, 31, 'RAOMARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(407, 31, 'ULIPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(408, 34, 'ADITMARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(409, 34, 'HATIBANDHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(410, 34, 'KALIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(411, 34, 'LALMONIRHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(412, 34, 'PATGRAM')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(413, 42, 'ATRAI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(414, 42, 'BADALGACHHI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(415, 42, 'DHAMOIRHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(416, 42, 'MAHADEBPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(417, 42, 'MANDA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(418, 42, 'NAOGAON')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(419, 42, 'NIAMATPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(420, 42, 'PATNITALA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(421, 42, 'PORSHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(422, 42, 'RANINAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(423, 42, 'SAPAHAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(424, 46, 'BAGATIPARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(425, 46, 'BARAIGRAM')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(426, 46, 'GURUDASPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(427, 46, 'HARUA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(428, 46, 'LAKSHMAN')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(429, 46, 'LALPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(430, 46, 'NATORE')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(431, 46, 'NOLDANGA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(432, 46, 'SINGRA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(433, 48, 'DIMLA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(434, 48, 'DOMAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(435, 48, 'JALDHAKA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(436, 48, 'KISHOREGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(437, 48, 'NILPHAMARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(438, 48, 'SAIDPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(439, 50, 'ATAIKULA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(440, 50, 'ATGHARIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(441, 50, 'BANGURA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(442, 50, 'BANWARINAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(443, 50, 'BERA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(444, 50, 'CHATMOHAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(445, 50, 'FARIDPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(446, 50, 'ISHWARDI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(447, 50, 'PABNA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(448, 50, 'SANTHIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(449, 50, 'SUJANAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(450, 51, 'ATWARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(451, 51, 'BODA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(452, 51, 'DEBIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(453, 51, 'PANCHAGARH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(454, 51, 'TETULIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(455, 55, 'BAGHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(456, 55, 'BAGMARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(457, 55, 'BOALIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(458, 55, 'CHARGHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(459, 55, 'DURGAPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(460, 55, 'GODAGARI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(461, 55, 'MOHANPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(462, 55, 'MOTHIHAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(463, 55, 'PABA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(464, 55, 'PUTHIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(465, 55, 'RAJPARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(466, 55, 'SHAH MAKDAM')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(467, 55, 'TANORE')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(468, 57, 'BADARGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(469, 57, 'GANGACHHARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(470, 57, 'KAUNIA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(471, 57, 'KOTWALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(472, 57, 'MITHAPUKUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(473, 57, 'PIRGACHHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(474, 57, 'PIRGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(475, 57, 'RANGPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(476, 57, 'TARAGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(477, 61, 'ANAYETPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(478, 61, 'BELKUCHI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(479, 61, 'CHAUHALI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(480, 61, 'KAMARKHANDA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(481, 61, 'KAZIPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(482, 61, 'RAIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(483, 61, 'SHAHJADPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(484, 61, 'SHALANGA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(485, 61, 'SIRAJGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(486, 61, 'TARASH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(487, 61, 'ULLAPARA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(488, 65, 'BALIADANGI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(489, 65, 'HARIPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(490, 65, 'PIRGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(491, 65, 'RANISANKAIL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(492, 65, 'THAKURGAON')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(493, 22, 'AJMIRIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(494, 22, 'BAHUBAL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(495, 22, 'BANIACHONG')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(496, 22, 'CHUNARUGHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(497, 22, 'HABIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(498, 22, 'LAKHAI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(499, 22, 'MADHABPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(500, 22, 'NABIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(501, 22, 'SHAISTAGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(502, 39, 'BARLEKHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(503, 39, 'JURI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(504, 39, 'KAMALGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(505, 39, 'KULAURA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(506, 39, 'MOULVIBAZAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(507, 39, 'RAJNAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(508, 39, 'SREEMANGAL')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(509, 62, 'BISHAMBARPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(510, 62, 'CHHATAK')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(511, 62, 'DERAI')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(512, 62, 'DHARAMPASHA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(513, 62, 'DOWARABAZAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(514, 62, 'JAGANNATHPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(515, 62, 'JAMALGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(516, 62, 'MADHAYANAGAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(517, 62, 'SULLAH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(518, 62, 'SUNAMGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(519, 62, 'TAHIRPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(520, 63, 'BEANIBAZAR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(521, 63, 'BELAGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(522, 63, 'BISHWANATH')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(523, 63, 'COMPANIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(524, 63, 'DAKKHIN SURMA')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(525, 63, 'FENCHUGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(526, 63, 'GOLABGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(527, 63, 'GOWAINGHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(528, 63, 'JAINTIAPUR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(529, 63, 'KANAIGHAT')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(530, 63, 'OSMANINAGOR')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(531, 63, 'SYLHET')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(532, 63, 'ZAKIGANJ')
      INSERT INTO Thana(Id, DistrictId, Name) VALUES(533, 14, 'KALABAGAN')
      SET IDENTITY_INSERT [Thana] OFF;
    </script>
  </config>
  <config sequence="3013" type="FRESH" version="1.0.0" description="Zone">
    <script provider="SQL Server">
      SET IDENTITY_INSERT [Zone] ON;
      INSERT INTO Zone(Id, Name,Status) VALUES (8, 'Barisal',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (9, 'Bogra',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (10, 'Chittagong',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (11, 'Comilla',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (12, 'Dhaka',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (13, 'Dinajp0ur',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (14, 'Faridpur',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (15, 'Gazipur',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (16, 'Jessore',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (17, 'khulna',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (18, 'Moulavibazar',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (19, 'Mymensingh',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (20, 'Rajshahi',1)
      INSERT INTO Zone(Id, Name,Status) VALUES (21, 'Rangpur',1)
      SET IDENTITY_INSERT [Zone] OFF;
    </script>
  </config>
  <config sequence="3014" type="FRESH" version="1.0.0" description="Subzone">
    <script provider="SQL Server">
      SET IDENTITY_INSERT [Subzone] ON;
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(66,17,'Bagerhat',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(67,8,'Barguna',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(68,8,'Barisal',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(69,8,'Barisal-Uzirpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(70,8,'Bhola',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(71,8,'Bhola-Lalmohan',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(72,9,'Bogra',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(73,9,'Bogra-Sherpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(74,18,'Brahmanbaria',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(75,18,'Brahmanbaria-Ashugonj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(76,11,'Chandpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(77,20,'Chapai Nawabganj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(78,10,'Chittagong',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(79,10,'Chittagong-Halishahar',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(80,16,'Chuadanga',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(81,11,'Comilla',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(82,11,'Comilla-Chandina',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(83,10,'Coxs Bazar',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(84,12,'Dhaka-Khilgaon',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(85,12,'Dhaka-Saver',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(86,12,'Dhaka-Shyamoli',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(87,13,'Dinajpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(88,13,'Dinajpur-Birampur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(89,14,'Faridpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(90,10,'Feni',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(91,21,'Gaibandha',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(92,21,'Gaibandha-Palashbari',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(93,15,'Gazipur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(94,15,'Gazipur-Kapasia',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(95,14,'Gopalganj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(96,18,'Habiganj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(97,19,'Jamalpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(98,19,'Jamalpur-Dewangonj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(99,16,'Jessore',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(100,16,'Jessore-Chacra',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(101,8,'Jhalakati',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(102,16,'Jhenaidaha ',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(103,9,'Joypurhat',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(104,17,'Khulna',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(105,17,'Khulna-Chuknagar',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(106,15,'Kishorganj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(107,15,'Kishorganj-Bhairab',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(108,21,'Kurigram',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(109,16,'Kushtia',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(110,16,'Kushtia-Veramara',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(111,11,'Lakshmipur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(112,21,'Lalmonirhat',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(113,14,'Madaripur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(114,16,'Magura',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(115,12,'Manikganj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(116,16,'Meherpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(117,18,'Moulavibazar',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(118,12,'Munshiganj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(119,19,'Mymensingh',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(120,19,'Mymensingh-Shomvogonj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(121,9,'Naogaon',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(122,9,'Naogaon-Nojipur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(123,17,'Narail',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(124,12,'Narayanganj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(125,12,'Narayanganj-Chittagong Road',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(126,15,'Narsingdi',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(127,15,'Narsingdi-Shibpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(128,20,'Natore',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(129,19,'Netrokona',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(130,19,'Netrokona-Barhatta',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(131,13,'Nilphamari',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(132,13,'Nilphamari-Joldhaka',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(133,11,'Noakhali',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(134,20,'Pabna',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(135,20,'Pabna-Sathia',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(136,13,'Panchagarh',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(137,8,'Patuakhali',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(138,8,'Patuakhali-Galachipa',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(139,17,'Pirojpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(140,14,'Rajbari',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(141,20,'Rajshahi',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(142,20,'Rajshahi-Putia',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(143,21,'Rangpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(144,21,'Rangpur-Mithapukur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(145,17,'Satkhira ',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(146,14,'Shariatpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(147,19,'Sherpur',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(148,9,'Sirajganj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(149,18,'Sunamganj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(150,18,'Sylhet',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(151,18,'Sylhet-Golapganj',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(152,15,'Tangail',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(153,15,'Tangail-Ghatail',1);
      INSERT INTO Subzone(Id, ZoneId, Name,Status) VALUES(154,13,'Thakurgaon',1);
      SET IDENTITY_INSERT [Subzone] OFF;
    </script>
  </config>
  <config sequence="3015" type="FRESH" version="1.0.0" description="Region">
    <script provider="SQL Server">
      SET IDENTITY_INSERT [Region] ON;
      INSERT INTO Region(Id, SubzoneId, Name,Status) VALUES(1,66,'Test Region',1);
      --TODO
      SET IDENTITY_INSERT [Region] OFF;
    </script>
  </config>
  <config sequence="3016" type="FRESH" version="1.0.0" description="Branch">
    <script provider="SQL Server">
      SET IDENTITY_INSERT Branch ON
      INSERT INTO Branch(Id, ThanaId, RegionId, Code, Name, BranchType, OpeningDate, MobileNumber, Status, LocationType) VALUES(1, 1, 1, 1, 'Test Branch', 1, '1990-01-01', '01730098103', 1, 1)
      SET IDENTITY_INSERT Branch OFF
    </script>
  </config>
  <config sequence="3017" type="FRESH" version="1.0.0" description="H_Department">
    <script provider="SQL Server">
      INSERT INTO H_Department (Name, SortOrder) VALUES('Accounts', 10)
      INSERT INTO H_Department (Name, SortOrder) VALUES('ASA International', 20)
      INSERT INTO H_Department (Name, SortOrder) VALUES('ASA Tower', 30)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Audit &amp; Income Tax', 40)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Documentation', 50)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Documentation &amp; Publication', 60)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Finance &amp; MIS', 70)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Human Resource', 80)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Information Technology', 90)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Legal Affairs', 100)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Logistic', 110)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Management Monitoring', 120)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Operations', 130)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Program', 140)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Research &amp; Evaluation', 150)
      INSERT INTO H_Department (Name, SortOrder) VALUES('Training', 160)
    </script>
  </config>
  <config sequence="3018" type="FRESH" version="1.0.0" description="H_Grade">
    <script provider="SQL Server">
      SET IDENTITY_INSERT H_Grade ON
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(1, 'Special', 10)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(2, 'I', 20)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(3, 'II', 30)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(4, 'III', 40)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(5, 'IV', 50)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(6, 'IV-A', 60)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(7, 'V', 70)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(8, 'V-A', 80)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(9, 'VI', 90)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(10, 'VII', 100)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(11, 'VIII', 110)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(12, 'IX', 120)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(13, 'X', 130)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(14, 'XI', 140)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(15, 'XII', 150)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(16, 'XIII', 160)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(17, 'XIV', 170)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(18, 'Supplementary I', 180)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(19, 'Supplementary II', 190)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(20, 'Supplementary III', 200)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(21, 'Supplementary IV', 210)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(22, 'Supplementary V', 220)
      INSERT INTO H_Grade (Id, Name, SortOrder) VALUES(23, 'Supplementary VI', 230)
      SET IDENTITY_INSERT H_Grade OFF
    </script>
  </config>
  <config sequence="3019" type="FRESH" version="1.0.0" description="H_Designation">
    <script provider="SQL Server">
      SET IDENTITY_INSERT H_Designation ON
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(1, 'A.C. Engineer' ,10)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(2, 'A.G.M. (Acting)' ,20)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(3, 'AC Technician' ,30)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(4, 'Accountant' ,40)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(5, 'Accountant (Agro Business Proj)' ,50)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(6, 'Accounts Assistant' ,60)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(7, 'Accounts Manager' ,70)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(8, 'Accounts Officer' ,80)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(9, 'Act. Jr. Divisional Manager-10' ,90)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(10, 'Act. Security Supervisor' ,100)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(11, 'Additional District Manager-08' ,110)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(12, 'Additional District Manager-09' ,120)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(13, 'Admin Assistant' ,130)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(14, 'Admin Manager' ,140)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(15, 'Administrative Officer' ,150)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(16, 'Administrator' ,160)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(17, 'Administrator (ASA Tower)' ,170)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(18, 'Administrator (Hardware)' ,180)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(19, 'Asset Recorder Cum-StoreKeeper' ,190)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(20, 'Assistant Accountant' ,200)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(21, 'Assistant Branch Manager' ,210)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(22, 'Assistant Branch Manager - SEL' ,220)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(23, 'Assistant Branch Manager-Act.' ,230)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(24, 'Assistant Director' ,240)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(25, 'Assistant Director (Accounts)' ,250)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(26, 'Assistant Director (ASA Tower)' ,260)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(27, 'Assistant Director (H.R.)' ,270)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(28, 'Assistant Director (Logistic)' ,280)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(29, 'Assistant Director (MIS)' ,290)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(30, 'Assistant Director (Program)' ,300)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(31, 'Assistant Director (R &amp; D)' ,310)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(32, 'Assistant Engineer-Electrical' ,320)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(33, 'Assistant Store Keeper' ,330)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(34, 'Assistant Support Engineer' ,340)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(35, 'Associate Cluster Manager' ,350)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(36, 'Asst. Peon' ,360)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(37, 'Asst.Guest Relation/Log. Off.' ,370)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(38, 'Asstt. Support Engineer (Act)' ,380)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(39, 'Audit Manager' ,390)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(40, 'Audit Officer' ,400)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(41, 'Branch Manager' ,410)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(42, 'Branch Manager (Act.)' ,420)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(43, 'Branch Manager (In-charge)' ,430)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(44, 'Branch Manager (In-charge)-12' ,440)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(45, 'Call Center Officer' ,450)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(46, 'Call Center Officer-11' ,460)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(47, 'Caretaker/Asst. Peon' ,470)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(48, 'Central Auditor' ,480)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(49, 'Chief Auditor' ,490)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(50, 'Chief Technical Officer' ,500)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(51, 'Cleaner' ,510)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(52, 'Cleaner Super./Logistic Asstt.' ,520)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(53, 'Cleaner Supervisor' ,530)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(54, 'Com. Operator/Office Asstt' ,540)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(55, 'Computer Engineer' ,550)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(56, 'Computer Officer' ,560)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(57, 'Computer Officer-11' ,570)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(58, 'Computer Officer-12' ,580)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(59, 'Computer Operator' ,590)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(60, 'Computer System Engineer' ,600)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(61, 'Computer System Engineer-08' ,610)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(62, 'Computer System Engineer-09' ,620)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(63, 'Computer System Manager' ,630)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(64, 'Computer System Officer' ,640)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(65, 'Construction Supervisor' ,650)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(66, 'Consultant - OC of Operation' ,660)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(67, 'Consultant (M.M.)' ,670)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(68, 'Cook' ,680)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(69, 'Cook/Bua' ,690)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(70, 'Cook/Guard' ,700)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(71, 'Cook/Peon' ,710)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(72, 'Counselor-Cum-Admin Officer' ,720)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(73, 'Data Management Officer' ,730)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(74, 'Deputy Director' ,740)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(75, 'Deputy Director (Accounts)' ,750)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(76, 'Deputy Director (ASA Tower)' ,760)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(77, 'Deputy Director (Audit)' ,770)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(78, 'Deputy Director (HR)' ,780)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(79, 'Deputy Director (Program)' ,790)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(80, 'Deputy Director (R &amp; D)' ,800)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(81, 'Deputy President' ,810)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(82, 'Development Co-ordinator' ,820)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(83, 'Devlopment Officer' ,830)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(84, 'Director - Finance &amp; MIS' ,840)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(85, 'Director - H.R.' ,850)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(86, 'Director (Administration)' ,860)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(87, 'Director (HR)' ,870)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(88, 'Director (Program)' ,880)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(89, 'Director (Research &amp; Document)' ,890)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(90, 'Director- Accounts' ,900)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(91, 'Director-IT' ,910)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(92, 'District Administrator' ,920)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(93, 'District Manager-07' ,930)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(94, 'District Manager-08' ,940)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(95, 'District Manager-09' ,950)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(96, 'District Manager-10' ,960)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(97, 'District Officer-SEL' ,970)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(98, 'Divisional Manager (G-5)' ,980)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(99, 'Driver' ,990)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(100, 'Electrician' ,1000)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(101, 'Engineer (Mechanical)' ,1010)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(102, 'Executive Vice-President' ,1020)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(103, 'Field Auditor' ,1030)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(104, 'Field Auditor-07' ,1040)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(105, 'Field Auditor-08' ,1050)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(106, 'Field Auditor-10' ,1060)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(107, 'Field Auditor-11' ,1070)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(108, 'Field Co-ordinator' ,1080)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(109, 'Finance Manager' ,1090)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(110, 'Finance Officer' ,1100)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(111, 'Finance Officer-09' ,1110)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(112, 'Fire Fighter (Act.)' ,1120)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(113, 'Front Desk Executive' ,1130)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(114, 'Gardener' ,1140)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(115, 'Gardener-Cum-Cleaner' ,1150)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(116, 'Generator Technician' ,1160)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(117, 'Graphic Designer' ,1170)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(118, 'Guest Relations Officer' ,1180)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(119, 'Hardware Support Engineer' ,1190)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(120, 'Head-Accounts' ,1200)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(121, 'Head-Finance' ,1210)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(122, 'Head-Information' ,1220)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(123, 'Head-ITIS' ,1230)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(124, 'Head-of I.T.I.S.' ,1240)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(125, 'Health &amp; Nutrition Co-ordinator' ,1250)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(126, 'Health &amp; Nutrition Supervisor' ,1260)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(127, 'Health Assistant' ,1270)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(128, 'HR Manager' ,1280)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(129, 'HRD Manager' ,1290)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(130, 'I.T. Executive' ,1300)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(131, 'I.T. Executive-09' ,1310)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(132, 'Instructor' ,1320)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(133, 'Investigation Officer' ,1330)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(134, 'IT Personnel' ,1340)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(135, 'Joint Director' ,1350)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(136, 'Jr. Assistant Director (Resear' ,1360)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(137, 'Jr. Assistant Director(HRM &amp; Finance' ,1370)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(138, 'Jr. Assistant Director(Logistic)' ,1380)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(139, 'Jr. Assistant Director(Program)' ,1390)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(140, 'Jr. Assistant Director-ASA Tower' ,1400)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(141, 'Jr. Health &amp; Nutrition Officer' ,1410)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(142, 'Jr. Messenger' ,1420)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(143, 'Jr. Program Monitor' ,1430)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(144, 'Junior Administrative Officer' ,1440)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(145, 'Junior Computer System Officer' ,1450)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(146, 'Junior Data Management Officer' ,1460)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(147, 'Junior Deputy Director' ,1470)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(148, 'Junior Director/Joint Director' ,1480)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(149, 'Junior Electrician' ,1490)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(150, 'Junior Lift Technician' ,1500)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(151, 'Junior Personnel Officer' ,1510)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(152, 'Junior Regional Manager' ,1520)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(153, 'Karate Trainer' ,1530)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(154, 'Lab Technician' ,1540)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(155, 'Lead Software Engineer' ,1550)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(156, 'Lift Operator' ,1560)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(157, 'Lift Technician' ,1570)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(158, 'Loan Assistant' ,1580)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(159, 'Loan Officer' ,1590)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(160, 'Loan Officer - BDS' ,1600)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(161, 'Loan Officer - SEL' ,1610)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(162, 'Loan Officer-12' ,1620)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(163, 'Logistic Assistant' ,1630)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(164, 'Logistic Manager' ,1640)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(165, 'Logistic Officer' ,1650)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(166, 'Maintenance Officer' ,1660)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(167, 'Management Trainee' ,1670)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(168, 'Manager - BDS' ,1680)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(169, 'Manager - SEL' ,1690)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(170, 'Manager-Foreign Remittance Service' ,1700)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(171, 'Manager-MIS' ,1710)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(172, 'Material Development Officer' ,1720)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(173, 'Media Relation Officer' ,1730)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(174, 'Medical Assistant' ,1740)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(175, 'Medical Officer' ,1750)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(176, 'Messenger' ,1760)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(177, 'Midwife' ,1770)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(178, 'Monitoring Assistant' ,1780)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(179, 'Nurse' ,1790)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(180, 'Office Asstt./Com. Officer' ,1800)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(181, 'Office Executive' ,1810)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(182, 'Officer In-charge (SEL)' ,1820)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(183, 'Officer-in-charge of Operation' ,1830)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(184, 'Paramedics' ,1840)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(185, 'Peon' ,1850)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(186, 'Peon/Cook' ,1860)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(187, 'Peon/Electrician' ,1870)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(188, 'Peon/Guard' ,1880)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(189, 'Personnel Officer' ,1890)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(190, 'President' ,1900)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(191, 'Printing Officer' ,1910)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(192, 'Private Secretary' ,1920)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(193, 'Program Assistant' ,1930)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(194, 'Program Manager' ,1940)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(195, 'Program Manager (In-charge)' ,1950)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(196, 'Program Manager (SEL)' ,1960)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(197, 'Program Monitors' ,1970)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(198, 'Program Officer' ,1980)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(199, 'Program Ope. Monitoring Off.' ,1990)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(200, 'Program Secretary' ,2000)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(201, 'Project Chief' ,2010)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(202, 'Project Coordinator-Agri.Busi' ,2020)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(203, 'Reg. H&amp;N Co-ordinator' ,2030)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(204, 'Regional Manager' ,2040)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(205, 'Regional Manager-Trainee' ,2050)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(206, 'Research Officer' ,2060)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(207, 'Sanitary Mechanic' ,2070)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(208, 'Security Guard' ,2080)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(209, 'Security Supervisor' ,2090)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(210, 'Security Supervisor-14' ,2100)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(211, 'Senior Regional Manager' ,2110)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(212, 'Senior Software Engineer' ,2120)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(213, 'Software Developer' ,2130)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(214, 'Software Engineer' ,2140)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(215, 'Software Support Engineer' ,2150)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(216, 'Software Test Engineer' ,2160)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(217, 'Software Testing Engineer' ,2170)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(218, 'Sr. AC Technician' ,2180)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(219, 'Sr. Branch Manager' ,2190)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(220, 'Sr. Central Auditor' ,2200)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(221, 'Sr. Community Organizer' ,2210)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(222, 'Sr. Media Relation Officer' ,2220)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(223, 'Sr. Program Monitor' ,2230)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(224, 'Sr. Program Secretary' ,2240)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(225, 'Sr. Research Officer' ,2250)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(226, 'Sr.Deputy President' ,2260)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(227, 'Sr.Fire Fighter' ,2270)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(228, 'Sr.Health Assistant' ,2280)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(229, 'Store Assistant-Cum-Messenger' ,2290)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(230, 'Sub-Station Technician' ,2300)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(231, 'Substation&amp;Generator Operator' ,2310)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(232, 'TBA Trainer' ,2320)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(233, 'Team Member' ,2330)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(234, 'Technical Assistant (IT)' ,2340)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(235, 'Technical Writer' ,2350)
      INSERT INTO H_Designation (Id, Name, SortOrder) VALUES(236, 'Upazila Manager' ,2360)
      SET IDENTITY_INSERT H_Designation OFF
    </script>
  </config>
  <config sequence="3020" type="FRESH" version="1.0.0" description="H_GradeDesignation">
    <script provider="SQL Server">
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(1,190)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,101)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,104)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,109)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,128)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,136)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,137)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,138)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,139)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,14)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,140)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,164)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,167)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,170)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,171)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,172)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,194)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,196)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,2)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,222)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,225)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,35)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,39)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,48)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,63)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,7)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,92)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(10,93)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,105)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,108)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,11)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,110)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,128)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,130)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,133)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,165)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,167)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,173)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,181)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,182)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,189)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,192)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,195)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,198)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,20)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,206)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,211)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,213)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,215)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,216)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,235)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,40)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,55)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,61)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,64)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,8)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,83)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(11,94)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,103)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,111)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,12)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,129)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,131)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,145)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,15)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,189)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,192)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,204)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,213)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,232)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,233)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,4)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,40)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,59)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,62)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,8)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(12,95)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,1)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,106)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,113)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,118)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,119)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,141)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,144)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,151)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,152)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,166)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,173)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,191)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,192)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,205)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,213)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,219)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,224)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,236)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,32)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,37)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,4)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,45)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,5)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,60)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,72)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,73)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,9)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,96)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(13,97)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,107)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,126)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,13)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,132)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,146)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,151)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,153)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,163)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,168)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,169)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,178)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,193)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,200)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,34)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,41)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,46)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,52)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,57)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(14,6)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(15,162)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(15,180)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(15,21)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(15,22)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(15,221)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(15,38)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(15,42)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(15,44)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(15,58)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,157)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,159)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,160)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,161)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,168)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,19)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,209)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,218)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,227)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,23)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,230)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,33)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,43)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,54)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,59)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,6)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(16,65)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(17,116)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(17,150)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(17,158)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(17,161)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(17,210)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(17,218)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(17,234)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(17,53)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(18,176)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(18,187)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(18,229)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(18,99)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(19,156)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(19,176)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(19,185)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(19,188)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(19,231)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(19,3)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(2,226)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(20,10)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(20,100)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(20,112)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(20,142)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(20,149)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(20,185)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(20,208)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(20,51)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(20,70)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(20,71)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(21,149)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(21,185)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(21,188)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(21,207)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(21,208)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(21,36)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(21,47)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(22,114)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(22,186)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(22,188)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(22,68)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(23,69)
      <!--INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,115)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,117)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,119)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,123)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,127)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,130)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,134)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,154)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,155)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,16)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,174)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,175)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,177)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,179)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,18)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,184)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,212)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,213)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,214)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,215)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,217)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,228)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,235)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,50)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,56)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,6)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(24,60)-->
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(3,81)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(4,102)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(4,125)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(4,67)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(4,82)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,183)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,202)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,223)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,66)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,84)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,85)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,86)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,87)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,88)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,89)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,90)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(5,91)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(6,148)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,120)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,121)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,122)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,124)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,135)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,155)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,17)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,197)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,199)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,203)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,49)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,74)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,75)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,76)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,77)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,78)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,79)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,80)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(7,98)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(8,147)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,143)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,18)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,201)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,212)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,220)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,24)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,25)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,26)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,27)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,28)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,29)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,30)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,31)
      INSERT INTO H_GradeDesignation (H_GradeId, H_DesignationId) VALUES(9,92)
    </script>
  </config>
  <config sequence="3021" type="FRESH" version="1.0.0" description="UserLocation">
    <script provider="SQL Server">
      INSERT INTO UserLocation([Login]) VALUES('admin')
    </script>
  </config>
  <config sequence="3022" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Employee Information', 1, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT
      dbo.H_Employee.Id AS ''Employee Id'', dbo.H_Employee.Name AS ''Employee Name'', dbo.H_Employee.FatherName AS ''Father Name'',
      CASE dbo.H_Employee.Sex WHEN 1 THEN ''Male'' WHEN 2 THEN ''Female'' END AS Sex,
      CASE dbo.H_Employee.Religion WHEN 1 THEN ''Islam'' WHEN 2 THEN ''Hinduism'' WHEN 4 THEN ''Christianity'' WHEN 8 THEN ''Buddhism'' WHEN 16 THEN ''Other'' END AS ''Religion'',
      dbo.H_Employee.JoiningDate AS ''Joining Date'',
      dbo.H_Grade.Name AS ''Grade'',
      dbo.H_Designation.Name AS ''Designation'',
      dbo.H_EmployeeBranch.BranchId AS ''Branch Id'', dbo.Branch.Name AS ''Branch Name'',
      dbo.Branch.RegionId AS ''Region Id'', dbo.Region.Name AS ''Region Name'',
      dbo.Region.ZoneId AS ''Zone Id'', dbo.Zone.Name AS ''Zone Name'',
      dbo.Zone.DivisionId AS ''Division Id'', dbo.Division.Name AS ''Division Name''
      FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeBranch ON dbo.H_Employee.Id = dbo.H_EmployeeBranch.H_EmployeeId AND (@BranchCode IS NULL OR dbo.H_EmployeeBranch.BranchId = @BranchCode) AND (dbo.H_EmployeeBranch.EndDate = ''12/31/2099'')
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code AND (@BranchCode IS NULL OR dbo.Branch.Code = @BranchCode)
      INNER JOIN dbo.Region ON dbo.Branch.RegionId = dbo.Region.Id AND (@RegionId IS NULL OR dbo.Region.Id = @RegionId)
      INNER JOIN dbo.Zone ON dbo.Region.ZoneId = dbo.Zone.Id AND (@ZoneId IS NULL OR dbo.Zone.Id = @ZoneId)
      INNER JOIN dbo.Division ON dbo.Zone.DivisionId = dbo.Division.Id AND (@DivisionId IS NULL OR dbo.Division.Id = @DivisionId)
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_Employee.Id = dbo.H_EmployeeGrade.H_EmployeeId AND (@GradeId IS NULL OR dbo.H_EmployeeGrade.H_GradeId = @GradeId) AND (dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Grade ON dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id AND (@GradeId IS NULL OR dbo.H_Grade.Id = @GradeId)
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_Employee.Id = dbo.H_EmployeeDesignation.H_EmployeeId AND (@DesignationId IS NULL OR dbo.H_EmployeeDesignation.H_DesignationId = @DesignationId) AND (dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id AND (@DesignationId IS NULL OR dbo.H_Designation.Id = @DesignationId)
      WHERE dbo.H_Employee.JoiningDate BETWEEN @StartDate AND @EndDate AND (@Religion IS NULL OR dbo.H_Employee.Religion = @Religion) AND (@SexId IS NULL OR dbo.H_Employee.Sex = @SexId)
      ORDER BY dbo.H_Employee.JoiningDate DESC', 1, 1, 1, 1)
    </script>
  </config>
  <config sequence="3023" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Branch Information', 1, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.Division.Name AS ''Division'', dbo.Zone.Name AS ''Zone'', dbo.Region.Name AS ''Region'', dbo.Branch.Name AS ''Branch'',
      CASE dbo.Branch.BranchType WHEN 1 THEN ''Full'' WHEN 2 THEN ''Central'' WHEN 3 THEN ''Partners'' WHEN 4 THEN ''Sel'' WHEN 5 THEN ''HP''
      WHEN 6 THEN ''ST'' WHEN 7 THEN ''SUB'' WHEN 8 THEN ''SB'' END AS ''Branch Type'',
      (SELECT COUNT(dbo.H_EmployeeBranch.H_EmployeeId) FROM dbo.H_EmployeeBranch WHERE dbo.H_EmployeeBranch.BranchId = dbo.Branch.Id AND dbo.H_EmployeeBranch.H_EmployeeId IN (SELECT dbo.H_EmployeeDesignation.H_EmployeeId FROM dbo.H_EmployeeDesignation WHERE dbo.H_EmployeeDesignation.H_DesignationId = 165)) AS ''Total LO'',
      (SELECT COUNT(dbo.H_EmployeeBranch.H_EmployeeId) FROM dbo.H_EmployeeBranch WHERE dbo.H_EmployeeBranch.BranchId = dbo.Branch.Id AND dbo.H_EmployeeBranch.H_EmployeeId IN (SELECT dbo.H_EmployeeDesignation.H_EmployeeId FROM dbo.H_EmployeeDesignation WHERE dbo.H_EmployeeDesignation.H_DesignationId = 21 OR dbo.H_EmployeeDesignation.H_DesignationId = 22)) AS ''Total ABM + ABM-SEL'',
      (SELECT COUNT(dbo.H_EmployeeBranch.H_EmployeeId) FROM dbo.H_EmployeeBranch WHERE dbo.H_EmployeeBranch.BranchId = dbo.Branch.Id AND dbo.H_EmployeeBranch.H_EmployeeId IN (SELECT dbo.H_EmployeeDesignation.H_EmployeeId FROM dbo.H_EmployeeDesignation WHERE dbo.H_EmployeeDesignation.H_DesignationId = 42 OR dbo.H_EmployeeDesignation.H_DesignationId = 38 OR dbo.H_EmployeeDesignation.H_DesignationId = 60)) AS ''Total BM + ASE + Total CO'',
      (SELECT COUNT(dbo.H_EmployeeBranch.H_EmployeeId) FROM dbo.H_EmployeeBranch WHERE dbo.H_EmployeeBranch.BranchId = dbo.Branch.Id AND dbo.H_EmployeeBranch.H_EmployeeId IN (SELECT dbo.H_EmployeeDesignation.H_EmployeeId FROM dbo.H_EmployeeDesignation WHERE dbo.H_EmployeeDesignation.H_DesignationId = 204 OR dbo.H_EmployeeDesignation.H_DesignationId = 205)) AS ''Total RM'',
      (SELECT COUNT(dbo.H_EmployeeBranch.H_EmployeeId) FROM dbo.H_EmployeeBranch WHERE dbo.H_EmployeeBranch.BranchId = dbo.Branch.Id AND dbo.H_EmployeeBranch.EndDate = ''12/31/2099'') AS ''Total Staff'',
      (SELECT COUNT(dbo.H_Employee.Id) FROM dbo.H_Employee WHERE dbo.H_Employee.SEX = 2 AND dbo.H_Employee.Id IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch WHERE dbo.H_EmployeeBranch.BranchId = dbo.Branch.Id)) AS ''Hindu Staff'',
      dbo.Branch.MobileNumber AS ''Mobile Number''
      FROM dbo.Branch
      LEFT JOIN dbo.Region ON dbo.Branch.RegionId = dbo.Region.Id AND (@RegionId IS NULL OR dbo.Region.Id = @RegionId)
      LEFT JOIN dbo.Zone ON dbo.Region.ZoneId = dbo.Zone.Id AND (@ZoneId IS NULL OR dbo.Zone.Id = @ZoneId)
      RIGHT JOIN dbo.Division ON dbo.Zone.DivisionId = dbo.Division.Id AND (@DivisionId IS NULL OR dbo.Division.Id = @DivisionId)
      LEFT JOIN dbo.H_EmployeeBranch ON dbo.Branch.Id = dbo.H_EmployeeBranch.BranchId AND (@BranchCode IS NULL OR dbo.Branch.Id = @BranchCode)
      WHERE dbo.Branch.Status = 1
      ORDER BY dbo.Division.Name', 1, 0, 0, 0)
    </script>
  </config>
  <config sequence="3024" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Staff List', 1, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_Employee.Id AS ''Employee Id'', dbo.H_Employee.Name AS ''Employee Name'', dbo.H_Grade.Name AS ''Grade'', dbo.H_Designation.Name AS ''Designation'', dbo.H_Employee.JoiningDate AS ''Joining Date'',
      dbo.Division.Name AS ''Division'', dbo.Zone.Name AS ''Zone'', dbo.Region.Name AS ''Region'', dbo.Branch.Name AS ''Branch'',
      dbo.H_Address.Phone AS ''Phone'', dbo.H_Address.Email AS ''E mail''
      FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeBranch ON dbo.H_Employee.Id = dbo.H_EmployeeBranch.H_EmployeeId AND (@BranchCode IS NULL OR dbo.H_EmployeeBranch.BranchId = @BranchCode) AND (dbo.H_EmployeeBranch.EndDate = ''12/31/2099'')
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code AND (@BranchCode IS NULL OR dbo.Branch.Code = @BranchCode)
      INNER JOIN dbo.Region ON dbo.Branch.RegionId = dbo.Region.Id AND (@RegionId IS NULL OR dbo.Region.Id = @RegionId)
      INNER JOIN dbo.Zone ON dbo.Region.ZoneId = dbo.Zone.Id AND (@ZoneId IS NULL OR dbo.Zone.Id = @ZoneId)
      INNER JOIN dbo.Division ON dbo.Zone.DivisionId = dbo.Division.Id AND (@DivisionId IS NULL OR dbo.Division.Id = @DivisionId)
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_Employee.Id = dbo.H_EmployeeGrade.H_EmployeeId AND (@GradeId IS NULL OR dbo.H_EmployeeGrade.H_GradeId = @GradeId) AND (dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Grade ON dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id AND (@GradeId IS NULL OR dbo.H_Grade.Id = @GradeId)
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_Employee.Id = dbo.H_EmployeeDesignation.H_EmployeeId AND (@DesignationId IS NULL OR dbo.H_EmployeeDesignation.H_DesignationId = @DesignationId) AND (dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id AND (@DesignationId IS NULL OR dbo.H_Designation.Id = @DesignationId)
      INNER JOIN dbo.H_Address ON dbo.H_Employee.PresentAddressId = dbo.H_Address.Id
      WHERE dbo.H_Employee.JoiningDate BETWEEN @StartDate AND @EndDate AND (@Religion IS NULL OR dbo.H_Employee.Religion = @Religion) AND (@SexId IS NULL OR dbo.H_Employee.Sex = @SexId) AND (dbo.H_Employee.Status = 1)
      ORDER BY dbo.H_Employee.JoiningDate DESC', 1, 1, 1, 1)
    </script>
  </config>
  <config sequence="3025" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Transfer Information', 2, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeTransfer.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeeTransfer.H_EmployeeId) AS ''Employee Name'',
      (CASE dbo.H_EmployeeTransfer.Type WHEN 1 THEN ''Normal'' WHEN 2 THEN ''Punishment'' WHEN 4 THEN ''Promotion'' WHEN 8 THEN ''Demotion'' END) AS ''Transfer Type'',
      dbo.H_EmployeeTransfer.LetterNo AS ''Letter No'', dbo.H_EmployeeTransfer.LetterDate AS ''Letter Date'', dbo.H_EmployeeTransfer.JoiningDate AS ''Joining Date'',
      (SELECT dbo.Branch.Name FROM dbo.Branch WHERE dbo.Branch.Code = dbo.H_EmployeeTransfer.SourceBranchId) AS ''Source Branch'',
      (SELECT dbo.Branch.Name FROM dbo.Branch WHERE dbo.Branch.Code = dbo.H_EmployeeTransfer.DestinationBranchId) AS ''Destination Branch'',
      dbo.H_EmployeeTransfer.Remarks
      FROM dbo.H_EmployeeTransfer
      WHERE dbo.H_EmployeeTransfer.JoiningDate BETWEEN @StartDate AND @EndDate
      ORDER BY dbo.H_EmployeeTransfer.JoiningDate DESC', 0, 0, 1, 0)
    </script>
  </config>
  <config sequence="3026" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Leave Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeLeave.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeeLeave.H_EmployeeId) AS ''Employee Name'',
      (CASE dbo.H_EmployeeLeave.Type WHEN 1 THEN ''Force Leave'' WHEN 2 THEN ''Leave With Pay'' WHEN 3 THEN ''Leave Without Pay''
      WHEN 4 THEN ''Medical Leave'' WHEN 5 THEN ''Maternity Leave'' WHEN 6 THEN ''Suspension'' END) AS ''Leave Type'',
      dbo.H_EmployeeLeave.LetterNo AS ''Letter No'', dbo.H_EmployeeLeave.LetterDate AS ''Letter Date'',
      dbo.H_EmployeeLeave.StartDate AS ''Start Date'', dbo.H_EmployeeLeave.EndDate AS ''End Date'',
      dbo.H_EmployeeLeave.Cause
      FROM dbo.H_EmployeeLeave
      WHERE dbo.H_EmployeeLeave.StartDate &lt;= @EndDate
      ORDER BY dbo.H_EmployeeLeave.StartDate DESC', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3027" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Drop Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeDrop.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeeDrop.H_EmployeeId) AS ''Employee Name'',
      (CASE dbo.H_EmployeeDrop.Type WHEN 1 THEN ''Retirement'' WHEN 2 THEN ''Died'' WHEN 3 THEN ''Force Retirement''
      WHEN 4 THEN ''Resignation'' WHEN 5 THEN ''Termination'' END) AS ''Drop Type'',
      dbo.H_EmployeeDrop.LetterNo AS ''Letter No'', dbo.H_EmployeeDrop.LetterDate AS ''Letter Date'',
      dbo.H_EmployeeDrop.DropCode AS ''Drop Code'', dbo.H_EmployeeDrop.DropDate AS ''Drop Date'',
      dbo.H_EmployeeDrop.Cause
      FROM dbo.H_EmployeeDrop
      WHERE dbo.H_EmployeeDrop.DropDate &lt;= @EndDate
      ORDER BY dbo.H_EmployeeDrop.DropDate DESC', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3028" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Rejoin Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeRejoin.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeeRejoin.H_EmployeeId) AS ''Employee Name'',
      dbo.H_EmployeeRejoin.LeaveType AS ''Leave Type'',
      dbo.H_EmployeeRejoin.LetterNo AS ''Letter No'', dbo.H_EmployeeRejoin.LetterDate AS ''Letter Date'',
      dbo.H_EmployeeRejoin.FromDate AS ''From Date'', dbo.H_EmployeeRejoin.RejoinDate AS ''Rejoin Date'',
      (SELECT dbo.Branch.Name FROM dbo.Branch WHERE dbo.Branch.Code = dbo.H_EmployeeRejoin.SourceBranchId) AS ''Previous Branch'',
      (SELECT dbo.Branch.Name FROM dbo.Branch WHERE dbo.Branch.Code = dbo.H_EmployeeRejoin.DestinationBranchId) AS ''Present Branch''
      FROM dbo.H_EmployeeRejoin
      WHERE dbo.H_EmployeeRejoin.RejoinDate &lt;= @EndDate
      ORDER BY dbo.H_EmployeeRejoin.RejoinDate DESC', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3029" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Reemployment Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeReemployment.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeeReemployment.H_EmployeeId) AS ''Employee Name'',
      dbo.H_EmployeeReemployment.DropoutType AS ''Dropout Type'',
      dbo.H_EmployeeReemployment.LetterNo AS ''Letter No'', dbo.H_EmployeeReemployment.LetterDate AS ''Letter Date'',
      dbo.H_EmployeeReemployment.FromDate AS ''From Date'', dbo.H_EmployeeReemployment.ReemploymentDate AS ''Reemployment Date'',
      (SELECT dbo.Branch.Name FROM dbo.Branch WHERE dbo.Branch.Code = dbo.H_EmployeeReemployment.SourceBranchId) AS ''Previous Branch'',
      (SELECT dbo.Branch.Name FROM dbo.Branch WHERE dbo.Branch.Code = dbo.H_EmployeeReemployment.DestinationBranchId) AS ''Present Branch'',
      dbo.H_EmployeeReemployment.Cause
      FROM dbo.H_EmployeeReemployment
      WHERE dbo.H_EmployeeReemployment.ReemploymentDate &lt;= @EndDate
      ORDER BY dbo.H_EmployeeReemployment.ReemploymentDate DESC', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3030" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Promotion Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeePromotion.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeePromotion.H_EmployeeId) AS ''Employee Name'',
      (CASE dbo.H_EmployeePromotion.Type WHEN 1 THEN ''Normal'' WHEN 2 THEN ''Promotion'' WHEN 4 THEN ''Demotion'' END) AS ''Promotion Type'',
      dbo.H_EmployeePromotion.LetterNo AS ''Letter No'', dbo.H_EmployeePromotion.LetterDate AS ''Letter Date'',
      (SELECT dbo.H_Grade.Name FROM dbo.H_Grade WHERE dbo.H_Grade.Id = dbo.H_EmployeePromotion.OldH_GradeId) AS ''Previous Grade'',
      (SELECT dbo.H_Designation.Name FROM dbo.H_Designation WHERE dbo.H_Designation.Id = dbo.H_EmployeePromotion.OldH_DesignationId) AS ''Previous Designation'',
      (SELECT dbo.H_Grade.Name FROM dbo.H_Grade WHERE dbo.H_Grade.Id = dbo.H_EmployeePromotion.NewH_GradeId) AS ''Present Grade'',
      (SELECT dbo.H_Designation.Name FROM dbo.H_Designation WHERE dbo.H_Designation.Id = dbo.H_EmployeePromotion.NewH_DesignationId) AS ''Present Designation'',
      dbo.H_EmployeePromotion.PromotionDate AS ''Promotion Date'', dbo.H_EmployeePromotion.Remarks
      FROM dbo.H_EmployeePromotion
      WHERE dbo.H_EmployeePromotion.PromotionDate BETWEEN @StartDate AND @EndDate
      ORDER BY dbo.H_EmployeePromotion.PromotionDate DESC', 0, 0, 1, 0)
    </script>
  </config>
  <config sequence="3031" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Increment Heldup Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeIncrementHeldup.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeeIncrementHeldup.H_EmployeeId) AS ''Employee Name'',
      dbo.H_EmployeeIncrementHeldup.LetterNo AS ''Letter No'', dbo.H_EmployeeIncrementHeldup.LetterDate AS ''Letter Date'',
      dbo.H_EmployeeIncrementHeldup.IncrementStop AS ''Increment Stop'',
      dbo.H_EmployeeIncrementHeldup.FromDate AS ''From Date'', dbo.H_EmployeeIncrementHeldup.ToDate AS ''To Date'',
      (SELECT dbo.Branch.Name FROM dbo.Branch WHERE dbo.Branch.Code = dbo.H_EmployeeIncrementHeldup.BranchId) AS ''Branch'',
      dbo.H_EmployeeIncrementHeldup.Cause
      FROM dbo.H_EmployeeIncrementHeldup
      WHERE dbo.H_EmployeeIncrementHeldup.FromDate BETWEEN @StartDate AND @EndDate
      ORDER BY dbo.H_EmployeeIncrementHeldup.FromDate DESC', 0, 0, 1, 0)
    </script>
  </config>
  <config sequence="3032" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Warning Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeWarning.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeeWarning.H_EmployeeId) AS ''Employee Name'',
      dbo.H_EmployeeWarning.LetterNo AS ''Letter No'', dbo.H_EmployeeWarning.LetterDate AS ''Letter Date'',
      dbo.H_EmployeeWarning.Duration AS ''Duration'', dbo.H_EmployeeWarning.TotalWarningTime AS ''Total Warning Time'',
      (SELECT dbo.Branch.Name FROM dbo.Branch WHERE dbo.Branch.Code = dbo.H_EmployeeWarning.BranchId) AS ''Branch'',
      dbo.H_EmployeeWarning.Cause
      FROM dbo.H_EmployeeWarning
      WHERE dbo.H_EmployeeWarning.LetterDate BETWEEN @StartDate AND @EndDate
      ORDER BY dbo.H_EmployeeWarning.LetterDate DESC', 0, 0, 1, 0)
    </script>
  </config>
  <config sequence="3033" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Penalty Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeePenalty.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeePenalty.H_EmployeeId) AS ''Employee Name'',
      dbo.H_EmployeePenalty.LetterNo AS ''Letter No'', dbo.H_EmployeePenalty.LetterDate AS ''Letter Date'',
      dbo.H_EmployeePenalty.FineType AS ''Fine Type'',
      dbo.H_EmployeePenalty.FineTime AS ''Fine Time'',
      dbo.H_EmployeePenalty.FineAmount AS ''Fine Amount''
      FROM dbo.H_EmployeePenalty
      WHERE dbo.H_EmployeePenalty.LetterDate BETWEEN @StartDate AND @EndDate
      ORDER BY dbo.H_EmployeePenalty.LetterDate DESC', 0, 0, 1, 0)
    </script>
  </config>
  <config sequence="3034" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Acting Designation Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeActingDesignation.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeeActingDesignation.H_EmployeeId) AS ''Employee Name'',
      (SELECT dbo.H_Grade.Name FROM dbo.H_Grade WHERE dbo.H_Grade.Id = (SELECT dbo.H_EmployeeGrade.H_GradeId FROM dbo.H_EmployeeGrade WHERE dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_EmployeeActingDesignation.H_EmployeeId AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')) AS ''Present Grade'',
      (SELECT dbo.H_Designation.Name FROM dbo.H_Designation WHERE dbo.H_Designation.Id = (SELECT dbo.H_EmployeeDesignation.H_DesignationId FROM dbo.H_EmployeeDesignation WHERE dbo.H_EmployeeDesignation.H_EmployeeId = dbo.H_EmployeeActingDesignation.H_EmployeeId AND dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')) AS ''Present Designation'',
      (SELECT dbo.H_Grade.Name FROM dbo.H_Grade WHERE dbo.H_Grade.Id = dbo.H_EmployeeActingDesignation.InchargedGradeId) AS ''Acting Grade'',
      (SELECT dbo.H_Designation.Name FROM dbo.H_Designation WHERE dbo.H_Designation.Id = dbo.H_EmployeeActingDesignation.InchargedDesignationId) AS ''Acting Designation'',
      dbo.H_EmployeeActingDesignation.FromDate AS ''From Date'',
      dbo.H_EmployeeActingDesignation.ToDate AS ''To Date''
      FROM dbo.H_EmployeeActingDesignation
      WHERE dbo.H_EmployeeActingDesignation.FromDate &lt;= @EndDate
      ORDER BY dbo.H_EmployeeActingDesignation.FromDate DESC', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3035" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Waiting For Posting Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeWaitingForPosting.H_EmployeeId AS ''Employee Id'',
      (CASE dbo.H_EmployeeWaitingForPosting.Type WHEN 1 THEN ''Temporary Waiting'' END) AS ''Type'',
      dbo.H_EmployeeWaitingForPosting.LetterNo AS ''Letter No'',
      dbo.H_EmployeeWaitingForPosting.LetterDate AS ''Letter Date'',
      dbo.H_EmployeeWaitingForPosting.StartDate AS ''Start Date''
      FROM dbo.H_EmployeeWaitingForPosting
      WHERE dbo.H_EmployeeWaitingForPosting.StartDate BETWEEN @StartDate AND @EndDate
      ORDER BY dbo.H_EmployeeWaitingForPosting.StartDate DESC', 0, 0, 1, 0)
    </script>
  </config>
  <config sequence="3036" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Salary Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeSalary.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeeSalary.H_EmployeeId) AS ''Employee Name'',
      dbo.H_EmployeeSalary.BasicSalary AS ''Basic Salary'',
      dbo.H_EmployeeSalary.LastIncrementDate AS ''Last Increment Date''
      FROM dbo.H_EmployeeSalary
      ORDER BY dbo.H_EmployeeSalary.BasicSalary DESC', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3037" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Special Honor Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_EmployeeSpecialHonor.H_EmployeeId AS ''Employee Id'',
      (SELECT dbo.H_Employee.Name FROM dbo.H_Employee WHERE dbo.H_Employee.Id = dbo.H_EmployeeSpecialHonor.H_EmployeeId) AS ''Employee Name'',
      dbo.H_EmployeeSpecialHonor.SubjectOfHonor AS ''SubjectOfHonor'',
      dbo.H_EmployeeSpecialHonor.LetterNo AS ''Letter No'',
      dbo.H_EmployeeSpecialHonor.LetterDate AS ''Letter Date''
      FROM dbo.H_EmployeeSpecialHonor
      WHERE dbo.H_EmployeeSpecialHonor.LetterDate BETWEEN @StartDate AND @EndDate
      ORDER BY dbo.H_EmployeeSpecialHonor.LetterDate DESC', 0, 0, 1, 0)
    </script>
  </config>
  <config sequence="3038" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('At A Glance Report', 64, 'DECLARE @AsOnDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT, @BranchCode INT, @GradeId INT, @DesignationId INT
      SET @AsOnDate = {0}
      SET @DivisionId = {1}
      SET @ZoneId = {2}
      SET @RegionId = {3}
      SET @BranchCode ={4}
      SET @GradeId = {5}
      SET @DesignationId = {6}
      SELECT DISTINCT
      (SELECT COUNT(dbo.H_Employee.Id) FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeBranch ON dbo.H_Employee.Id = dbo.H_EmployeeBranch.H_EmployeeId AND (@BranchCode IS NULL OR dbo.H_EmployeeBranch.BranchId = @BranchCode) AND (dbo.H_EmployeeBranch.EndDate = ''12/31/2099'')
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code AND (@BranchCode IS NULL OR dbo.Branch.Code = @BranchCode)
      INNER JOIN dbo.Region ON dbo.Branch.RegionId = dbo.Region.Id AND (@RegionId IS NULL OR dbo.Region.Id = @RegionId)
      INNER JOIN dbo.Zone ON dbo.Region.ZoneId = dbo.Zone.Id AND (@ZoneId IS NULL OR dbo.Zone.Id = @ZoneId)
      INNER JOIN dbo.Division ON dbo.Zone.DivisionId = dbo.Division.Id AND (@DivisionId IS NULL OR dbo.Division.Id = @DivisionId)
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_Employee.Id = dbo.H_EmployeeGrade.H_EmployeeId AND (@GradeId IS NULL OR dbo.H_EmployeeGrade.H_GradeId = @GradeId) AND (dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Grade ON dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id AND (@GradeId IS NULL OR dbo.H_Grade.Id = @GradeId)
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_Employee.Id = dbo.H_EmployeeDesignation.H_EmployeeId AND (@DesignationId IS NULL OR dbo.H_EmployeeDesignation.H_DesignationId = @DesignationId) AND (dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id AND (@DesignationId IS NULL OR dbo.H_Designation.Id = @DesignationId)
      WHERE dbo.H_Employee.Status = 1 AND dbo.H_Employee.JoiningDate &lt; @AsOnDate) AS ''Total Staff'',
      (SELECT COUNT(dbo.H_Employee.Id) FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeBranch ON dbo.H_Employee.Id = dbo.H_EmployeeBranch.H_EmployeeId AND (@BranchCode IS NULL OR dbo.H_EmployeeBranch.BranchId = @BranchCode) AND (dbo.H_EmployeeBranch.EndDate = ''12/31/2099'')
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code AND (@BranchCode IS NULL OR dbo.Branch.Code = @BranchCode)
      INNER JOIN dbo.Region ON dbo.Branch.RegionId = dbo.Region.Id AND (@RegionId IS NULL OR dbo.Region.Id = @RegionId)
      INNER JOIN dbo.Zone ON dbo.Region.ZoneId = dbo.Zone.Id AND (@ZoneId IS NULL OR dbo.Zone.Id = @ZoneId)
      INNER JOIN dbo.Division ON dbo.Zone.DivisionId = dbo.Division.Id AND (@DivisionId IS NULL OR dbo.Division.Id = @DivisionId)
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_Employee.Id = dbo.H_EmployeeGrade.H_EmployeeId AND (@GradeId IS NULL OR dbo.H_EmployeeGrade.H_GradeId = @GradeId) AND (dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Grade ON dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id AND (@GradeId IS NULL OR dbo.H_Grade.Id = @GradeId)
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_Employee.Id = dbo.H_EmployeeDesignation.H_EmployeeId AND (@DesignationId IS NULL OR dbo.H_EmployeeDesignation.H_DesignationId = @DesignationId) AND (dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id AND (@DesignationId IS NULL OR dbo.H_Designation.Id = @DesignationId)
      WHERE dbo.H_Employee.Status = 1 AND dbo.H_Employee.Sex = 1 AND dbo.H_Employee.JoiningDate &lt; @AsOnDate) AS ''Total Male Staff'',
      (SELECT COUNT(dbo.H_Employee.Id) FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeBranch ON dbo.H_Employee.Id = dbo.H_EmployeeBranch.H_EmployeeId AND (@BranchCode IS NULL OR dbo.H_EmployeeBranch.BranchId = @BranchCode) AND (dbo.H_EmployeeBranch.EndDate = ''12/31/2099'')
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code AND (@BranchCode IS NULL OR dbo.Branch.Code = @BranchCode)
      INNER JOIN dbo.Region ON dbo.Branch.RegionId = dbo.Region.Id AND (@RegionId IS NULL OR dbo.Region.Id = @RegionId)
      INNER JOIN dbo.Zone ON dbo.Region.ZoneId = dbo.Zone.Id AND (@ZoneId IS NULL OR dbo.Zone.Id = @ZoneId)
      INNER JOIN dbo.Division ON dbo.Zone.DivisionId = dbo.Division.Id AND (@DivisionId IS NULL OR dbo.Division.Id = @DivisionId)
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_Employee.Id = dbo.H_EmployeeGrade.H_EmployeeId AND (@GradeId IS NULL OR dbo.H_EmployeeGrade.H_GradeId = @GradeId) AND (dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Grade ON dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id AND (@GradeId IS NULL OR dbo.H_Grade.Id = @GradeId)
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_Employee.Id = dbo.H_EmployeeDesignation.H_EmployeeId AND (@DesignationId IS NULL OR dbo.H_EmployeeDesignation.H_DesignationId = @DesignationId) AND (dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id AND (@DesignationId IS NULL OR dbo.H_Designation.Id = @DesignationId)
      WHERE dbo.H_Employee.Status = 1 AND dbo.H_Employee.Sex = 2 AND dbo.H_Employee.JoiningDate &lt; @AsOnDate) AS ''Total Female Staff''
      FROM dbo.H_Employee', 1, 1, 0, 1)
    </script>
  </config>
  <config sequence="3039" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('2 Years In A Branch', 2, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_Employee.Id AS ''Employee Id'', dbo.H_Employee.Name AS ''Employee Name'', dbo.H_Grade.Name AS ''Grade'', dbo.H_Designation.Name AS ''Designation'',
      dbo.H_Employee.JoiningDate AS ''Joining Date'', dbo.H_EmployeeBranch.StartDate AS ''Start Date (Branch)'',
      dbo.Zone.Name AS ''Zone'', dbo.Region.Name AS ''Region'', dbo.Branch.Name AS ''Branch''
      FROM dbo.H_EmployeeBranch
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_Employee.Id
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code AND (@BranchCode IS NULL OR dbo.Branch.Code = @BranchCode)
      INNER JOIN dbo.Region ON dbo.Branch.RegionId = dbo.Region.Id AND (@RegionId IS NULL OR dbo.Region.Id = @RegionId)
      INNER JOIN dbo.Zone ON dbo.Region.ZoneId = dbo.Zone.Id AND (@ZoneId IS NULL OR dbo.Zone.Id = @ZoneId)
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_EmployeeGrade.H_EmployeeId AND (@GradeId IS NULL OR dbo.H_EmployeeGrade.H_GradeId = @GradeId) AND (dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Grade ON dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id AND (@GradeId IS NULL OR dbo.H_Grade.Id = @GradeId)
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_EmployeeDesignation.H_EmployeeId AND (@DesignationId IS NULL OR dbo.H_EmployeeDesignation.H_DesignationId = @DesignationId) AND (dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id AND (@DesignationId IS NULL OR dbo.H_Designation.Id = @DesignationId)
      WHERE DATEADD(month, 24, dbo.H_EmployeeBranch.StartDate) &lt;= @EndDate AND (dbo.H_EmployeeBranch.EndDate = ''12/31/2099'') AND (@Religion IS NULL OR dbo.H_Employee.Religion = @Religion) AND (@SexId IS NULL OR dbo.H_Employee.Sex = @SexId)
      AND (@BranchCode IS NULL OR dbo.H_EmployeeBranch.BranchId = @BranchCode) AND (dbo.H_Employee.Status = 1)
      ORDER BY dbo.H_EmployeeBranch.StartDate DESC', 1, 1, 0, 1)
    </script>
  </config>
  <config sequence="3040" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('3 Years In A Branch', 2, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_Employee.Id AS ''Employee Id'', dbo.H_Employee.Name AS ''Employee Name'', dbo.H_Grade.Name AS ''Grade'', dbo.H_Designation.Name AS ''Designation'',
      dbo.H_Employee.JoiningDate AS ''Joining Date'', dbo.H_EmployeeBranch.StartDate AS ''Start Date (Branch)'',
      dbo.Zone.Name AS ''Zone'', dbo.Region.Name AS ''Region'', dbo.Branch.Name AS ''Branch''
      FROM dbo.H_EmployeeBranch
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_Employee.Id
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code AND (@BranchCode IS NULL OR dbo.Branch.Code = @BranchCode)
      INNER JOIN dbo.Region ON dbo.Branch.RegionId = dbo.Region.Id AND (@RegionId IS NULL OR dbo.Region.Id = @RegionId)
      INNER JOIN dbo.Zone ON dbo.Region.ZoneId = dbo.Zone.Id AND (@ZoneId IS NULL OR dbo.Zone.Id = @ZoneId)
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_EmployeeGrade.H_EmployeeId AND (@GradeId IS NULL OR dbo.H_EmployeeGrade.H_GradeId = @GradeId) AND (dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Grade ON dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id AND (@GradeId IS NULL OR dbo.H_Grade.Id = @GradeId)
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_EmployeeDesignation.H_EmployeeId AND (@DesignationId IS NULL OR dbo.H_EmployeeDesignation.H_DesignationId = @DesignationId) AND (dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id AND (@DesignationId IS NULL OR dbo.H_Designation.Id = @DesignationId)
      WHERE DATEADD(month, 36, dbo.H_EmployeeBranch.StartDate) &lt;= @EndDate AND (dbo.H_EmployeeBranch.EndDate = ''12/31/2099'') AND (@Religion IS NULL OR dbo.H_Employee.Religion = @Religion) AND (@SexId IS NULL OR dbo.H_Employee.Sex = @SexId)
      AND (@BranchCode IS NULL OR dbo.H_EmployeeBranch.BranchId = @BranchCode) AND (dbo.H_Employee.Status = 1)
      ORDER BY dbo.H_EmployeeBranch.StartDate DESC', 1, 1, 0, 1)
    </script>
  </config>
  <config sequence="3041" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Employee Out Of Own District', 2, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_Employee.Id AS ''Employee Id'', dbo.H_Employee.Name AS ''Employee Name'', dbo.H_Grade.Name AS ''Grade'', dbo.H_Designation.Name AS ''Designation'',
      dbo.H_Employee.JoiningDate AS ''Joining Date'', dbo.H_EmployeeBranch.StartDate AS ''Start Date (Branch)'',
      dbo.Branch.Name AS ''Branch'',
      (SELECT dbo.District.Name FROM dbo.District WHERE dbo.District.Id = (SELECT dbo.Thana.DistrictID FROM dbo.Thana WHERE dbo.Thana.Id = dbo.Branch.ThanaId)) AS ''District (Branch)'',
      (SELECT dbo.Division.Name FROM dbo.Division WHERE dbo.Division.Id = (Select dbo.District.DivisionId FROM dbo.District WHERE dbo.District.Id = (SELECT dbo.Thana.DistrictID FROM dbo.Thana WHERE dbo.Thana.Id = dbo.H_Address.ThanaId))) AS ''Own Division'',
      (SELECT dbo.District.Name FROM dbo.District WHERE District.Id = (SELECT dbo.Thana.DistrictID FROM dbo.Thana WHERE dbo.Thana.Id = dbo.H_Address.ThanaId)) AS ''Own District''
      FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeBranch ON dbo.H_Employee.Id = dbo.H_EmployeeBranch.H_EmployeeId AND (dbo.H_EmployeeBranch.EndDate = ''12/31/2099'')
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_EmployeeGrade.H_EmployeeId AND (@GradeId IS NULL OR dbo.H_EmployeeGrade.H_GradeId = @GradeId) AND (dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Grade ON dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id AND (@GradeId IS NULL OR dbo.H_Grade.Id = @GradeId)
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_EmployeeDesignation.H_EmployeeId AND (@DesignationId IS NULL OR dbo.H_EmployeeDesignation.H_DesignationId = @DesignationId) AND (dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id AND (@DesignationId IS NULL OR dbo.H_Designation.Id = @DesignationId)
      INNER JOIN dbo.H_Address ON dbo.H_Employee.PermanentAddressId = dbo.H_Address.Id
      WHERE ((SELECT dbo.District.Id FROM dbo.District WHERE dbo.District.Id = (SELECT dbo.Thana.DistrictId FROM dbo.Thana WHERE dbo.Thana.Id = dbo.H_Address.ThanaId)) NOT IN
      (SELECT dbo.District.Id FROM dbo.District WHERE dbo.District.Id = (SELECT dbo.Thana.DistrictId FROM dbo.Thana WHERE dbo.Thana.Id = dbo.Branch.ThanaId)))
      AND (@Religion IS NULL OR dbo.H_Employee.Religion = @Religion) AND (@SexId IS NULL OR dbo.H_Employee.Sex = @SexId) AND (dbo.H_Employee.Status = 1)
      ORDER BY dbo.H_Employee.JoiningDate DESC', 0, 1, 0, 1)
    </script>
  </config>
  <config sequence="3042" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Employee Out Of Own Division', 2, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_Employee.Id AS ''Employee Id'', dbo.H_Employee.Name AS ''Employee Name'', dbo.H_Grade.Name AS ''Grade'', dbo.H_Designation.Name AS ''Designation'',
      dbo.H_Employee.JoiningDate AS ''Joining Date'', dbo.H_EmployeeBranch.StartDate AS ''Start Date (Branch)'',
      dbo.Branch.Name AS ''Branch'',
      (SELECT dbo.District.Name FROM dbo.District WHERE dbo.District.Id = (SELECT dbo.Thana.DistrictID FROM dbo.Thana WHERE dbo.Thana.Id = dbo.Branch.ThanaId)) AS ''District (Branch)'',
      (SELECT dbo.Division.Name FROM dbo.Division WHERE dbo.Division.Id = (Select dbo.District.DivisionId FROM dbo.District WHERE dbo.District.Id = (SELECT dbo.Thana.DistrictID FROM dbo.Thana WHERE dbo.Thana.Id = dbo.H_Address.ThanaId))) AS ''Own Division'',
      (SELECT dbo.District.Name FROM dbo.District WHERE District.Id = (SELECT dbo.Thana.DistrictID FROM dbo.Thana WHERE dbo.Thana.Id = dbo.H_Address.ThanaId)) AS ''Own District''
      FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeBranch ON dbo.H_Employee.Id = dbo.H_EmployeeBranch.H_EmployeeId AND (dbo.H_EmployeeBranch.EndDate = ''12/31/2099'')
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_EmployeeGrade.H_EmployeeId AND (@GradeId IS NULL OR dbo.H_EmployeeGrade.H_GradeId = @GradeId) AND (dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Grade ON dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id AND (@GradeId IS NULL OR dbo.H_Grade.Id = @GradeId)
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_EmployeeDesignation.H_EmployeeId AND (@DesignationId IS NULL OR dbo.H_EmployeeDesignation.H_DesignationId = @DesignationId) AND (dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id AND (@DesignationId IS NULL OR dbo.H_Designation.Id = @DesignationId)
      INNER JOIN dbo.H_Address ON dbo.H_Employee.PermanentAddressId = dbo.H_Address.Id
      WHERE ((SELECT dbo.Division.Id FROM dbo.Division WHERE dbo.Division.Id = (SELECT dbo.District.DivisionId FROM dbo.District WHERE dbo.District.Id = (SELECT dbo.Thana.DistrictId FROM dbo.Thana WHERE dbo.Thana.Id = dbo.H_Address.ThanaId))) NOT IN
      (SELECT dbo.Division.Id FROM dbo.Division WHERE dbo.Division.Id = (SELECT dbo.District.DivisionId FROM dbo.District WHERE dbo.District.Id = (SELECT dbo.Thana.DistrictId FROM dbo.Thana WHERE dbo.Thana.Id = dbo.Branch.ThanaId))))
      AND (@Religion IS NULL OR dbo.H_Employee.Religion = @Religion) AND (@SexId IS NULL OR dbo.H_Employee.Sex = @SexId) AND (dbo.H_Employee.Status = 1)
      ORDER BY dbo.H_Employee.JoiningDate DESC', 0, 1, 0, 1)
    </script>
  </config>
  <config sequence="3043" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Employee 57 Years Old', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT DISTINCT
      dbo.H_Employee.Id AS ''Employee Id'', dbo.H_Employee.Name AS ''Employee Name'',
      dbo.H_Employee.DateOfBirth AS ''Date Of Birth'', dbo.H_Employee.JoiningDate AS ''Joining Date'',
      dbo.H_Grade.Name AS ''Grade'', dbo.H_Designation.Name AS ''Designation'',
      dbo.Branch.Name AS ''Branch'',
      (SELECT dbo.District.Name FROM dbo.District WHERE dbo.District.Id = (SELECT dbo.Thana.DistrictID FROM dbo.Thana WHERE dbo.Thana.Id = dbo.Branch.ThanaId)) AS ''District (Branch)''
      FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeBranch ON dbo.H_Employee.Id = dbo.H_EmployeeBranch.H_EmployeeId
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_EmployeeGrade.H_EmployeeId AND (@GradeId IS NULL OR dbo.H_EmployeeGrade.H_GradeId = @GradeId) AND (dbo.H_EmployeeGrade.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Grade ON dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id AND (@GradeId IS NULL OR dbo.H_Grade.Id = @GradeId)
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_EmployeeBranch.H_EmployeeId = dbo.H_EmployeeDesignation.H_EmployeeId AND (@DesignationId IS NULL OR dbo.H_EmployeeDesignation.H_DesignationId = @DesignationId) AND (dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id AND (@DesignationId IS NULL OR dbo.H_Designation.Id = @DesignationId)
      WHERE DATEADD(month, 684, dbo.H_Employee.DateOfBirth) &lt;= @EndDate
      AND (@Religion IS NULL OR dbo.H_Employee.Religion = @Religion) AND (@SexId IS NULL OR dbo.H_Employee.Sex = @SexId) AND (dbo.H_Employee.Status = 1)
      ORDER BY dbo.H_Employee.DateOfBirth', 0, 1, 0, 1)
    </script>
  </config>
  <config sequence="3044" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('District Wary ASA Branch', 1, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT
      (SELECT dbo.Division.Name FROM dbo.Division WHERE dbo.Division.Id = dbo.District.DivisionId) AS ''Division'',
      dbo.District.Name AS ''District'',
      (SELECT COUNT(dbo.Branch.Code) FROM dbo.Branch WHERE dbo.Branch.RegionId IN
      (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.DistrictId = dbo.District.Id)) AS ''Branch''
      FROM dbo.District
      ORDER BY Division, dbo.District.Name', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3045" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Grade And Designation Wise Total Staff', 1, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT
      dbo.H_GradeDesignation.H_GradeId AS ''Grade'',
      dbo.H_Designation.Name AS ''Designation'',
      (SELECT COUNT(dbo.H_Employee.Id) FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_Employee.Id = dbo.H_EmployeeDesignation.H_EmployeeId AND (dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_GradeDesignation.H_DesignationId) AND (H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_Employee.Id = dbo.H_EmployeeGrade.H_EmployeeId AND (dbo.H_EmployeeGrade.H_GradeId = dbo.H_GradeDesignation.H_GradeId) AND (H_EmployeeGrade.EndDate = ''12/31/2099'')
      WHERE dbo.H_Employee.Sex = 1 AND dbo.H_Employee.Status = 1 AND dbo.H_Employee.JoiningDate &lt; @EndDate) AS ''Male'',
      (SELECT COUNT(dbo.H_Employee.Id) FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_Employee.Id = dbo.H_EmployeeDesignation.H_EmployeeId AND (dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_GradeDesignation.H_DesignationId) AND (H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_Employee.Id = dbo.H_EmployeeGrade.H_EmployeeId AND (dbo.H_EmployeeGrade.H_GradeId = dbo.H_GradeDesignation.H_GradeId) AND (H_EmployeeGrade.EndDate = ''12/31/2099'')
      WHERE dbo.H_Employee.Sex = 2 AND dbo.H_Employee.Status = 1 AND dbo.H_Employee.JoiningDate &lt; @EndDate) AS ''Female'',
      (SELECT COUNT(dbo.H_Employee.Id) FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_Employee.Id = dbo.H_EmployeeDesignation.H_EmployeeId AND (dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_GradeDesignation.H_DesignationId) AND (H_EmployeeDesignation.EndDate = ''12/31/2099'')
      INNER JOIN dbo.H_EmployeeGrade ON dbo.H_Employee.Id = dbo.H_EmployeeGrade.H_EmployeeId AND (dbo.H_EmployeeGrade.H_GradeId = dbo.H_GradeDesignation.H_GradeId) AND (H_EmployeeGrade.EndDate = ''12/31/2099'')
      WHERE dbo.H_Employee.Status = 1 AND dbo.H_Employee.JoiningDate &lt;= @EndDate) AS ''Total Employee''
      FROM dbo.H_GradeDesignation
      INNER JOIN dbo.H_Designation ON dbo.H_GradeDesignation.H_DesignationId = dbo.H_Designation.Id
      ORDER BY Grade, Designation', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3046" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('ASA District And Designation Wise Total Staff', 1, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT dbo.Zone.Name AS ''ASA District'',
      (SELECT COUNT(*) FROM dbo.Branch WHERE dbo.Branch.RegionId In (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.ZoneId = dbo.Zone.Id)) AS ''Branch'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE (dbo.H_EmployeeDesignation.H_DesignationId = 165 AND dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.ZoneId = dbo.Zone.Id)))) AS ''LO'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE ((dbo.H_EmployeeDesignation.H_DesignationId = 41 OR dbo.H_EmployeeDesignation.H_DesignationId = 42 OR dbo.H_EmployeeDesignation.H_DesignationId = 43 OR dbo.H_EmployeeDesignation.H_DesignationId = 44) AND dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.ZoneId = dbo.Zone.Id)))) AS ''BM'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE ((dbo.H_EmployeeDesignation.H_DesignationId = 21 OR dbo.H_EmployeeDesignation.H_DesignationId = 22 OR dbo.H_EmployeeDesignation.H_DesignationId = 23) AND dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.ZoneId = dbo.Zone.Id)))) AS ''ABM'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE ((dbo.H_EmployeeDesignation.H_DesignationId = 93 OR dbo.H_EmployeeDesignation.H_DesignationId = 94 OR dbo.H_EmployeeDesignation.H_DesignationId = 95 OR dbo.H_EmployeeDesignation.H_DesignationId = 96) AND dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.ZoneId = dbo.Zone.Id)))) AS ''DM'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE (dbo.H_EmployeeDesignation.H_DesignationId = 39 AND dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.ZoneId = dbo.Zone.Id)))) AS ''Auditor'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE ((dbo.H_EmployeeDesignation.H_DesignationId NOT IN (165, 41, 42, 43, 44, 21, 22, 23, 205, 93, 94, 95, 96, 39)) AND dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'')
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.ZoneId = dbo.Zone.Id)))) AS ''Others'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE (dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.ZoneId = dbo.Zone.Id)))) AND dbo.H_EmployeeDesignation.EndDate = ''12/31/2099'') AS ''Total''
      FROM dbo.Zone', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3047" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Own District And Designation Wise Total Staff', 1, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @DistrictId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @DistrictId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT dbo.District.Name AS ''District'',
      (SELECT COUNT(*) FROM dbo.Branch WHERE dbo.Branch.RegionId In (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.DistrictId = dbo.District.Id) AND dbo.Branch.BranchType = 1) AS ''Branch'',
      (SELECT COUNT(*) FROM dbo.Branch WHERE dbo.Branch.RegionId In (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.DistrictId = dbo.District.Id) AND dbo.Branch.BranchType != 1) AS ''Other Branch'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE (dbo.H_EmployeeDesignation.H_DesignationId = 165)
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.DistrictId = dbo.District.Id)))) AS ''LO'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE (dbo.H_EmployeeDesignation.H_DesignationId = 41 OR dbo.H_EmployeeDesignation.H_DesignationId = 42 OR dbo.H_EmployeeDesignation.H_DesignationId = 43 OR dbo.H_EmployeeDesignation.H_DesignationId = 44)
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.DistrictId = dbo.District.Id)))) AS ''BM'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE (dbo.H_EmployeeDesignation.H_DesignationId = 21 OR dbo.H_EmployeeDesignation.H_DesignationId = 22 OR dbo.H_EmployeeDesignation.H_DesignationId = 23)
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.DistrictId = dbo.District.Id)))) AS ''ABM'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE (dbo.H_EmployeeDesignation.H_DesignationId = 93 OR dbo.H_EmployeeDesignation.H_DesignationId = 94 OR dbo.H_EmployeeDesignation.H_DesignationId = 95 OR dbo.H_EmployeeDesignation.H_DesignationId = 96)
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.DistrictId = dbo.District.Id)))) AS ''DM'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE (dbo.H_EmployeeDesignation.H_DesignationId = 39)
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.DistrictId = dbo.District.Id)))) AS ''Auditor'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE (dbo.H_EmployeeDesignation.H_DesignationId NOT IN (165, 41, 42, 43, 44, 21, 22, 23, 205, 93, 94, 95, 96, 39))
      AND dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId
      IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.DistrictId = dbo.District.Id)))) AS ''Others'',
      (SELECT COUNT(*) FROM dbo.H_EmployeeDesignation WHERE (dbo.H_EmployeeDesignation.H_EmployeeId IN (SELECT dbo.H_EmployeeBranch.H_EmployeeId FROM dbo.H_EmployeeBranch
      WHERE dbo.H_EmployeeBranch.EndDate = ''12/31/2099'' AND dbo.H_EmployeeBranch.BranchId IN (SELECT dbo.Branch.Code FROM dbo.Branch WHERE dbo.Branch.RegionId IN (SELECT dbo.Region.Id FROM dbo.Region WHERE dbo.Region.DistrictId = dbo.District.Id))))) AS ''Total''
      FROM dbo.District', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3048" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Grade Wise Experience Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT
      dbo.H_Grade.Name AS ''Grade'',
      SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)
      AND (DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &gt;= 0 AND DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &lt;= 12)
      AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-1'',
      SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)
      AND (DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &gt;= 13 AND DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &lt;= 24)
      AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-2'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)
      AND (DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &gt;= 25 AND DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &lt;= 36)
      AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-3'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)
      AND (DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &gt;= 37 AND DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &lt;= 48)
      AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-4'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)
      AND (DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &gt;= 49 AND DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &lt;= 60)
      AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-5'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)
      AND (DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &gt;= 61 AND DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &lt;= 72)
      AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-6'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)
      AND (DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &gt;= 73 AND DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &lt;= 84)
      AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-7'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)
      AND (DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &gt;= 85 AND DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &lt;= 96)
      AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-8'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)
      AND (DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &gt;= 97 AND DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &lt;= 108)
      AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-9'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)
      AND (DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &gt;= 109 AND DATEDIFF(month, dbo.H_EmployeeGrade.StartDate, @EndDate) &lt;= 120)
      AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-10''
      FROM dbo.H_Grade
      ORDER BY dbo.H_Grade.Id', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3049" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Joining Date Wise Experience Information', 4, 'DECLARE @StartDate DateTime, @EndDate DateTime, @DivisionId INT, @ZoneId INT, @RegionId INT,
      @BranchCode INT, @GradeId INT, @DesignationId INT, @Religion INT, @SexId INT
      SET @StartDate = {2}
      SET @EndDate = {3}
      SET @DivisionId = {4}
      SET @ZoneId = {5}
      SET @RegionId = {6}
      SET @BranchCode ={7}
      SET @GradeId = {8}
      SET @DesignationId = {9}
      SET @Religion = {10}
      SET @SexId = {11}
      SELECT
      dbo.H_Grade.Name AS ''Grade'',
      SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_Employee.Id
      WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)  AND (DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &gt;= 0
      AND DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &lt;= 12) AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-1'',
      SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_Employee.Id
      WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)  AND (DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &gt;= 13
      AND DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &lt;= 24) AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-2'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_Employee.Id
      WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)  AND (DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &gt;= 25
      AND DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &lt;= 36) AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-3'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_Employee.Id
      WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)  AND (DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &gt;= 37
      AND DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &lt;= 48) AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-4'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_Employee.Id
      WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)  AND (DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &gt;= 49
      AND DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &lt;= 60) AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-5'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_Employee.Id
      WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)  AND (DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &gt;= 61
      AND DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &lt;= 72) AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-6'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_Employee.Id
      WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)  AND (DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &gt;= 73
      AND DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &lt;= 84) AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-7'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_Employee.Id
      WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)  AND (DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &gt;= 85
      AND DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &lt;= 96) AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-8'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_Employee.Id
      WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)  AND (DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &gt;= 97
      AND DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &lt;= 108) AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-9'',
      (SELECT COUNT(dbo.H_EmployeeGrade.H_EmployeeId) FROM dbo.H_EmployeeGrade
      INNER JOIN dbo.H_Employee ON dbo.H_EmployeeGrade.H_EmployeeId = dbo.H_Employee.Id
      WHERE (dbo.H_EmployeeGrade.H_GradeId = dbo.H_Grade.Id)  AND (DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &gt;= 109
      AND DATEDIFF(month, dbo.H_Employee.JoiningDate, @EndDate) &lt;= 120) AND dbo.H_EmployeeGrade.EndDate = ''12/31/2099'') AS ''Year-10''
      FROM dbo.H_Grade
      ORDER BY dbo.H_Grade.Id', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3050" type="FRESH" version="1.0.0" description="ReportConfig">
    <script provider="SQL Server">
      Insert Into dbo.ReportConfig values('Staff Information', 64, '', 0, 0, 0, 0)
    </script>
  </config>
  <config sequence="3051" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3052" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3053" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3054" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3055" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3056" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3057" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3058" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3059" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3060" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3061" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
      CREATE PROCEDURE dbo.[MinoritiesInformationOfEmployees](
      @AsOnDate DateTime)
      AS
      BEGIN
      SELECT
      (SELECT COUNT(dbo.H_Employee.Id) WHERE dbo.H_Employee.Sex = 1) AS 'Muslim',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE dbo.H_Employee.Sex = 2) AS 'Hindu',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE dbo.H_Employee.Sex = 3) AS 'Christian',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE dbo.H_Employee.Sex = 4) AS 'Buddha',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE dbo.H_Employee.Sex = 5) AS 'Others',
      (SELECT COUNT(dbo.H_Employee.Id)) AS 'Total'
      FROM dbo.H_Employee WHERE dbo.H_Employee.JoiningDate &lt;= @AsOnDate
      GROUP BY(dbo.H_Employee.Sex)
      END
    </script>
  </config>
  <config sequence="3062" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
      CREATE PROCEDURE dbo.[EmployeeAgeInformation](
      @AsOnDate DateTime)
      AS
      BEGIN
      SELECT
      (SELECT COUNT(dbo.H_Employee.Id) WHERE (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &lt;= 311)) AS 'Age 0-25',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &gt;= 312) AND (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &lt;= 371)) AS 'Age 26-30',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &gt;= 372) AND (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &lt;= 431)) AS 'Age 31-35',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &gt;= 432) AND (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &lt;= 491)) AS 'Age 36-40',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &gt;= 492) AND (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &lt;= 551)) AS 'Age 41-45',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &gt;= 552) AND (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &lt;= 611)) AS 'Age 46-50',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &gt;= 612) AND (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &lt;= 695)) AS 'Age 51-57',
      (SELECT COUNT(dbo.H_Employee.Id) WHERE (DATEDIFF(month, dbo.H_Employee.DateOfBirth, @AsOnDate) &gt;= 696)) AS 'Age 58-plus',
      (SELECT COUNT(dbo.H_Employee.Id)) AS 'Total'
      FROM dbo.H_Employee WHERE dbo.H_Employee.JoiningDate &lt;= @AsOnDate
      GROUP BY(dbo.H_Employee.DateOfBirth)
      END
    </script>
  </config>
  <config sequence="3063" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
      CREATE PROCEDURE dbo.[EmployeeEducationInformation](
      @AsOnDate DateTime)
      AS
      BEGIN
      SELECT DISTINCT

      (SELECT COUNT(dbo.H_AcademicQualification.H_EmployeeId) FROM dbo.H_AcademicQualification
      INNER JOIN dbo.H_Employee ON dbo.H_Employee.Id = dbo.H_AcademicQualification.H_EmployeeId AND dbo.H_Employee.JoiningDate &lt; = @AsOnDate
      WHERE dbo.H_AcademicQualification.Level = 'Masters') AS 'Masters',

      (SELECT COUNT(dbo.H_AcademicQualification.H_EmployeeId) FROM dbo.H_AcademicQualification
      INNER JOIN dbo.H_Employee ON dbo.H_Employee.Id = dbo.H_AcademicQualification.H_EmployeeId AND dbo.H_Employee.JoiningDate &lt; = @AsOnDate
      WHERE (dbo.H_AcademicQualification.Level = 'Honors' AND dbo.H_AcademicQualification.H_EmployeeId NOT IN
      (SELECT dbo.H_AcademicQualification.H_EmployeeId FROM dbo.H_AcademicQualification WHERE dbo.H_AcademicQualification.Level = 'Masters'))) AS 'Honors',

      (SELECT COUNT(dbo.H_AcademicQualification.H_EmployeeId) FROM dbo.H_AcademicQualification
      INNER JOIN dbo.H_Employee ON dbo.H_Employee.Id = dbo.H_AcademicQualification.H_EmployeeId AND dbo.H_Employee.JoiningDate &lt; = @AsOnDate
      WHERE (dbo.H_AcademicQualification.Level = 'Higher Secondary' AND dbo.H_AcademicQualification.H_EmployeeId NOT IN
      (SELECT dbo.H_AcademicQualification.H_EmployeeId FROM dbo.H_AcademicQualification WHERE dbo.H_AcademicQualification.Level = 'Masters' OR dbo.H_AcademicQualification.Level = 'Honors'))) AS 'Higher Secondary',

      (SELECT COUNT(dbo.H_AcademicQualification.H_EmployeeId) FROM dbo.H_AcademicQualification
      INNER JOIN dbo.H_Employee ON dbo.H_Employee.Id = dbo.H_AcademicQualification.H_EmployeeId AND dbo.H_Employee.JoiningDate &lt; = @AsOnDate
      WHERE (dbo.H_AcademicQualification.Level = 'Secondary' AND dbo.H_AcademicQualification.H_EmployeeId NOT IN
      (SELECT dbo.H_AcademicQualification.H_EmployeeId FROM dbo.H_AcademicQualification WHERE dbo.H_AcademicQualification.Level = 'Masters' OR dbo.H_AcademicQualification.Level = 'Honors' OR dbo.H_AcademicQualification.Level = 'Higher Secondary'))) AS 'Secondary',

      (SELECT COUNT(dbo.H_AcademicQualification.H_EmployeeId) FROM dbo.H_AcademicQualification
      INNER JOIN dbo.H_Employee ON dbo.H_Employee.Id = dbo.H_AcademicQualification.H_EmployeeId AND dbo.H_Employee.JoiningDate &lt; = @AsOnDate
      WHERE dbo.H_AcademicQualification.H_EmployeeId NOT IN
      (SELECT dbo.H_AcademicQualification.H_EmployeeId FROM dbo.H_AcademicQualification WHERE dbo.H_AcademicQualification.Level = 'Masters' OR dbo.H_AcademicQualification.Level = 'Honors' OR dbo.H_AcademicQualification.Level = 'Higher Secondary' OR dbo.H_AcademicQualification.Level = 'Secondary')) AS 'Others'

      FROM dbo.H_AcademicQualification
      END
    </script>
  </config>
  <config sequence="3064" type="FRESH" version="1.0.0" description="LetterOfIdCardProcedure">
    <script provider="SQL Server">
      CREATE PROCEDURE [dbo].[LetterOfIdCardProcedure](
      @StartId int,
      @EndId int)
      AS
      BEGIN
      Select dbo.H_Employee.Code AS 'ID', dbo.H_Employee.Name AS 'Name', dbo.H_Employee.FatherName AS 'FatherName',
      dbo.H_Designation.Name AS 'Designation', '   ' + CONVERT(VARCHAR, dbo.H_Employee.JoiningDate, 103) AS 'JoiningDate',
      (SELECT dbo.Thana.Name FROM dbo.Thana WHERE dbo.Thana.Id = dbo.H_Address.ThanaId) AS 'OwnThana',
      (SELECT dbo.District.Name FROM dbo.District WHERE dbo.District.Id = (SELECT dbo.Thana.DistrictId FROM dbo.Thana WHERE dbo.Thana.Id = dbo.H_Address.ThanaId)) AS 'OwnDistrict',
      (SELECT dbo.Branch.Name FROM dbo.Branch WHERE dbo.Branch.Id = dbo.H_EmployeeBranch.BranchId) AS 'WorkingBranch',
      dbo.Subzone.Name AS 'WorkingDistrict'
      FROM dbo.H_Employee
      INNER JOIN dbo.H_EmployeeDesignation ON dbo.H_Employee.Id = dbo.H_EmployeeDesignation.H_EmployeeId AND H_EmployeeDesignation.EndDate='2099-12-31'
      INNER JOIN dbo.H_Designation ON dbo.H_EmployeeDesignation.H_DesignationId = dbo.H_Designation.Id
      INNER JOIN dbo.H_Address ON dbo.H_Employee.PermanentAddressId = dbo.H_Address.Id
      INNER JOIN dbo.H_EmployeeBranch ON dbo.H_Employee.Id = dbo.H_EmployeeBranch.H_EmployeeId AND H_EmployeeBranch.EndDate='2099-12-31'
      INNER JOIN dbo.Branch ON dbo.H_EmployeeBranch.BranchId = dbo.Branch.Code
      INNER JOIN dbo.Region ON dbo.Branch.RegionId = dbo.Region.Id
      INNER JOIN dbo.Subzone ON dbo.Region.SubzoneId = dbo.Subzone.Id
      WHERE dbo.H_Employee.Code BETWEEN @StartId AND ISNULL(@EndId, @StartId)
      END
    </script>
  </config>
  <config sequence="3065" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3066" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3067" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3068" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3069" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3070" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3071" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3072" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3073" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3074" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <config sequence="3075" type="FRESH" version="1.0.0" description="">
    <script provider="SQL Server">
    </script>
  </config>
  <!-- END DEFAULT DATA SECTION -->
  <!-- START CONSTRAINT SECTION -->
  <config sequence="4001" type="FRESH" version="1.0.0" description="DatabaseConfiguration">
    <script provider="SQL Server">
      ALTER TABLE DatabaseConfiguration
      ADD CONSTRAINT FK_DatabaseConfiguration_InstallationId FOREIGN KEY(InstallationId) REFERENCES Installation (Id)
    </script>
  </config>
  <config sequence="4002" type="FRESH" version="1.0.0" description="Property">
    <script provider="SQL Server">
      ALTER TABLE Property
      ADD CONSTRAINT FK_Property_ApplicationName FOREIGN KEY(ModuleName) REFERENCES Module (Name)
    </script>
  </config>
  <config sequence="4003" type="FRESH" version="1.0.0" description="Property">
    <script provider="SQL Server">
      ALTER TABLE Property
      ADD CONSTRAINT FK_Property_PermissionProperty FOREIGN KEY(PermissionProperty) REFERENCES Property (Name)
    </script>
  </config>
  <config sequence="4004" type="FRESH" version="1.0.0" description="PropertyCommand">
    <script provider="SQL Server">
      ALTER TABLE PropertyCommand
      ADD CONSTRAINT FK_PropertyCommand_PropertyName FOREIGN KEY(PropertyName) REFERENCES Property (Name)
    </script>
  </config>
  <config sequence="4005" type="FRESH" version="1.0.0" description="PropertyCommand">
    <script provider="SQL Server">

    </script>
  </config>
  <config sequence="4006" type="FRESH" version="1.0.0" description="RoleProperty">
    <script provider="SQL Server">
      ALTER TABLE RoleProperty
      ADD CONSTRAINT FK_RoleProperty_RoleName FOREIGN KEY(RoleName) REFERENCES Role (Name)
    </script>
  </config>
  <config sequence="4007" type="FRESH" version="1.0.0" description="RoleProperty">
    <script provider="SQL Server">
      ALTER TABLE RoleProperty
      ADD CONSTRAINT FK_RoleProperty_PropertyName FOREIGN KEY(PropertyName) REFERENCES Property (Name)
    </script>
  </config>
  <config sequence="4008" type="FRESH" version="1.0.0" description="RoleCommand">
    <script provider="SQL Server">
      ALTER TABLE RoleCommand
      ADD CONSTRAINT FK_RoleCommand_PropertyName FOREIGN KEY(PropertyName) REFERENCES Property (Name)
    </script>
  </config>
  <config sequence="4009" type="FRESH" version="1.0.0" description="RoleCommand">
    <script provider="SQL Server">

    </script>
  </config>
  <config sequence="4010" type="FRESH" version="1.0.0" description="UserRole">
    <script provider="SQL Server">
      ALTER TABLE UserRole
      ADD CONSTRAINT FK_UserRole_UserLogin FOREIGN KEY(UserLogin) REFERENCES [User] (Login)
    </script>
  </config>
  <config sequence="4011" type="FRESH" version="1.0.0" description="UserRole">
    <script provider="SQL Server">
      ALTER TABLE UserRole
      ADD CONSTRAINT FK_UserRole_RoleName FOREIGN KEY(RoleName) REFERENCES Role (Name)
    </script>
  </config>
  <config sequence="4012" type="FRESH" version="1.0.0" description="DbTransaction">
    <script provider="SQL Server">
      ALTER TABLE DbTransaction
      ADD CONSTRAINT FK_DbTransaction_CreatedBy FOREIGN KEY (CreatedBy) REFERENCES [User] (Login)
    </script>
  </config>
  <config sequence="4013" type="FRESH" version="1.0.0" description="DbTransactionDetails">
    <script provider="SQL Server">
      ALTER TABLE DbTransactionDetails
      ADD CONSTRAINT FK_DbTransactionDetails_DbTransactionId FOREIGN KEY (DbTransactionId) REFERENCES DbTransaction (Id)
    </script>
  </config>
  <config sequence="4015" type="FRESH" version="1.0.0" description="Thana">
    <script provider="SQL Server">
      ALTER TABLE Thana
      ADD CONSTRAINT FK_Thana_DistrictId FOREIGN KEY(DistrictId) REFERENCES District (Id)
    </script>
  </config>
  <config sequence="4016" type="FRESH" version="1.0.0" description="Subzone">
    <script provider="SQL Server">
      ALTER TABLE Subzone
      ADD CONSTRAINT FK_Subzone_ZoneId FOREIGN KEY(ZoneId) REFERENCES Zone (Id)
    </script>
  </config>
  <config sequence="4017" type="FRESH" version="1.0.0" description="Region">
    <script provider="SQL Server">
      ALTER TABLE Region
      ADD CONSTRAINT FK_Region_SubzoneId FOREIGN KEY(SubzoneId) REFERENCES Subzone (Id)
    </script>
  </config>
  <config sequence="4019" type="FRESH" version="1.0.0" description="Branch">
    <script provider="SQL Server">
      ALTER TABLE Branch
      ADD CONSTRAINT FK_Branch_ThanaId FOREIGN KEY(ThanaId) REFERENCES Thana (Id)
    </script>
  </config>
  <config sequence="4020" type="FRESH" version="1.0.0" description="Branch">
    <script provider="SQL Server">
      ALTER TABLE Branch
      ADD CONSTRAINT FK_Branch_RegionId FOREIGN KEY(RegionId) REFERENCES Region (Id)
    </script>
  </config>
  <config sequence="4021" type="FRESH" version="1.0.0" description="UserLocation">
    <script provider="SQL Server">
      ALTER TABLE UserLocation
      ADD CONSTRAINT FK_UserLocation_Login FOREIGN KEY(Login) REFERENCES [User] (Login)
    </script>
  </config>
  <config sequence="4022" type="FRESH" version="1.0.0" description="UserLocation">
    <script provider="SQL Server">
      ALTER TABLE UserLocation
      ADD CONSTRAINT FK_UserLocation_ZoneId FOREIGN KEY(ZoneId) REFERENCES Zone (Id)
    </script>
  </config>
  <config sequence="4023" type="FRESH" version="1.0.0" description="UserLocation">
    <script provider="SQL Server">
      ALTER TABLE UserLocation
      ADD CONSTRAINT FK_UserLocation_SubzoneId FOREIGN KEY(SubzoneId) REFERENCES Subzone (Id)
    </script>
  </config>
  <config sequence="4024" type="FRESH" version="1.0.0" description="UserLocation">
    <script provider="SQL Server">
      ALTER TABLE UserLocation
      ADD CONSTRAINT FK_UserLocation_RegionId FOREIGN KEY(RegionId) REFERENCES Region (Id)
    </script>
  </config>
  <config sequence="4025" type="FRESH" version="1.0.0" description="UserLocation">
    <script provider="SQL Server">
      ALTER TABLE UserLocation
      ADD CONSTRAINT FK_UserLocation_BranchId FOREIGN KEY(BranchId) REFERENCES Branch (Id)
    </script>
  </config>
  <!-- HRM starts -->
  <config sequence="4101" type="FRESH" version="1.0.0" description="H_GradeDesignation">
    <script provider="SQL Server">
      ALTER TABLE H_GradeDesignation
      ADD CONSTRAINT FK_H_GradeDesignation_H_GradeId FOREIGN KEY(H_GradeId) REFERENCES H_Grade (Id)
    </script>
  </config>
  <config sequence="4102" type="FRESH" version="1.0.0" description="H_GradeDesignation">
    <script provider="SQL Server">
      ALTER TABLE H_GradeDesignation
      ADD CONSTRAINT FK_H_GradeDesignation_H_DesignationId FOREIGN KEY(H_DesignationId) REFERENCES H_Designation (Id)
    </script>
  </config>
  <config sequence="4103" type="FRESH" version="1.0.0" description="H_Employee">
    <script provider="SQL Server">
      ALTER TABLE H_Employee
      ADD CONSTRAINT FK_H_Employee_PermanentAddressId FOREIGN KEY(PermanentAddressId) REFERENCES H_Address (Id)
    </script>
  </config>
  <config sequence="4104" type="FRESH" version="1.0.0" description="H_Employee">
    <script provider="SQL Server">
      ALTER TABLE H_Employee
      ADD CONSTRAINT FK_H_Employee_PresentAddressId FOREIGN KEY(PresentAddressId) REFERENCES H_Address (Id)
    </script>
  </config>
  <config sequence="4105" type="FRESH" version="1.0.0" description="H_EmployeeGrade">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeGrade
      ADD CONSTRAINT FK_H_EmployeeGrade_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4106" type="FRESH" version="1.0.0" description="H_EmployeeGrade">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeGrade
      ADD CONSTRAINT FK_H_EmployeeGrade_H_GradeId FOREIGN KEY(H_GradeId) REFERENCES H_Grade (Id)
    </script>
  </config>
  <config sequence="4107" type="FRESH" version="1.0.0" description="H_EmployeeDesignation">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeDesignation
      ADD CONSTRAINT FK_H_EmployeeDesignation_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4108" type="FRESH" version="1.0.0" description="H_EmployeeDesignation">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeDesignation
      ADD CONSTRAINT FK_H_EmployeeDesignation_H_DesignationId FOREIGN KEY(H_DesignationId) REFERENCES H_Designation (Id)
    </script>
  </config>
  <config sequence="4109" type="FRESH" version="1.0.0" description="H_EmployeeDepartment">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeDepartment
      ADD CONSTRAINT FK_H_EmployeeDepartment_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4110" type="FRESH" version="1.0.0" description="H_EmployeeDepartment">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeDepartment
      ADD CONSTRAINT FK_H_EmployeeDepartment_H_DepartmentId FOREIGN KEY(H_DepartmentId) REFERENCES H_Department (Id)
    </script>
  </config>
  <config sequence="4111" type="FRESH" version="1.0.0" description="H_EmployeeBranch">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeBranch
      ADD CONSTRAINT FK_H_EmployeeBranch_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4112" type="FRESH" version="1.0.0" description="H_EmployeeBranch">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeBranch
      ADD CONSTRAINT FK_H_EmployeeBranch_BranchId FOREIGN KEY(BranchId) REFERENCES Branch (Id)
    </script>
  </config>
  <config sequence="4113" type="FRESH" version="1.0.0" description="H_AcademicQualification">
    <script provider="SQL Server">

    </script>
  </config>
  <config sequence="4114" type="FRESH" version="1.0.0" description="H_AcademicQualification">
    <script provider="SQL Server">
      ALTER TABLE H_ProfessionalQualification
      ADD CONSTRAINT FK_H_ProfessionalQualification_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4115" type="FRESH" version="1.0.0" description="H_Training">
    <script provider="SQL Server">
      ALTER TABLE H_Training
      ADD CONSTRAINT FK_H_Training_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4116" type="FRESH" version="1.0.0" description="H_Experience">
    <script provider="SQL Server">
      ALTER TABLE H_Experience
      ADD CONSTRAINT FK_H_Experience_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4117" type="FRESH" version="1.0.0" description="H_EmployeeTransfer">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeTransfer
      ADD CONSTRAINT FK_H_EmployeeTransfer_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4118" type="FRESH" version="1.0.0" description="H_EmployeeTransfer">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeTransfer
      ADD CONSTRAINT FK_H_EmployeeTransfer_SourceBranchId FOREIGN KEY(SourceBranchId) REFERENCES Branch (Id)
    </script>
  </config>
  <config sequence="4119" type="FRESH" version="1.0.0" description="H_EmployeeTransfer">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeTransfer
      ADD CONSTRAINT FK_H_EmployeeTransfer_DestinationBranchId FOREIGN KEY(DestinationBranchId) REFERENCES Branch (Id)
    </script>
  </config>
  <config sequence="4120" type="FRESH" version="1.0.0" description="H_EmployeePromotion">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeePromotion
      ADD CONSTRAINT FK_H_EmployeePromotion_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4121" type="FRESH" version="1.0.0" description="H_EmployeePromotion">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeePromotion
      ADD CONSTRAINT FK_H_EmployeePromotion_OldH_GradeId FOREIGN KEY(OldH_GradeId) REFERENCES H_Grade (Id)
    </script>
  </config>
  <config sequence="4122" type="FRESH" version="1.0.0" description="H_EmployeePromotion">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeePromotion
      ADD CONSTRAINT FK_H_EmployeePromotion_NewH_GradeId FOREIGN KEY(NewH_GradeId) REFERENCES H_Grade (Id)
    </script>
  </config>
  <config sequence="4123" type="FRESH" version="1.0.0" description="H_EmployeePromotion">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeePromotion
      ADD CONSTRAINT FK_H_EmployeePromotion_OldH_DesignationId FOREIGN KEY(OldH_DesignationId) REFERENCES H_Designation (Id)
    </script>
  </config>
  <config sequence="4124" type="FRESH" version="1.0.0" description="H_EmployeePromotion">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeePromotion
      ADD CONSTRAINT FK_H_EmployeePromotion_NewH_DesignationId FOREIGN KEY(NewH_DesignationId) REFERENCES H_Designation (Id)
    </script>
  </config>
  <config sequence="4129" type="FRESH" version="1.0.0" description="H_EmployeeLeave">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeLeave
      ADD CONSTRAINT FK_H_EmployeeLeave_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4130" type="FRESH" version="1.0.0" description="H_EmployeeDrop">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeDrop
      ADD CONSTRAINT FK_H_EmployeeDrop_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4131" type="FRESH" version="1.0.0" description="H_EmployeeRejoin">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeRejoin
      ADD CONSTRAINT FK_H_EmployeeRejoin_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4132" type="FRESH" version="1.0.0" description="H_EmployeeRejoin">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeRejoin
      ADD CONSTRAINT FK_H_EmployeeRejoin_SourceBranchId FOREIGN KEY(SourceBranchId) REFERENCES Branch (Id)
    </script>
  </config>
  <config sequence="4133" type="FRESH" version="1.0.0" description="H_EmployeeRejoin">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeRejoin
      ADD CONSTRAINT FK_H_EmployeeRejoin_DestinationBranchId FOREIGN KEY(DestinationBranchId) REFERENCES Branch (Id)
    </script>
  </config>
  <config sequence="4134" type="FRESH" version="1.0.0" description="H_EmployeeReemployment">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeReemployment
      ADD CONSTRAINT H_EmployeeReemployment_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4135" type="FRESH" version="1.0.0" description="H_EmployeeReemployment">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeReemployment
      ADD CONSTRAINT FK_H_EmployeeReemployment_SourceBranchId FOREIGN KEY(SourceBranchId) REFERENCES Branch (Id)
    </script>
  </config>
  <config sequence="4136" type="FRESH" version="1.0.0" description="H_EmployeeReemployment">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeReemployment
      ADD CONSTRAINT FK_H_EmployeeReemployment_DestinationBranchId FOREIGN KEY(DestinationBranchId) REFERENCES Branch (Id)
    </script>
  </config>
  <config sequence="4137" type="FRESH" version="1.0.0" description="H_EmployeePenalty">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeePenalty
      ADD CONSTRAINT FK_H_EmployeePenalty_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4138" type="FRESH" version="1.0.0" description="H_EmployeeIncrementHeldup">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeIncrementHeldup
      ADD CONSTRAINT FK_H_EmployeeIncrementHeldup_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4139" type="FRESH" version="1.0.0" description="H_EmployeeIncrementHeldup">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeIncrementHeldup
      ADD CONSTRAINT FK_H_EmployeeIncrementHeldup_BranchId FOREIGN KEY(BranchId) REFERENCES Branch (Id)
    </script>
  </config>
  <config sequence="4140" type="FRESH" version="1.0.0" description="H_EmployeeWarning">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeWarning
      ADD CONSTRAINT FK_H_EmployeeWarning_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4141" type="FRESH" version="1.0.0" description="H_EmployeeWarning">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeWarning
      ADD CONSTRAINT FK_H_EmployeeWarning_BranchId FOREIGN KEY(BranchId) REFERENCES Branch (Id)
    </script>
  </config>
  <config sequence="4142" type="FRESH" version="1.0.0" description="H_EmployeeWaitingForPosting">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeWaitingForPosting
      ADD CONSTRAINT FK_H_EmployeeWaitingForPosting_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4143" type="FRESH" version="1.0.0" description="H_EmployeeActingDesignation">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeActingDesignation
      ADD CONSTRAINT FK_H_EmployeeActingDesignation_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4144" type="FRESH" version="1.0.0" description="H_EmployeeActingDesignation">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeActingDesignation
      ADD CONSTRAINT FK_H_EmployeeActingDesignation_InchargedGradeId FOREIGN KEY(InchargedGradeId) REFERENCES H_Grade (Id)
    </script>
  </config>
  <config sequence="4145" type="FRESH" version="1.0.0" description="H_EmployeeActingDesignation">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeActingDesignation
      ADD CONSTRAINT FK_H_EmployeeActingDesignation_InchargedDesignationId FOREIGN KEY(InchargedDesignationId) REFERENCES H_Designation (Id)
    </script>
  </config>
  <config sequence="4146" type="FRESH" version="1.0.0" description="H_EmployeeSalary">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeSalary
      ADD CONSTRAINT FK_H_EmployeeSalary_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4147" type="FRESH" version="1.0.0" description="H_EmployeeSpecialHonor">
    <script provider="SQL Server">
      ALTER TABLE H_EmployeeSpecialHonor
      ADD CONSTRAINT FK_H_EmployeeSpecialHonor_H_EmployeeId FOREIGN KEY(H_EmployeeId) REFERENCES H_Employee (Id)
    </script>
  </config>
  <config sequence="4148" type="FRESH" version="1.0.0" description="H_Address">
    <script provider="SQL Server">
      ALTER TABLE H_Address
      ADD CONSTRAINT FK_H_Address_ThanaId FOREIGN KEY(ThanaId) REFERENCES Thana (Id)
    </script>
  </config>
  <config sequence="4149" type="FRESH" version="1.0.0" description="Branch_Transfer">
    <script provider="SQL Server">
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_BRANCHTRANSFER ADD', ' Branch Transfer', 'OWN', NULL, NULL, 'HRM/H_BranchTransfer.aspx', 'True', 400)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_BRANCHTRANSFER ADD', 'SAVE', 1)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_BRANCHTRANSFER ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_BRANCHTRANSFER ADD', 'SAVE')

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_FINALPAYMENT ADD', ' Final Payment', 'OWN', NULL, NULL, 'HRM/H_FnalPaymentAdd.aspx', 'True', 420)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_FINALPAYMENT ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_FINALPAYMENT ADD', 'SAVE AND NEW', 2)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_FINALPAYMENT ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_FINALPAYMENT ADD', 'SAVE')
    </script>
  </config>
  <config sequence="4150" type="FRESH" version="1.0.0" description="EmployeeEducation">
    <script provider="SQL Server">
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'BOARDUNIVERSITY LIST', 'Board University', 'OWN', NULL, NULL, 'Admin/BoardUniversityList.aspx', 'True', 230)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'BOARDUNIVERSITY ADD', 'Board University', 'INHERITED', 'BOARDUNIVERSITY LIST', NULL, 'Admin/BoardUniversityList.aspx', 'False', 240)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'EXAMNAME LIST', 'Exam Name', 'OWN', NULL, NULL, 'Admin/ExamNameList.aspx', 'True', 250)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'EXAMNAME ADD', 'Exam Name', 'INHERITED', 'EXAMNAME LIST', NULL, 'Admin/ExamNameList.aspx', 'False', 260)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'GROUPSUBJECT LIST', 'Group Subject', 'OWN', NULL, NULL, 'Admin/GroupSubjectList.aspx', 'True', 270)
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('ADMIN', 'GROUPSUBJECT ADD', 'Group Subject', 'INHERITED', 'GROUPSUBJECT LIST', NULL, 'Admin/GroupSubjectList.aspx', 'False', 280)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('BOARDUNIVERSITY LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('BOARDUNIVERSITY LIST', 'DELETE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('EXAMNAME LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('EXAMNAME LIST', 'DELETE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('GROUPSUBJECT LIST', 'ADD', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('GROUPSUBJECT LIST', 'DELETE', 2)

      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('BOARDUNIVERSITY ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('BOARDUNIVERSITY ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('BOARDUNIVERSITY ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('EXAMNAME ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('EXAMNAME ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('EXAMNAME ADD', 'SAVE AND NEW', 3)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('GROUPSUBJECT ADD', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('GROUPSUBJECT ADD', 'SAVE AND CLOSE', 2)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('GROUPSUBJECT ADD', 'SAVE AND NEW', 3)

      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'BOARDUNIVERSITY LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'EXAMNAME LIST')
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'GROUPSUBJECT LIST')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'BOARDUNIVERSITY LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'BOARDUNIVERSITY LIST', 'DELETE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'EXAMNAME LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'EXAMNAME LIST', 'DELETE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'GROUPSUBJECT LIST', 'ADD')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'GROUPSUBJECT LIST', 'DELETE')

      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'BOARDUNIVERSITY ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'EXAMNAME ADD', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'GROUPSUBJECT ADD', 'SAVE')
    </script>
  </config>
  <config sequence="4151" type="FRESH" version="1.0.0" description="EmployeeEducation">
    <script provider="SQL Server">
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('REPORT', 'H_EMPLOYEEREPORT', 'Employee Information', 'OWN', NULL, NULL, 'Reports/H_EmployeeReport.aspx', 'True', 730)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEREPORT', 'SEARCH', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEREPORT', 'EXCEL', 2)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEREPORT')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEREPORT', 'SEARCH')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEREPORT', 'EXCEL')
    </script>
  </config>
  <config sequence="4152" type="FRESH" version="1.0.0" description="EmployeeEducation">
    <script provider="SQL Server">
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('HRM', 'H_EMPLOYEEPERMANENT', 'Employee Permanent', 'OWN', NULL, NULL, 'HRM/H_EmployeePermanentAdd.aspx', 'True', 430)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEPERMANENT', 'SAVE', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_EMPLOYEEPERMANENT', 'SAVE AND NEW', 2)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEEPERMANENT')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEPERMANENT', 'SAVE')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEEPERMANENT', 'SAVE AND NEW')
    </script>
  </config>
  <config sequence="4153" type="FRESH" version="1.0.0" description="H_TRANSFERREPORT">
    <script provider="SQL Server">
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('REPORT', 'H_TRANSFERREPORT', 'Transfer Report', 'OWN', NULL, NULL, 'Reports/H_TransferReport.aspx', 'True', 740)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_TRANSFERREPORT', 'SEARCH', 1)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_TRANSFERREPORT', 'EXCEL', 2)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_TRANSFERREPORT')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_TRANSFERREPORT', 'SEARCH')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_TRANSFERREPORT', 'EXCEL')
    </script>
  </config>
  <config sequence="4154" type="FRESH" version="1.0.0" description="H_INDIVIDUALREPORT">
    <script provider="SQL Server">
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('REPORT', 'H_INDIVIDUALREPORT', 'Individual Report', 'OWN', NULL, NULL, 'Reports/H_IndividualReport.aspx', 'True', 750)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_INDIVIDUALREPORT', 'EXCEL', 2)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_INDIVIDUALREPORT')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_INDIVIDUALREPORT', 'EXCEL')
    </script>
  </config>
  <config sequence="4155" type="FRESH" version="1.0.0" description="H_GRADEDESIGNATIONWISETOTALSTAFF">
    <script provider="SQL Server">
      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('REPORT', 'H_GRADEDESIGNATIONWISETOTALSTAFF', 'Grade-Designation Wise Total Staff', 'OWN', NULL, NULL, 'Reports/CrystalReportParameterUI.aspx', 'True', 750)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_GRADEDESIGNATIONWISETOTALSTAFF', 'PRINT', 1)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_GRADEDESIGNATIONWISETOTALSTAFF')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_GRADEDESIGNATIONWISETOTALSTAFF', 'PRINT')

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('REPORT', 'H_OWNDISTRICTWISEREPORT', 'Own District Wise Total Staff', 'OWN', NULL, NULL, 'Reports/CrystalReportParameterUI.aspx', 'True', 760)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_OWNDISTRICTWISEREPORT', 'PRINT', 1)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_OWNDISTRICTWISEREPORT')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_OWNDISTRICTWISEREPORT', 'PRINT')

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('REPORT', 'H_ATAGLANCETOTALSTAFFPOSITION', 'At a Glance Total Staff', 'OWN', NULL, NULL, 'Reports/CrystalReportParameterUI.aspx', 'True', 770)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_ATAGLANCETOTALSTAFFPOSITION', 'PRINT', 1)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_ATAGLANCETOTALSTAFFPOSITION')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_ATAGLANCETOTALSTAFFPOSITION', 'PRINT')

      INSERT INTO Property(ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ('REPORT', 'H_ASADISTRICTWISETOTALSTAFF', 'ASA District Wise Total Staff', 'OWN', NULL, NULL, 'Reports/CrystalReportParameterUI.aspx', 'True', 780)
      INSERT INTO PropertyCommand(PropertyName, CommandName, SortOrder) VALUES('H_ASADISTRICTWISETOTALSTAFF', 'PRINT', 1)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_ASADISTRICTWISETOTALSTAFF')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_ASADISTRICTWISETOTALSTAFF', 'PRINT')
    </script>
  </config>
  <config sequence="4156" type="FRESH" version="1.0.0" description="H_Designation">
    <script provider="SQL Server">
      ALTER Table H_Designation
      Add GroupType INT null
    </script>
  </config>
  <!-- HRM ends -->
  <!-- END CONSTRAINT SECTION -->
  <!-- START PROCEDURE SECTION -->
  <config sequence="6001" type="FRESH" version="1.0.0" description="Grade_Designation_Wise_Staff_Report">
    <script provider="SQL Server">
      CREATE PROCEDURE [dbo].[Grade_Designation_Wise_Staff_Report]
      (
      @AsOnDate Datetime
      )
      AS
      BEGIN
      SELECT g.name AS Grade,d.Name AS Designation
      ,SUM(case when e.sex=1 then 1 else 0 end ) AS Male
      ,SUM(case when e.sex=2 then 1 else 0 end ) AS Female
      ,SUM(case when e.EmploymentType=2 then 1 else 0 end ) AS Permanent
      ,SUM(case when e.EmploymentType=5 then 1 else 0 end ) AS Provisional
      ,COUNT(e.Id ) AS Total
      ,@AsOnDate AS ASOnDate
      FROM H_Grade g
      INNER JOIN H_GradeDesignation gd ON gd.H_GradeId=g.Id
      INNER JOIN H_Designation d ON  d.Id=gd.H_DesignationId
      LEFT JOIN H_EmployeeDesignation ed ON d.Id=ed.H_DesignationId AND (@AsOnDate BETWEEN ed.StartDate And ed.EndDate)
      LEFT JOIN H_Employee e ON e.Id=ed.H_EmployeeId AND e.Status=4
      GROUP BY g.Id ,g.name,d.Id,d.Name
      ORDER BY g.Name,d.Name
      END
    </script>
  </config>
  <config sequence="6002" type="FRESH" version="1.0.0" description="Own_District_Designation_Wise_Total_Staff">
    <script provider="SQL Server">
      CREATE PROCEDURE [dbo].[Own_District_Designation_Wise_Total_Staff]
      (
      @AsOnDate Datetime
      )
      AS
      BEGIN
      SELECT d.name AS District
      ,SUM( case when b.Status=1 AND  b.BranchType=1 then 1 else 0 end) as Branch
      ,SUM( case when b.Status=1 AND  b.BranchType=1 then 1 else 0 end) as Orther_Branch
      ,ISNULL(lo.Male,0) AS LO_Male
      ,ISNULL(lo.FeMale,0) AS LO_Female
      ,ISNULL(lo.BM_Male,0) AS BM_Male
      ,ISNULL(lo.BM_FeMale,0) AS BM_Female
      ,ISNULL(lo.ABM_Male,0) AS ABM_Male
      ,ISNULL(lo.ABM_FeMale,0) AS ABM_Female
      ,ISNULL(lo.RM_Male,0) AS RM_Male
      ,ISNULL(lo.RM_FeMale,0) AS RM_Female
      ,ISNULL(lo.DM_Male,0) AS DM_Male
      ,ISNULL(lo.DM_FeMale,0) AS DM_Female
      ,ISNULL(lo.Auditor_Male,0) AS Au_Male
      ,ISNULL(lo.Auditor_FeMale,0) AS Au_Female
      ,ISNULL(lo.Other_Male,0) AS Oth_Male
      ,ISNULL(lo.Other_FeMale,0) AS Oth_Female
      ,ISNULL(lo.Male,0)+ISNULL(lo.BM_Male,0)+ISNULL(lo.ABM_Male,0)+ISNULL(lo.RM_Male,0)+ISNULL(lo.DM_Male,0)+ISNULL(lo.Auditor_Male,0)+ISNULL(lo.Other_Male,0) AS Total_Male
      ,ISNULL(lo.FeMale,0)+ISNULL(lo.BM_FeMale,0)+ISNULL(lo.ABM_FeMale,0)+ISNULL(lo.RM_FeMale,0)+ISNULL(lo.DM_FeMale,0)+ISNULL(lo.Auditor_FeMale,0)+ISNULL(lo.Other_FeMale,0) AS Total_Female
      ,@AsOnDate AS AsOnDate
      FROM District d
      INNER JOIN Thana t ON d.Id=t.DistrictId
      INNER JOIN Branch b ON t.Id=b.ThanaId
      LEFT JOIN (
      select d.Id as DistId,d.Name AS District
      ,SUM(case when e.Sex=1 AND des.GroupType=1 then 1 else 0 end) as Male
      ,SUM(case when e.Sex=2 AND des.GroupType=1 then 1 else 0 end) as FeMale
      ,SUM(case when e.Sex=1 AND des.GroupType=2 then 1 else 0 end) as BM_Male
      ,SUM(case when e.Sex=2 AND des.GroupType=2 then 1 else 0 end) as BM_FeMale
      ,SUM(case when e.Sex=1 AND des.GroupType=3 then 1 else 0 end) as ABM_Male
      ,SUM(case when e.Sex=2 AND des.GroupType=3 then 1 else 0 end) as ABM_FeMale
      ,SUM(case when e.Sex=1 AND des.GroupType=4 then 1 else 0 end) as RM_Male
      ,SUM(case when e.Sex=2 AND des.GroupType=4 then 1 else 0 end) as RM_FeMale
      ,SUM(case when e.Sex=1 AND (des.GroupType=5 OR des.GroupType=6)then 1 else 0 end) as DM_Male
      ,SUM(case when e.Sex=2 AND (des.GroupType=5 OR des.GroupType=6) then 1 else 0 end) as DM_FeMale
      ,SUM(case when e.Sex=1 AND des.GroupType=7 then 1 else 0 end) as Auditor_Male
      ,SUM(case when e.Sex=2 AND des.GroupType=7 then 1 else 0 end) as Auditor_FeMale
      ,SUM(case when e.Sex=1 AND des.GroupType=8 then 1 else 0 end) as Other_Male
      ,SUM(case when e.Sex=2 AND des.GroupType=8 then 1 else 0 end) as Other_FeMale
      from  H_Employee e
      INNER JOIN H_Address a ON e.PermanentAddressId=a.Id
      INNER JOIN Thana t ON t.Id=a.ThanaId
      INNER JOIN District d ON d.Id=t.DistrictId
      INNER JOIN H_EmployeeDesignation ed ON ed.H_EmployeeId=e.Id AND (@AsOnDate Between ed.StartDate AND ed.EndDate)
      INNER JOIN H_Designation des ON ed.H_DesignationId=des.Id
      where e.Status=1
      group by  d.Id,d.Name
      ) lo ON lo.DistId=d.Id
      GROUP BY d.Name,lo.Male,lo.FeMale,lo.BM_Male,lo.BM_FeMale,lo.ABM_Male,lo.ABM_FeMale,lo.RM_Male,lo.RM_FeMale,lo.DM_Male,lo.DM_FeMale,lo.Auditor_Male,lo.Auditor_FeMale,lo.Other_Male,lo.Other_FeMale--,bm.Male,bm.FeMale,abm.Male,abm.FeMale,rm.Male,rm.FeMale,dm.Male,dm.FeMale,au.Male,au.FeMale,oth.Male,oth.FeMale
      ORDER BY d.Name
      END
    </script>
  </config>
  <config sequence="6003" type="UPGRADE" version="1.0.0" description="H_EMPLOYEECONSULTANCYREPORT">
    <script provider="SQL Server">
      INSERT INTO Property (ModuleName, Name, DisplayName, PermissionType, PermissionProperty, ImageUrl, Path, IsActive, SortOrder) VALUES ( N'REPORT', N'H_EMPLOYEECONSULTANCYREPORT', N'Employee Consultancy Report', N'OWN', NULL, NULL, N'Reports/H_EmployeeConsultancyReport.aspx', 1, 850)
      INSERT INTO PropertyCommand ([PropertyName], [CommandName], [DisplayName], [ToolTipText], [ImageUrl], [SeperatorUrl], [NavigateUrl], [SortOrder]) VALUES (N'H_EMPLOYEECONSULTANCYREPORT', N'SEARCH', NULL, NULL, NULL, NULL, NULL, 1)
      INSERT INTO PropertyCommand ([PropertyName], [CommandName], [DisplayName], [ToolTipText], [ImageUrl], [SeperatorUrl], [NavigateUrl], [SortOrder]) VALUES (N'H_EMPLOYEECONSULTANCYREPORT', N'EXCEL', NULL, NULL, NULL, NULL, NULL, 2)
      INSERT INTO RoleProperty(RoleName, PropertyName) VALUES('Admin', 'H_EMPLOYEECONSULTANCYREPORT')
      INSERT INTO RoleCommand(RoleName, PropertyName, CommandName) VALUES('Admin', 'H_EMPLOYEECONSULTANCYREPORT', 'SEARCH')
    </script>
  </config>

  <config sequence="6006" type="BOTH" version="1.0.0" description="H_EMPLOYEECONSULTANCYREPORT">
    <script provider="SQL Server">
      CRAETE VIEW [dbo].[SubzoneView]
      AS
      SELECT Subzone.Id, Subzone.Name, ZoneId, Zone.Name AS ZoneName, Subzone.NameInBangla, Subzone.Status
      FROM Subzone
      INNER JOIN Zone ON Zone.Id = ZoneId
    </script>
  </config>
  <config sequence="6009" type="BOTH" version="1.0.0" description="Alter BranchView">
    <script provider="SQL Server">
      ALTER VIEW [dbo].[BranchView]
      AS
      SELECT Branch.Id,
      Code,
      Branch.Name,
      Branch.BranchType,
      Branch.OpeningDate,
      Branch.NameInBangla,
      MobileNumber,
      Branch.Status,
      LocationType,
      RegionId,
      Region.Name AS RegionName,
      SubzoneId,
      Subzone.Name AS SubzoneName,
      ZoneId,
      Zone.Name AS ZoneName,
      ThanaId,
      Thana.Name AS ThanaName,
      Thana.DistrictId,
      District.Name AS DistrictName
      FROM Branch
      INNER JOIN Region ON RegionId = Region.Id
      INNER JOIN Subzone ON SubzoneId = Subzone.Id
      INNER JOIN Zone ON ZoneId = Zone.Id
      INNER JOIN Thana ON ThanaId = Thana.Id
      INNER JOIN District ON Thana.DistrictId = District.Id
    </script>
  </config>

  <!-- END PROCEDURE SECTION -->
  <!-- START TRIGGER SECTION -->
  <!-- END TRIGGER SECTION -->
  <!-- START TABLE UPDATE SECTION -->
  <!-- END TABLE UPDATE SECTION -->
  <!-- START DATA UPDATE SECTION -->
  <!-- END DATA UPDATE SECTION -->
</databaseConfig>