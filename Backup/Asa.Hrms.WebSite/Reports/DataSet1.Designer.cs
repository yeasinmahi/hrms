//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Asa.Hrms.WebSite.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private GDTotalStaffDataTable tableGDTotalStaff;
        
        private OwnDistrictWiseStaffDataTable tableOwnDistrictWiseStaff;
        
        private AtAGlanceTotalStaffDataTable tableAtAGlanceTotalStaff;
        
        private AsaDistrictWiseStaff1DataTable tableAsaDistrictWiseStaff1;
        
        private PenaltyReportDataTable tablePenaltyReport;
        
        private IncreamentHeldupDataTable tableIncreamentHeldup;
        
        private WarningDataTable tableWarning;
        
        private IndivisualLeaveDataTable tableIndivisualLeave;
        
        private GD_BranchDataTable tableGD_Branch;
        
        private ASAD_BranchDataTable tableASAD_Branch;
        
        private TransferLetterDataTable tableTransferLetter;
        
        private TransferReportDataTable tableTransferReport;
        
        private MultiLetterDataTable tableMultiLetter;
        
        private Salary_CardDataTable tableSalary_Card;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GDTotalStaff"] != null)) {
                    base.Tables.Add(new GDTotalStaffDataTable(ds.Tables["GDTotalStaff"]));
                }
                if ((ds.Tables["OwnDistrictWiseStaff"] != null)) {
                    base.Tables.Add(new OwnDistrictWiseStaffDataTable(ds.Tables["OwnDistrictWiseStaff"]));
                }
                if ((ds.Tables["AtAGlanceTotalStaff"] != null)) {
                    base.Tables.Add(new AtAGlanceTotalStaffDataTable(ds.Tables["AtAGlanceTotalStaff"]));
                }
                if ((ds.Tables["AsaDistrictWiseStaff1"] != null)) {
                    base.Tables.Add(new AsaDistrictWiseStaff1DataTable(ds.Tables["AsaDistrictWiseStaff1"]));
                }
                if ((ds.Tables["PenaltyReport"] != null)) {
                    base.Tables.Add(new PenaltyReportDataTable(ds.Tables["PenaltyReport"]));
                }
                if ((ds.Tables["IncreamentHeldup"] != null)) {
                    base.Tables.Add(new IncreamentHeldupDataTable(ds.Tables["IncreamentHeldup"]));
                }
                if ((ds.Tables["Warning"] != null)) {
                    base.Tables.Add(new WarningDataTable(ds.Tables["Warning"]));
                }
                if ((ds.Tables["IndivisualLeave"] != null)) {
                    base.Tables.Add(new IndivisualLeaveDataTable(ds.Tables["IndivisualLeave"]));
                }
                if ((ds.Tables["GD_Branch"] != null)) {
                    base.Tables.Add(new GD_BranchDataTable(ds.Tables["GD_Branch"]));
                }
                if ((ds.Tables["ASAD_Branch"] != null)) {
                    base.Tables.Add(new ASAD_BranchDataTable(ds.Tables["ASAD_Branch"]));
                }
                if ((ds.Tables["TransferLetter"] != null)) {
                    base.Tables.Add(new TransferLetterDataTable(ds.Tables["TransferLetter"]));
                }
                if ((ds.Tables["TransferReport"] != null)) {
                    base.Tables.Add(new TransferReportDataTable(ds.Tables["TransferReport"]));
                }
                if ((ds.Tables["MultiLetter"] != null)) {
                    base.Tables.Add(new MultiLetterDataTable(ds.Tables["MultiLetter"]));
                }
                if ((ds.Tables["Salary_Card"] != null)) {
                    base.Tables.Add(new Salary_CardDataTable(ds.Tables["Salary_Card"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GDTotalStaffDataTable GDTotalStaff {
            get {
                return this.tableGDTotalStaff;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OwnDistrictWiseStaffDataTable OwnDistrictWiseStaff {
            get {
                return this.tableOwnDistrictWiseStaff;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AtAGlanceTotalStaffDataTable AtAGlanceTotalStaff {
            get {
                return this.tableAtAGlanceTotalStaff;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AsaDistrictWiseStaff1DataTable AsaDistrictWiseStaff1 {
            get {
                return this.tableAsaDistrictWiseStaff1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PenaltyReportDataTable PenaltyReport {
            get {
                return this.tablePenaltyReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IncreamentHeldupDataTable IncreamentHeldup {
            get {
                return this.tableIncreamentHeldup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WarningDataTable Warning {
            get {
                return this.tableWarning;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IndivisualLeaveDataTable IndivisualLeave {
            get {
                return this.tableIndivisualLeave;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GD_BranchDataTable GD_Branch {
            get {
                return this.tableGD_Branch;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ASAD_BranchDataTable ASAD_Branch {
            get {
                return this.tableASAD_Branch;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransferLetterDataTable TransferLetter {
            get {
                return this.tableTransferLetter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransferReportDataTable TransferReport {
            get {
                return this.tableTransferReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MultiLetterDataTable MultiLetter {
            get {
                return this.tableMultiLetter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Salary_CardDataTable Salary_Card {
            get {
                return this.tableSalary_Card;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GDTotalStaff"] != null)) {
                    base.Tables.Add(new GDTotalStaffDataTable(ds.Tables["GDTotalStaff"]));
                }
                if ((ds.Tables["OwnDistrictWiseStaff"] != null)) {
                    base.Tables.Add(new OwnDistrictWiseStaffDataTable(ds.Tables["OwnDistrictWiseStaff"]));
                }
                if ((ds.Tables["AtAGlanceTotalStaff"] != null)) {
                    base.Tables.Add(new AtAGlanceTotalStaffDataTable(ds.Tables["AtAGlanceTotalStaff"]));
                }
                if ((ds.Tables["AsaDistrictWiseStaff1"] != null)) {
                    base.Tables.Add(new AsaDistrictWiseStaff1DataTable(ds.Tables["AsaDistrictWiseStaff1"]));
                }
                if ((ds.Tables["PenaltyReport"] != null)) {
                    base.Tables.Add(new PenaltyReportDataTable(ds.Tables["PenaltyReport"]));
                }
                if ((ds.Tables["IncreamentHeldup"] != null)) {
                    base.Tables.Add(new IncreamentHeldupDataTable(ds.Tables["IncreamentHeldup"]));
                }
                if ((ds.Tables["Warning"] != null)) {
                    base.Tables.Add(new WarningDataTable(ds.Tables["Warning"]));
                }
                if ((ds.Tables["IndivisualLeave"] != null)) {
                    base.Tables.Add(new IndivisualLeaveDataTable(ds.Tables["IndivisualLeave"]));
                }
                if ((ds.Tables["GD_Branch"] != null)) {
                    base.Tables.Add(new GD_BranchDataTable(ds.Tables["GD_Branch"]));
                }
                if ((ds.Tables["ASAD_Branch"] != null)) {
                    base.Tables.Add(new ASAD_BranchDataTable(ds.Tables["ASAD_Branch"]));
                }
                if ((ds.Tables["TransferLetter"] != null)) {
                    base.Tables.Add(new TransferLetterDataTable(ds.Tables["TransferLetter"]));
                }
                if ((ds.Tables["TransferReport"] != null)) {
                    base.Tables.Add(new TransferReportDataTable(ds.Tables["TransferReport"]));
                }
                if ((ds.Tables["MultiLetter"] != null)) {
                    base.Tables.Add(new MultiLetterDataTable(ds.Tables["MultiLetter"]));
                }
                if ((ds.Tables["Salary_Card"] != null)) {
                    base.Tables.Add(new Salary_CardDataTable(ds.Tables["Salary_Card"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGDTotalStaff = ((GDTotalStaffDataTable)(base.Tables["GDTotalStaff"]));
            if ((initTable == true)) {
                if ((this.tableGDTotalStaff != null)) {
                    this.tableGDTotalStaff.InitVars();
                }
            }
            this.tableOwnDistrictWiseStaff = ((OwnDistrictWiseStaffDataTable)(base.Tables["OwnDistrictWiseStaff"]));
            if ((initTable == true)) {
                if ((this.tableOwnDistrictWiseStaff != null)) {
                    this.tableOwnDistrictWiseStaff.InitVars();
                }
            }
            this.tableAtAGlanceTotalStaff = ((AtAGlanceTotalStaffDataTable)(base.Tables["AtAGlanceTotalStaff"]));
            if ((initTable == true)) {
                if ((this.tableAtAGlanceTotalStaff != null)) {
                    this.tableAtAGlanceTotalStaff.InitVars();
                }
            }
            this.tableAsaDistrictWiseStaff1 = ((AsaDistrictWiseStaff1DataTable)(base.Tables["AsaDistrictWiseStaff1"]));
            if ((initTable == true)) {
                if ((this.tableAsaDistrictWiseStaff1 != null)) {
                    this.tableAsaDistrictWiseStaff1.InitVars();
                }
            }
            this.tablePenaltyReport = ((PenaltyReportDataTable)(base.Tables["PenaltyReport"]));
            if ((initTable == true)) {
                if ((this.tablePenaltyReport != null)) {
                    this.tablePenaltyReport.InitVars();
                }
            }
            this.tableIncreamentHeldup = ((IncreamentHeldupDataTable)(base.Tables["IncreamentHeldup"]));
            if ((initTable == true)) {
                if ((this.tableIncreamentHeldup != null)) {
                    this.tableIncreamentHeldup.InitVars();
                }
            }
            this.tableWarning = ((WarningDataTable)(base.Tables["Warning"]));
            if ((initTable == true)) {
                if ((this.tableWarning != null)) {
                    this.tableWarning.InitVars();
                }
            }
            this.tableIndivisualLeave = ((IndivisualLeaveDataTable)(base.Tables["IndivisualLeave"]));
            if ((initTable == true)) {
                if ((this.tableIndivisualLeave != null)) {
                    this.tableIndivisualLeave.InitVars();
                }
            }
            this.tableGD_Branch = ((GD_BranchDataTable)(base.Tables["GD_Branch"]));
            if ((initTable == true)) {
                if ((this.tableGD_Branch != null)) {
                    this.tableGD_Branch.InitVars();
                }
            }
            this.tableASAD_Branch = ((ASAD_BranchDataTable)(base.Tables["ASAD_Branch"]));
            if ((initTable == true)) {
                if ((this.tableASAD_Branch != null)) {
                    this.tableASAD_Branch.InitVars();
                }
            }
            this.tableTransferLetter = ((TransferLetterDataTable)(base.Tables["TransferLetter"]));
            if ((initTable == true)) {
                if ((this.tableTransferLetter != null)) {
                    this.tableTransferLetter.InitVars();
                }
            }
            this.tableTransferReport = ((TransferReportDataTable)(base.Tables["TransferReport"]));
            if ((initTable == true)) {
                if ((this.tableTransferReport != null)) {
                    this.tableTransferReport.InitVars();
                }
            }
            this.tableMultiLetter = ((MultiLetterDataTable)(base.Tables["MultiLetter"]));
            if ((initTable == true)) {
                if ((this.tableMultiLetter != null)) {
                    this.tableMultiLetter.InitVars();
                }
            }
            this.tableSalary_Card = ((Salary_CardDataTable)(base.Tables["Salary_Card"]));
            if ((initTable == true)) {
                if ((this.tableSalary_Card != null)) {
                    this.tableSalary_Card.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGDTotalStaff = new GDTotalStaffDataTable();
            base.Tables.Add(this.tableGDTotalStaff);
            this.tableOwnDistrictWiseStaff = new OwnDistrictWiseStaffDataTable();
            base.Tables.Add(this.tableOwnDistrictWiseStaff);
            this.tableAtAGlanceTotalStaff = new AtAGlanceTotalStaffDataTable();
            base.Tables.Add(this.tableAtAGlanceTotalStaff);
            this.tableAsaDistrictWiseStaff1 = new AsaDistrictWiseStaff1DataTable();
            base.Tables.Add(this.tableAsaDistrictWiseStaff1);
            this.tablePenaltyReport = new PenaltyReportDataTable();
            base.Tables.Add(this.tablePenaltyReport);
            this.tableIncreamentHeldup = new IncreamentHeldupDataTable();
            base.Tables.Add(this.tableIncreamentHeldup);
            this.tableWarning = new WarningDataTable();
            base.Tables.Add(this.tableWarning);
            this.tableIndivisualLeave = new IndivisualLeaveDataTable();
            base.Tables.Add(this.tableIndivisualLeave);
            this.tableGD_Branch = new GD_BranchDataTable();
            base.Tables.Add(this.tableGD_Branch);
            this.tableASAD_Branch = new ASAD_BranchDataTable();
            base.Tables.Add(this.tableASAD_Branch);
            this.tableTransferLetter = new TransferLetterDataTable();
            base.Tables.Add(this.tableTransferLetter);
            this.tableTransferReport = new TransferReportDataTable();
            base.Tables.Add(this.tableTransferReport);
            this.tableMultiLetter = new MultiLetterDataTable();
            base.Tables.Add(this.tableMultiLetter);
            this.tableSalary_Card = new Salary_CardDataTable();
            base.Tables.Add(this.tableSalary_Card);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGDTotalStaff() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOwnDistrictWiseStaff() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAtAGlanceTotalStaff() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAsaDistrictWiseStaff1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePenaltyReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIncreamentHeldup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWarning() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIndivisualLeave() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGD_Branch() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeASAD_Branch() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransferLetter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransferReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMultiLetter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalary_Card() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GDTotalStaffRowChangeEventHandler(object sender, GDTotalStaffRowChangeEvent e);
        
        public delegate void OwnDistrictWiseStaffRowChangeEventHandler(object sender, OwnDistrictWiseStaffRowChangeEvent e);
        
        public delegate void AtAGlanceTotalStaffRowChangeEventHandler(object sender, AtAGlanceTotalStaffRowChangeEvent e);
        
        public delegate void AsaDistrictWiseStaff1RowChangeEventHandler(object sender, AsaDistrictWiseStaff1RowChangeEvent e);
        
        public delegate void PenaltyReportRowChangeEventHandler(object sender, PenaltyReportRowChangeEvent e);
        
        public delegate void IncreamentHeldupRowChangeEventHandler(object sender, IncreamentHeldupRowChangeEvent e);
        
        public delegate void WarningRowChangeEventHandler(object sender, WarningRowChangeEvent e);
        
        public delegate void IndivisualLeaveRowChangeEventHandler(object sender, IndivisualLeaveRowChangeEvent e);
        
        public delegate void GD_BranchRowChangeEventHandler(object sender, GD_BranchRowChangeEvent e);
        
        public delegate void ASAD_BranchRowChangeEventHandler(object sender, ASAD_BranchRowChangeEvent e);
        
        public delegate void TransferLetterRowChangeEventHandler(object sender, TransferLetterRowChangeEvent e);
        
        public delegate void TransferReportRowChangeEventHandler(object sender, TransferReportRowChangeEvent e);
        
        public delegate void MultiLetterRowChangeEventHandler(object sender, MultiLetterRowChangeEvent e);
        
        public delegate void Salary_CardRowChangeEventHandler(object sender, Salary_CardRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GDTotalStaffDataTable : global::System.Data.TypedTableBase<GDTotalStaffRow> {
            
            private global::System.Data.DataColumn columnGrade;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnMale;
            
            private global::System.Data.DataColumn columnFemale;
            
            private global::System.Data.DataColumn columnPermanent;
            
            private global::System.Data.DataColumn columnProvisional;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnAsOnDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GDTotalStaffDataTable() {
                this.TableName = "GDTotalStaff";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GDTotalStaffDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GDTotalStaffDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GradeColumn {
                get {
                    return this.columnGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaleColumn {
                get {
                    return this.columnMale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FemaleColumn {
                get {
                    return this.columnFemale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PermanentColumn {
                get {
                    return this.columnPermanent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvisionalColumn {
                get {
                    return this.columnProvisional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AsOnDateColumn {
                get {
                    return this.columnAsOnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GDTotalStaffRow this[int index] {
                get {
                    return ((GDTotalStaffRow)(this.Rows[index]));
                }
            }
            
            public event GDTotalStaffRowChangeEventHandler GDTotalStaffRowChanging;
            
            public event GDTotalStaffRowChangeEventHandler GDTotalStaffRowChanged;
            
            public event GDTotalStaffRowChangeEventHandler GDTotalStaffRowDeleting;
            
            public event GDTotalStaffRowChangeEventHandler GDTotalStaffRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGDTotalStaffRow(GDTotalStaffRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GDTotalStaffRow AddGDTotalStaffRow(string Grade, string Designation, int Male, int Female, int Permanent, int Provisional, int Total, System.DateTime AsOnDate) {
                GDTotalStaffRow rowGDTotalStaffRow = ((GDTotalStaffRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Grade,
                        Designation,
                        Male,
                        Female,
                        Permanent,
                        Provisional,
                        Total,
                        AsOnDate};
                rowGDTotalStaffRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGDTotalStaffRow);
                return rowGDTotalStaffRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GDTotalStaffDataTable cln = ((GDTotalStaffDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GDTotalStaffDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGrade = base.Columns["Grade"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnMale = base.Columns["Male"];
                this.columnFemale = base.Columns["Female"];
                this.columnPermanent = base.Columns["Permanent"];
                this.columnProvisional = base.Columns["Provisional"];
                this.columnTotal = base.Columns["Total"];
                this.columnAsOnDate = base.Columns["AsOnDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGrade = new global::System.Data.DataColumn("Grade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrade);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnMale = new global::System.Data.DataColumn("Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMale);
                this.columnFemale = new global::System.Data.DataColumn("Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFemale);
                this.columnPermanent = new global::System.Data.DataColumn("Permanent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanent);
                this.columnProvisional = new global::System.Data.DataColumn("Provisional", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvisional);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnAsOnDate = new global::System.Data.DataColumn("AsOnDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAsOnDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GDTotalStaffRow NewGDTotalStaffRow() {
                return ((GDTotalStaffRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GDTotalStaffRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GDTotalStaffRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GDTotalStaffRowChanged != null)) {
                    this.GDTotalStaffRowChanged(this, new GDTotalStaffRowChangeEvent(((GDTotalStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GDTotalStaffRowChanging != null)) {
                    this.GDTotalStaffRowChanging(this, new GDTotalStaffRowChangeEvent(((GDTotalStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GDTotalStaffRowDeleted != null)) {
                    this.GDTotalStaffRowDeleted(this, new GDTotalStaffRowChangeEvent(((GDTotalStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GDTotalStaffRowDeleting != null)) {
                    this.GDTotalStaffRowDeleting(this, new GDTotalStaffRowChangeEvent(((GDTotalStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGDTotalStaffRow(GDTotalStaffRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GDTotalStaffDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OwnDistrictWiseStaffDataTable : global::System.Data.TypedTableBase<OwnDistrictWiseStaffRow> {
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnOrther_Branch;
            
            private global::System.Data.DataColumn columnLO_Male;
            
            private global::System.Data.DataColumn columnLO_Female;
            
            private global::System.Data.DataColumn columnBM_Male;
            
            private global::System.Data.DataColumn columnBM_Female;
            
            private global::System.Data.DataColumn columnABM_Male;
            
            private global::System.Data.DataColumn columnABM_Female;
            
            private global::System.Data.DataColumn columnRM_Male;
            
            private global::System.Data.DataColumn columnRM_Female;
            
            private global::System.Data.DataColumn columnDM_Male;
            
            private global::System.Data.DataColumn columnDM_Female;
            
            private global::System.Data.DataColumn columnAu_Male;
            
            private global::System.Data.DataColumn columnAu_Female;
            
            private global::System.Data.DataColumn columnOth_Male;
            
            private global::System.Data.DataColumn columnOth_Female;
            
            private global::System.Data.DataColumn columnTotal_Male;
            
            private global::System.Data.DataColumn columnTotal_Female;
            
            private global::System.Data.DataColumn columnAsOnDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OwnDistrictWiseStaffDataTable() {
                this.TableName = "OwnDistrictWiseStaff";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OwnDistrictWiseStaffDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OwnDistrictWiseStaffDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Orther_BranchColumn {
                get {
                    return this.columnOrther_Branch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LO_MaleColumn {
                get {
                    return this.columnLO_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LO_FemaleColumn {
                get {
                    return this.columnLO_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BM_MaleColumn {
                get {
                    return this.columnBM_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BM_FemaleColumn {
                get {
                    return this.columnBM_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABM_MaleColumn {
                get {
                    return this.columnABM_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABM_FemaleColumn {
                get {
                    return this.columnABM_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RM_MaleColumn {
                get {
                    return this.columnRM_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RM_FemaleColumn {
                get {
                    return this.columnRM_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DM_MaleColumn {
                get {
                    return this.columnDM_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DM_FemaleColumn {
                get {
                    return this.columnDM_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Au_MaleColumn {
                get {
                    return this.columnAu_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Au_FemaleColumn {
                get {
                    return this.columnAu_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Oth_MaleColumn {
                get {
                    return this.columnOth_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Oth_FemaleColumn {
                get {
                    return this.columnOth_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_MaleColumn {
                get {
                    return this.columnTotal_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_FemaleColumn {
                get {
                    return this.columnTotal_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AsOnDateColumn {
                get {
                    return this.columnAsOnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OwnDistrictWiseStaffRow this[int index] {
                get {
                    return ((OwnDistrictWiseStaffRow)(this.Rows[index]));
                }
            }
            
            public event OwnDistrictWiseStaffRowChangeEventHandler OwnDistrictWiseStaffRowChanging;
            
            public event OwnDistrictWiseStaffRowChangeEventHandler OwnDistrictWiseStaffRowChanged;
            
            public event OwnDistrictWiseStaffRowChangeEventHandler OwnDistrictWiseStaffRowDeleting;
            
            public event OwnDistrictWiseStaffRowChangeEventHandler OwnDistrictWiseStaffRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOwnDistrictWiseStaffRow(OwnDistrictWiseStaffRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OwnDistrictWiseStaffRow AddOwnDistrictWiseStaffRow(
                        string District, 
                        int Branch, 
                        int Orther_Branch, 
                        int LO_Male, 
                        int LO_Female, 
                        int BM_Male, 
                        int BM_Female, 
                        int ABM_Male, 
                        int ABM_Female, 
                        int RM_Male, 
                        int RM_Female, 
                        int DM_Male, 
                        int DM_Female, 
                        int Au_Male, 
                        int Au_Female, 
                        int Oth_Male, 
                        int Oth_Female, 
                        int Total_Male, 
                        int Total_Female, 
                        System.DateTime AsOnDate) {
                OwnDistrictWiseStaffRow rowOwnDistrictWiseStaffRow = ((OwnDistrictWiseStaffRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        District,
                        Branch,
                        Orther_Branch,
                        LO_Male,
                        LO_Female,
                        BM_Male,
                        BM_Female,
                        ABM_Male,
                        ABM_Female,
                        RM_Male,
                        RM_Female,
                        DM_Male,
                        DM_Female,
                        Au_Male,
                        Au_Female,
                        Oth_Male,
                        Oth_Female,
                        Total_Male,
                        Total_Female,
                        AsOnDate};
                rowOwnDistrictWiseStaffRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOwnDistrictWiseStaffRow);
                return rowOwnDistrictWiseStaffRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OwnDistrictWiseStaffDataTable cln = ((OwnDistrictWiseStaffDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OwnDistrictWiseStaffDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistrict = base.Columns["District"];
                this.columnBranch = base.Columns["Branch"];
                this.columnOrther_Branch = base.Columns["Orther_Branch"];
                this.columnLO_Male = base.Columns["LO_Male"];
                this.columnLO_Female = base.Columns["LO_Female"];
                this.columnBM_Male = base.Columns["BM_Male"];
                this.columnBM_Female = base.Columns["BM_Female"];
                this.columnABM_Male = base.Columns["ABM_Male"];
                this.columnABM_Female = base.Columns["ABM_Female"];
                this.columnRM_Male = base.Columns["RM_Male"];
                this.columnRM_Female = base.Columns["RM_Female"];
                this.columnDM_Male = base.Columns["DM_Male"];
                this.columnDM_Female = base.Columns["DM_Female"];
                this.columnAu_Male = base.Columns["Au_Male"];
                this.columnAu_Female = base.Columns["Au_Female"];
                this.columnOth_Male = base.Columns["Oth_Male"];
                this.columnOth_Female = base.Columns["Oth_Female"];
                this.columnTotal_Male = base.Columns["Total_Male"];
                this.columnTotal_Female = base.Columns["Total_Female"];
                this.columnAsOnDate = base.Columns["AsOnDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnOrther_Branch = new global::System.Data.DataColumn("Orther_Branch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrther_Branch);
                this.columnLO_Male = new global::System.Data.DataColumn("LO_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLO_Male);
                this.columnLO_Female = new global::System.Data.DataColumn("LO_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLO_Female);
                this.columnBM_Male = new global::System.Data.DataColumn("BM_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBM_Male);
                this.columnBM_Female = new global::System.Data.DataColumn("BM_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBM_Female);
                this.columnABM_Male = new global::System.Data.DataColumn("ABM_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABM_Male);
                this.columnABM_Female = new global::System.Data.DataColumn("ABM_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABM_Female);
                this.columnRM_Male = new global::System.Data.DataColumn("RM_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRM_Male);
                this.columnRM_Female = new global::System.Data.DataColumn("RM_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRM_Female);
                this.columnDM_Male = new global::System.Data.DataColumn("DM_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDM_Male);
                this.columnDM_Female = new global::System.Data.DataColumn("DM_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDM_Female);
                this.columnAu_Male = new global::System.Data.DataColumn("Au_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAu_Male);
                this.columnAu_Female = new global::System.Data.DataColumn("Au_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAu_Female);
                this.columnOth_Male = new global::System.Data.DataColumn("Oth_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOth_Male);
                this.columnOth_Female = new global::System.Data.DataColumn("Oth_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOth_Female);
                this.columnTotal_Male = new global::System.Data.DataColumn("Total_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Male);
                this.columnTotal_Female = new global::System.Data.DataColumn("Total_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Female);
                this.columnAsOnDate = new global::System.Data.DataColumn("AsOnDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAsOnDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OwnDistrictWiseStaffRow NewOwnDistrictWiseStaffRow() {
                return ((OwnDistrictWiseStaffRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OwnDistrictWiseStaffRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OwnDistrictWiseStaffRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OwnDistrictWiseStaffRowChanged != null)) {
                    this.OwnDistrictWiseStaffRowChanged(this, new OwnDistrictWiseStaffRowChangeEvent(((OwnDistrictWiseStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OwnDistrictWiseStaffRowChanging != null)) {
                    this.OwnDistrictWiseStaffRowChanging(this, new OwnDistrictWiseStaffRowChangeEvent(((OwnDistrictWiseStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OwnDistrictWiseStaffRowDeleted != null)) {
                    this.OwnDistrictWiseStaffRowDeleted(this, new OwnDistrictWiseStaffRowChangeEvent(((OwnDistrictWiseStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OwnDistrictWiseStaffRowDeleting != null)) {
                    this.OwnDistrictWiseStaffRowDeleting(this, new OwnDistrictWiseStaffRowChangeEvent(((OwnDistrictWiseStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOwnDistrictWiseStaffRow(OwnDistrictWiseStaffRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OwnDistrictWiseStaffDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AtAGlanceTotalStaffDataTable : global::System.Data.TypedTableBase<AtAGlanceTotalStaffRow> {
            
            private global::System.Data.DataColumn columnWorking;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnMale;
            
            private global::System.Data.DataColumn columnFemale;
            
            private global::System.Data.DataColumn columnMaleRatio;
            
            private global::System.Data.DataColumn columnFemaleRatio;
            
            private global::System.Data.DataColumn columnAsOnDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AtAGlanceTotalStaffDataTable() {
                this.TableName = "AtAGlanceTotalStaff";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AtAGlanceTotalStaffDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AtAGlanceTotalStaffDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingColumn {
                get {
                    return this.columnWorking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaleColumn {
                get {
                    return this.columnMale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FemaleColumn {
                get {
                    return this.columnFemale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaleRatioColumn {
                get {
                    return this.columnMaleRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FemaleRatioColumn {
                get {
                    return this.columnFemaleRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AsOnDateColumn {
                get {
                    return this.columnAsOnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AtAGlanceTotalStaffRow this[int index] {
                get {
                    return ((AtAGlanceTotalStaffRow)(this.Rows[index]));
                }
            }
            
            public event AtAGlanceTotalStaffRowChangeEventHandler AtAGlanceTotalStaffRowChanging;
            
            public event AtAGlanceTotalStaffRowChangeEventHandler AtAGlanceTotalStaffRowChanged;
            
            public event AtAGlanceTotalStaffRowChangeEventHandler AtAGlanceTotalStaffRowDeleting;
            
            public event AtAGlanceTotalStaffRowChangeEventHandler AtAGlanceTotalStaffRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAtAGlanceTotalStaffRow(AtAGlanceTotalStaffRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AtAGlanceTotalStaffRow AddAtAGlanceTotalStaffRow(int Working, int Total, int Male, int Female, double MaleRatio, double FemaleRatio, System.DateTime AsOnDate) {
                AtAGlanceTotalStaffRow rowAtAGlanceTotalStaffRow = ((AtAGlanceTotalStaffRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Working,
                        Total,
                        Male,
                        Female,
                        MaleRatio,
                        FemaleRatio,
                        AsOnDate};
                rowAtAGlanceTotalStaffRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAtAGlanceTotalStaffRow);
                return rowAtAGlanceTotalStaffRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AtAGlanceTotalStaffDataTable cln = ((AtAGlanceTotalStaffDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AtAGlanceTotalStaffDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorking = base.Columns["Working"];
                this.columnTotal = base.Columns["Total"];
                this.columnMale = base.Columns["Male"];
                this.columnFemale = base.Columns["Female"];
                this.columnMaleRatio = base.Columns["MaleRatio"];
                this.columnFemaleRatio = base.Columns["FemaleRatio"];
                this.columnAsOnDate = base.Columns["AsOnDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorking = new global::System.Data.DataColumn("Working", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorking);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnMale = new global::System.Data.DataColumn("Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMale);
                this.columnFemale = new global::System.Data.DataColumn("Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFemale);
                this.columnMaleRatio = new global::System.Data.DataColumn("MaleRatio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaleRatio);
                this.columnFemaleRatio = new global::System.Data.DataColumn("FemaleRatio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFemaleRatio);
                this.columnAsOnDate = new global::System.Data.DataColumn("AsOnDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAsOnDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AtAGlanceTotalStaffRow NewAtAGlanceTotalStaffRow() {
                return ((AtAGlanceTotalStaffRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AtAGlanceTotalStaffRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AtAGlanceTotalStaffRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AtAGlanceTotalStaffRowChanged != null)) {
                    this.AtAGlanceTotalStaffRowChanged(this, new AtAGlanceTotalStaffRowChangeEvent(((AtAGlanceTotalStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AtAGlanceTotalStaffRowChanging != null)) {
                    this.AtAGlanceTotalStaffRowChanging(this, new AtAGlanceTotalStaffRowChangeEvent(((AtAGlanceTotalStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AtAGlanceTotalStaffRowDeleted != null)) {
                    this.AtAGlanceTotalStaffRowDeleted(this, new AtAGlanceTotalStaffRowChangeEvent(((AtAGlanceTotalStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AtAGlanceTotalStaffRowDeleting != null)) {
                    this.AtAGlanceTotalStaffRowDeleting(this, new AtAGlanceTotalStaffRowChangeEvent(((AtAGlanceTotalStaffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAtAGlanceTotalStaffRow(AtAGlanceTotalStaffRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AtAGlanceTotalStaffDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AsaDistrictWiseStaff1DataTable : global::System.Data.TypedTableBase<AsaDistrictWiseStaff1Row> {
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnOrther_Branch;
            
            private global::System.Data.DataColumn columnLO_Male;
            
            private global::System.Data.DataColumn columnLO_Female;
            
            private global::System.Data.DataColumn columnBM_Male;
            
            private global::System.Data.DataColumn columnBM_Female;
            
            private global::System.Data.DataColumn columnABM_Male;
            
            private global::System.Data.DataColumn columnABM_Female;
            
            private global::System.Data.DataColumn columnRM_Male;
            
            private global::System.Data.DataColumn columnRM_Female;
            
            private global::System.Data.DataColumn columnDM_Male;
            
            private global::System.Data.DataColumn columnDM_Female;
            
            private global::System.Data.DataColumn columnAu_Male;
            
            private global::System.Data.DataColumn columnAu_Female;
            
            private global::System.Data.DataColumn columnOth_Male;
            
            private global::System.Data.DataColumn columnOth_Female;
            
            private global::System.Data.DataColumn columnTotal_Male;
            
            private global::System.Data.DataColumn columnTotal_Female;
            
            private global::System.Data.DataColumn columnAsOnDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AsaDistrictWiseStaff1DataTable() {
                this.TableName = "AsaDistrictWiseStaff1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AsaDistrictWiseStaff1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AsaDistrictWiseStaff1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Orther_BranchColumn {
                get {
                    return this.columnOrther_Branch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LO_MaleColumn {
                get {
                    return this.columnLO_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LO_FemaleColumn {
                get {
                    return this.columnLO_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BM_MaleColumn {
                get {
                    return this.columnBM_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BM_FemaleColumn {
                get {
                    return this.columnBM_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABM_MaleColumn {
                get {
                    return this.columnABM_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABM_FemaleColumn {
                get {
                    return this.columnABM_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RM_MaleColumn {
                get {
                    return this.columnRM_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RM_FemaleColumn {
                get {
                    return this.columnRM_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DM_MaleColumn {
                get {
                    return this.columnDM_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DM_FemaleColumn {
                get {
                    return this.columnDM_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Au_MaleColumn {
                get {
                    return this.columnAu_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Au_FemaleColumn {
                get {
                    return this.columnAu_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Oth_MaleColumn {
                get {
                    return this.columnOth_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Oth_FemaleColumn {
                get {
                    return this.columnOth_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_MaleColumn {
                get {
                    return this.columnTotal_Male;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_FemaleColumn {
                get {
                    return this.columnTotal_Female;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AsOnDateColumn {
                get {
                    return this.columnAsOnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AsaDistrictWiseStaff1Row this[int index] {
                get {
                    return ((AsaDistrictWiseStaff1Row)(this.Rows[index]));
                }
            }
            
            public event AsaDistrictWiseStaff1RowChangeEventHandler AsaDistrictWiseStaff1RowChanging;
            
            public event AsaDistrictWiseStaff1RowChangeEventHandler AsaDistrictWiseStaff1RowChanged;
            
            public event AsaDistrictWiseStaff1RowChangeEventHandler AsaDistrictWiseStaff1RowDeleting;
            
            public event AsaDistrictWiseStaff1RowChangeEventHandler AsaDistrictWiseStaff1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAsaDistrictWiseStaff1Row(AsaDistrictWiseStaff1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AsaDistrictWiseStaff1Row AddAsaDistrictWiseStaff1Row(
                        string District, 
                        int Branch, 
                        int Orther_Branch, 
                        int LO_Male, 
                        int LO_Female, 
                        int BM_Male, 
                        int BM_Female, 
                        int ABM_Male, 
                        int ABM_Female, 
                        int RM_Male, 
                        int RM_Female, 
                        int DM_Male, 
                        int DM_Female, 
                        int Au_Male, 
                        int Au_Female, 
                        int Oth_Male, 
                        int Oth_Female, 
                        int Total_Male, 
                        int Total_Female, 
                        System.DateTime AsOnDate) {
                AsaDistrictWiseStaff1Row rowAsaDistrictWiseStaff1Row = ((AsaDistrictWiseStaff1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        District,
                        Branch,
                        Orther_Branch,
                        LO_Male,
                        LO_Female,
                        BM_Male,
                        BM_Female,
                        ABM_Male,
                        ABM_Female,
                        RM_Male,
                        RM_Female,
                        DM_Male,
                        DM_Female,
                        Au_Male,
                        Au_Female,
                        Oth_Male,
                        Oth_Female,
                        Total_Male,
                        Total_Female,
                        AsOnDate};
                rowAsaDistrictWiseStaff1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowAsaDistrictWiseStaff1Row);
                return rowAsaDistrictWiseStaff1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AsaDistrictWiseStaff1DataTable cln = ((AsaDistrictWiseStaff1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AsaDistrictWiseStaff1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistrict = base.Columns["District"];
                this.columnBranch = base.Columns["Branch"];
                this.columnOrther_Branch = base.Columns["Orther_Branch"];
                this.columnLO_Male = base.Columns["LO_Male"];
                this.columnLO_Female = base.Columns["LO_Female"];
                this.columnBM_Male = base.Columns["BM_Male"];
                this.columnBM_Female = base.Columns["BM_Female"];
                this.columnABM_Male = base.Columns["ABM_Male"];
                this.columnABM_Female = base.Columns["ABM_Female"];
                this.columnRM_Male = base.Columns["RM_Male"];
                this.columnRM_Female = base.Columns["RM_Female"];
                this.columnDM_Male = base.Columns["DM_Male"];
                this.columnDM_Female = base.Columns["DM_Female"];
                this.columnAu_Male = base.Columns["Au_Male"];
                this.columnAu_Female = base.Columns["Au_Female"];
                this.columnOth_Male = base.Columns["Oth_Male"];
                this.columnOth_Female = base.Columns["Oth_Female"];
                this.columnTotal_Male = base.Columns["Total_Male"];
                this.columnTotal_Female = base.Columns["Total_Female"];
                this.columnAsOnDate = base.Columns["AsOnDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnOrther_Branch = new global::System.Data.DataColumn("Orther_Branch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrther_Branch);
                this.columnLO_Male = new global::System.Data.DataColumn("LO_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLO_Male);
                this.columnLO_Female = new global::System.Data.DataColumn("LO_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLO_Female);
                this.columnBM_Male = new global::System.Data.DataColumn("BM_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBM_Male);
                this.columnBM_Female = new global::System.Data.DataColumn("BM_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBM_Female);
                this.columnABM_Male = new global::System.Data.DataColumn("ABM_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABM_Male);
                this.columnABM_Female = new global::System.Data.DataColumn("ABM_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABM_Female);
                this.columnRM_Male = new global::System.Data.DataColumn("RM_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRM_Male);
                this.columnRM_Female = new global::System.Data.DataColumn("RM_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRM_Female);
                this.columnDM_Male = new global::System.Data.DataColumn("DM_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDM_Male);
                this.columnDM_Female = new global::System.Data.DataColumn("DM_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDM_Female);
                this.columnAu_Male = new global::System.Data.DataColumn("Au_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAu_Male);
                this.columnAu_Female = new global::System.Data.DataColumn("Au_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAu_Female);
                this.columnOth_Male = new global::System.Data.DataColumn("Oth_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOth_Male);
                this.columnOth_Female = new global::System.Data.DataColumn("Oth_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOth_Female);
                this.columnTotal_Male = new global::System.Data.DataColumn("Total_Male", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Male);
                this.columnTotal_Female = new global::System.Data.DataColumn("Total_Female", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Female);
                this.columnAsOnDate = new global::System.Data.DataColumn("AsOnDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAsOnDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AsaDistrictWiseStaff1Row NewAsaDistrictWiseStaff1Row() {
                return ((AsaDistrictWiseStaff1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AsaDistrictWiseStaff1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AsaDistrictWiseStaff1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AsaDistrictWiseStaff1RowChanged != null)) {
                    this.AsaDistrictWiseStaff1RowChanged(this, new AsaDistrictWiseStaff1RowChangeEvent(((AsaDistrictWiseStaff1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AsaDistrictWiseStaff1RowChanging != null)) {
                    this.AsaDistrictWiseStaff1RowChanging(this, new AsaDistrictWiseStaff1RowChangeEvent(((AsaDistrictWiseStaff1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AsaDistrictWiseStaff1RowDeleted != null)) {
                    this.AsaDistrictWiseStaff1RowDeleted(this, new AsaDistrictWiseStaff1RowChangeEvent(((AsaDistrictWiseStaff1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AsaDistrictWiseStaff1RowDeleting != null)) {
                    this.AsaDistrictWiseStaff1RowDeleting(this, new AsaDistrictWiseStaff1RowChangeEvent(((AsaDistrictWiseStaff1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAsaDistrictWiseStaff1Row(AsaDistrictWiseStaff1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AsaDistrictWiseStaff1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PenaltyReportDataTable : global::System.Data.TypedTableBase<PenaltyReportRow> {
            
            private global::System.Data.DataColumn columnEmpID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            private global::System.Data.DataColumn columnPermanentDate;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnASA_District;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnLetterNo;
            
            private global::System.Data.DataColumn columnLetterDate;
            
            private global::System.Data.DataColumn columnFineType;
            
            private global::System.Data.DataColumn columnFineTime;
            
            private global::System.Data.DataColumn columnFineAmount;
            
            private global::System.Data.DataColumn columnDuration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PenaltyReportDataTable() {
                this.TableName = "PenaltyReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PenaltyReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PenaltyReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpIDColumn {
                get {
                    return this.columnEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PermanentDateColumn {
                get {
                    return this.columnPermanentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASA_DistrictColumn {
                get {
                    return this.columnASA_District;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterNoColumn {
                get {
                    return this.columnLetterNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterDateColumn {
                get {
                    return this.columnLetterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FineTypeColumn {
                get {
                    return this.columnFineType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FineTimeColumn {
                get {
                    return this.columnFineTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FineAmountColumn {
                get {
                    return this.columnFineAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DurationColumn {
                get {
                    return this.columnDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PenaltyReportRow this[int index] {
                get {
                    return ((PenaltyReportRow)(this.Rows[index]));
                }
            }
            
            public event PenaltyReportRowChangeEventHandler PenaltyReportRowChanging;
            
            public event PenaltyReportRowChangeEventHandler PenaltyReportRowChanged;
            
            public event PenaltyReportRowChangeEventHandler PenaltyReportRowDeleting;
            
            public event PenaltyReportRowChangeEventHandler PenaltyReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPenaltyReportRow(PenaltyReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PenaltyReportRow AddPenaltyReportRow(int EmpID, string Name, System.DateTime JoiningDate, System.DateTime PermanentDate, string Branch, string ASA_District, string Designation, string LetterNo, System.DateTime LetterDate, string FineType, int FineTime, double FineAmount, int Duration) {
                PenaltyReportRow rowPenaltyReportRow = ((PenaltyReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmpID,
                        Name,
                        JoiningDate,
                        PermanentDate,
                        Branch,
                        ASA_District,
                        Designation,
                        LetterNo,
                        LetterDate,
                        FineType,
                        FineTime,
                        FineAmount,
                        Duration};
                rowPenaltyReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPenaltyReportRow);
                return rowPenaltyReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PenaltyReportDataTable cln = ((PenaltyReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PenaltyReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpID = base.Columns["EmpID"];
                this.columnName = base.Columns["Name"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
                this.columnPermanentDate = base.Columns["PermanentDate"];
                this.columnBranch = base.Columns["Branch"];
                this.columnASA_District = base.Columns["ASA_District"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnLetterNo = base.Columns["LetterNo"];
                this.columnLetterDate = base.Columns["LetterDate"];
                this.columnFineType = base.Columns["FineType"];
                this.columnFineTime = base.Columns["FineTime"];
                this.columnFineAmount = base.Columns["FineAmount"];
                this.columnDuration = base.Columns["Duration"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpID = new global::System.Data.DataColumn("EmpID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnPermanentDate = new global::System.Data.DataColumn("PermanentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentDate);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnASA_District = new global::System.Data.DataColumn("ASA_District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASA_District);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnLetterNo = new global::System.Data.DataColumn("LetterNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterNo);
                this.columnLetterDate = new global::System.Data.DataColumn("LetterDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterDate);
                this.columnFineType = new global::System.Data.DataColumn("FineType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFineType);
                this.columnFineTime = new global::System.Data.DataColumn("FineTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFineTime);
                this.columnFineAmount = new global::System.Data.DataColumn("FineAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFineAmount);
                this.columnDuration = new global::System.Data.DataColumn("Duration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuration);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PenaltyReportRow NewPenaltyReportRow() {
                return ((PenaltyReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PenaltyReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PenaltyReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PenaltyReportRowChanged != null)) {
                    this.PenaltyReportRowChanged(this, new PenaltyReportRowChangeEvent(((PenaltyReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PenaltyReportRowChanging != null)) {
                    this.PenaltyReportRowChanging(this, new PenaltyReportRowChangeEvent(((PenaltyReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PenaltyReportRowDeleted != null)) {
                    this.PenaltyReportRowDeleted(this, new PenaltyReportRowChangeEvent(((PenaltyReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PenaltyReportRowDeleting != null)) {
                    this.PenaltyReportRowDeleting(this, new PenaltyReportRowChangeEvent(((PenaltyReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePenaltyReportRow(PenaltyReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PenaltyReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IncreamentHeldupDataTable : global::System.Data.TypedTableBase<IncreamentHeldupRow> {
            
            private global::System.Data.DataColumn columnEmpID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            private global::System.Data.DataColumn columnPermanentDate;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnASA_District;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnLetterNo;
            
            private global::System.Data.DataColumn columnLetterDate;
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnTodate;
            
            private global::System.Data.DataColumn columnHeldUpBranch;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncreamentHeldupDataTable() {
                this.TableName = "IncreamentHeldup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncreamentHeldupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IncreamentHeldupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpIDColumn {
                get {
                    return this.columnEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PermanentDateColumn {
                get {
                    return this.columnPermanentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASA_DistrictColumn {
                get {
                    return this.columnASA_District;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterNoColumn {
                get {
                    return this.columnLetterNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterDateColumn {
                get {
                    return this.columnLetterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TodateColumn {
                get {
                    return this.columnTodate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeldUpBranchColumn {
                get {
                    return this.columnHeldUpBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncreamentHeldupRow this[int index] {
                get {
                    return ((IncreamentHeldupRow)(this.Rows[index]));
                }
            }
            
            public event IncreamentHeldupRowChangeEventHandler IncreamentHeldupRowChanging;
            
            public event IncreamentHeldupRowChangeEventHandler IncreamentHeldupRowChanged;
            
            public event IncreamentHeldupRowChangeEventHandler IncreamentHeldupRowDeleting;
            
            public event IncreamentHeldupRowChangeEventHandler IncreamentHeldupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIncreamentHeldupRow(IncreamentHeldupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncreamentHeldupRow AddIncreamentHeldupRow(int EmpID, string Name, System.DateTime JoiningDate, System.DateTime PermanentDate, string Branch, string ASA_District, string Designation, string LetterNo, System.DateTime LetterDate, System.DateTime FromDate, System.DateTime Todate, string HeldUpBranch) {
                IncreamentHeldupRow rowIncreamentHeldupRow = ((IncreamentHeldupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmpID,
                        Name,
                        JoiningDate,
                        PermanentDate,
                        Branch,
                        ASA_District,
                        Designation,
                        LetterNo,
                        LetterDate,
                        FromDate,
                        Todate,
                        HeldUpBranch};
                rowIncreamentHeldupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIncreamentHeldupRow);
                return rowIncreamentHeldupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IncreamentHeldupDataTable cln = ((IncreamentHeldupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IncreamentHeldupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpID = base.Columns["EmpID"];
                this.columnName = base.Columns["Name"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
                this.columnPermanentDate = base.Columns["PermanentDate"];
                this.columnBranch = base.Columns["Branch"];
                this.columnASA_District = base.Columns["ASA_District"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnLetterNo = base.Columns["LetterNo"];
                this.columnLetterDate = base.Columns["LetterDate"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnTodate = base.Columns["Todate"];
                this.columnHeldUpBranch = base.Columns["HeldUpBranch"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpID = new global::System.Data.DataColumn("EmpID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnPermanentDate = new global::System.Data.DataColumn("PermanentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentDate);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnASA_District = new global::System.Data.DataColumn("ASA_District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASA_District);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnLetterNo = new global::System.Data.DataColumn("LetterNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterNo);
                this.columnLetterDate = new global::System.Data.DataColumn("LetterDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterDate);
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnTodate = new global::System.Data.DataColumn("Todate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTodate);
                this.columnHeldUpBranch = new global::System.Data.DataColumn("HeldUpBranch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeldUpBranch);
                this.columnFromDate.Caption = "FineType";
                this.columnTodate.Caption = "FineTime";
                this.columnHeldUpBranch.Caption = "FineAmount";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncreamentHeldupRow NewIncreamentHeldupRow() {
                return ((IncreamentHeldupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IncreamentHeldupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IncreamentHeldupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IncreamentHeldupRowChanged != null)) {
                    this.IncreamentHeldupRowChanged(this, new IncreamentHeldupRowChangeEvent(((IncreamentHeldupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IncreamentHeldupRowChanging != null)) {
                    this.IncreamentHeldupRowChanging(this, new IncreamentHeldupRowChangeEvent(((IncreamentHeldupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IncreamentHeldupRowDeleted != null)) {
                    this.IncreamentHeldupRowDeleted(this, new IncreamentHeldupRowChangeEvent(((IncreamentHeldupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IncreamentHeldupRowDeleting != null)) {
                    this.IncreamentHeldupRowDeleting(this, new IncreamentHeldupRowChangeEvent(((IncreamentHeldupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIncreamentHeldupRow(IncreamentHeldupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IncreamentHeldupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WarningDataTable : global::System.Data.TypedTableBase<WarningRow> {
            
            private global::System.Data.DataColumn columnEmpID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            private global::System.Data.DataColumn columnPermanentDate;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnASA_District;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnLetterNo;
            
            private global::System.Data.DataColumn columnLetterDate;
            
            private global::System.Data.DataColumn columnDuration;
            
            private global::System.Data.DataColumn columnTotalWarningTime;
            
            private global::System.Data.DataColumn columnWarningBranch;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WarningDataTable() {
                this.TableName = "Warning";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WarningDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WarningDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpIDColumn {
                get {
                    return this.columnEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PermanentDateColumn {
                get {
                    return this.columnPermanentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASA_DistrictColumn {
                get {
                    return this.columnASA_District;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterNoColumn {
                get {
                    return this.columnLetterNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterDateColumn {
                get {
                    return this.columnLetterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DurationColumn {
                get {
                    return this.columnDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalWarningTimeColumn {
                get {
                    return this.columnTotalWarningTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarningBranchColumn {
                get {
                    return this.columnWarningBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WarningRow this[int index] {
                get {
                    return ((WarningRow)(this.Rows[index]));
                }
            }
            
            public event WarningRowChangeEventHandler WarningRowChanging;
            
            public event WarningRowChangeEventHandler WarningRowChanged;
            
            public event WarningRowChangeEventHandler WarningRowDeleting;
            
            public event WarningRowChangeEventHandler WarningRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWarningRow(WarningRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WarningRow AddWarningRow(int EmpID, string Name, System.DateTime JoiningDate, System.DateTime PermanentDate, string Branch, string ASA_District, string Designation, string LetterNo, System.DateTime LetterDate, int Duration, int TotalWarningTime, string WarningBranch) {
                WarningRow rowWarningRow = ((WarningRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmpID,
                        Name,
                        JoiningDate,
                        PermanentDate,
                        Branch,
                        ASA_District,
                        Designation,
                        LetterNo,
                        LetterDate,
                        Duration,
                        TotalWarningTime,
                        WarningBranch};
                rowWarningRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWarningRow);
                return rowWarningRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WarningDataTable cln = ((WarningDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WarningDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpID = base.Columns["EmpID"];
                this.columnName = base.Columns["Name"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
                this.columnPermanentDate = base.Columns["PermanentDate"];
                this.columnBranch = base.Columns["Branch"];
                this.columnASA_District = base.Columns["ASA_District"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnLetterNo = base.Columns["LetterNo"];
                this.columnLetterDate = base.Columns["LetterDate"];
                this.columnDuration = base.Columns["Duration"];
                this.columnTotalWarningTime = base.Columns["TotalWarningTime"];
                this.columnWarningBranch = base.Columns["WarningBranch"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpID = new global::System.Data.DataColumn("EmpID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnPermanentDate = new global::System.Data.DataColumn("PermanentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentDate);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnASA_District = new global::System.Data.DataColumn("ASA_District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASA_District);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnLetterNo = new global::System.Data.DataColumn("LetterNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterNo);
                this.columnLetterDate = new global::System.Data.DataColumn("LetterDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterDate);
                this.columnDuration = new global::System.Data.DataColumn("Duration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuration);
                this.columnTotalWarningTime = new global::System.Data.DataColumn("TotalWarningTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalWarningTime);
                this.columnWarningBranch = new global::System.Data.DataColumn("WarningBranch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarningBranch);
                this.columnDuration.Caption = "FineType";
                this.columnTotalWarningTime.Caption = "FineTime";
                this.columnWarningBranch.Caption = "FineAmount";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WarningRow NewWarningRow() {
                return ((WarningRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WarningRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WarningRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WarningRowChanged != null)) {
                    this.WarningRowChanged(this, new WarningRowChangeEvent(((WarningRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WarningRowChanging != null)) {
                    this.WarningRowChanging(this, new WarningRowChangeEvent(((WarningRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WarningRowDeleted != null)) {
                    this.WarningRowDeleted(this, new WarningRowChangeEvent(((WarningRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WarningRowDeleting != null)) {
                    this.WarningRowDeleting(this, new WarningRowChangeEvent(((WarningRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWarningRow(WarningRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WarningDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IndivisualLeaveDataTable : global::System.Data.TypedTableBase<IndivisualLeaveRow> {
            
            private global::System.Data.DataColumn columnEmpID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            private global::System.Data.DataColumn columnPermanentDate;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnASA_District;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnLetterNo;
            
            private global::System.Data.DataColumn columnLetterDate;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IndivisualLeaveDataTable() {
                this.TableName = "IndivisualLeave";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IndivisualLeaveDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IndivisualLeaveDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpIDColumn {
                get {
                    return this.columnEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PermanentDateColumn {
                get {
                    return this.columnPermanentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASA_DistrictColumn {
                get {
                    return this.columnASA_District;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterNoColumn {
                get {
                    return this.columnLetterNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterDateColumn {
                get {
                    return this.columnLetterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IndivisualLeaveRow this[int index] {
                get {
                    return ((IndivisualLeaveRow)(this.Rows[index]));
                }
            }
            
            public event IndivisualLeaveRowChangeEventHandler IndivisualLeaveRowChanging;
            
            public event IndivisualLeaveRowChangeEventHandler IndivisualLeaveRowChanged;
            
            public event IndivisualLeaveRowChangeEventHandler IndivisualLeaveRowDeleting;
            
            public event IndivisualLeaveRowChangeEventHandler IndivisualLeaveRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIndivisualLeaveRow(IndivisualLeaveRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IndivisualLeaveRow AddIndivisualLeaveRow(int EmpID, string Name, System.DateTime JoiningDate, System.DateTime PermanentDate, string Branch, string ASA_District, string Designation, string LetterNo, System.DateTime LetterDate, string Type, System.DateTime StartDate, System.DateTime EndDate) {
                IndivisualLeaveRow rowIndivisualLeaveRow = ((IndivisualLeaveRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmpID,
                        Name,
                        JoiningDate,
                        PermanentDate,
                        Branch,
                        ASA_District,
                        Designation,
                        LetterNo,
                        LetterDate,
                        Type,
                        StartDate,
                        EndDate};
                rowIndivisualLeaveRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIndivisualLeaveRow);
                return rowIndivisualLeaveRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IndivisualLeaveDataTable cln = ((IndivisualLeaveDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IndivisualLeaveDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpID = base.Columns["EmpID"];
                this.columnName = base.Columns["Name"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
                this.columnPermanentDate = base.Columns["PermanentDate"];
                this.columnBranch = base.Columns["Branch"];
                this.columnASA_District = base.Columns["ASA_District"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnLetterNo = base.Columns["LetterNo"];
                this.columnLetterDate = base.Columns["LetterDate"];
                this.columnType = base.Columns["Type"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpID = new global::System.Data.DataColumn("EmpID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnPermanentDate = new global::System.Data.DataColumn("PermanentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermanentDate);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnASA_District = new global::System.Data.DataColumn("ASA_District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASA_District);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnLetterNo = new global::System.Data.DataColumn("LetterNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterNo);
                this.columnLetterDate = new global::System.Data.DataColumn("LetterDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterDate);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnType.Caption = "FineType";
                this.columnStartDate.Caption = "FineTime";
                this.columnEndDate.Caption = "FineAmount";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IndivisualLeaveRow NewIndivisualLeaveRow() {
                return ((IndivisualLeaveRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IndivisualLeaveRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IndivisualLeaveRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IndivisualLeaveRowChanged != null)) {
                    this.IndivisualLeaveRowChanged(this, new IndivisualLeaveRowChangeEvent(((IndivisualLeaveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IndivisualLeaveRowChanging != null)) {
                    this.IndivisualLeaveRowChanging(this, new IndivisualLeaveRowChangeEvent(((IndivisualLeaveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IndivisualLeaveRowDeleted != null)) {
                    this.IndivisualLeaveRowDeleted(this, new IndivisualLeaveRowChangeEvent(((IndivisualLeaveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IndivisualLeaveRowDeleting != null)) {
                    this.IndivisualLeaveRowDeleting(this, new IndivisualLeaveRowChangeEvent(((IndivisualLeaveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIndivisualLeaveRow(IndivisualLeaveRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IndivisualLeaveDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GD_BranchDataTable : global::System.Data.TypedTableBase<GD_BranchRow> {
            
            private global::System.Data.DataColumn columnDivision;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnBranch;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GD_BranchDataTable() {
                this.TableName = "GD_Branch";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GD_BranchDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GD_BranchDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivisionColumn {
                get {
                    return this.columnDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GD_BranchRow this[int index] {
                get {
                    return ((GD_BranchRow)(this.Rows[index]));
                }
            }
            
            public event GD_BranchRowChangeEventHandler GD_BranchRowChanging;
            
            public event GD_BranchRowChangeEventHandler GD_BranchRowChanged;
            
            public event GD_BranchRowChangeEventHandler GD_BranchRowDeleting;
            
            public event GD_BranchRowChangeEventHandler GD_BranchRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGD_BranchRow(GD_BranchRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GD_BranchRow AddGD_BranchRow(string Division, string District, int Branch) {
                GD_BranchRow rowGD_BranchRow = ((GD_BranchRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Division,
                        District,
                        Branch};
                rowGD_BranchRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGD_BranchRow);
                return rowGD_BranchRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GD_BranchDataTable cln = ((GD_BranchDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GD_BranchDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDivision = base.Columns["Division"];
                this.columnDistrict = base.Columns["District"];
                this.columnBranch = base.Columns["Branch"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDivision = new global::System.Data.DataColumn("Division", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivision);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GD_BranchRow NewGD_BranchRow() {
                return ((GD_BranchRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GD_BranchRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GD_BranchRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GD_BranchRowChanged != null)) {
                    this.GD_BranchRowChanged(this, new GD_BranchRowChangeEvent(((GD_BranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GD_BranchRowChanging != null)) {
                    this.GD_BranchRowChanging(this, new GD_BranchRowChangeEvent(((GD_BranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GD_BranchRowDeleted != null)) {
                    this.GD_BranchRowDeleted(this, new GD_BranchRowChangeEvent(((GD_BranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GD_BranchRowDeleting != null)) {
                    this.GD_BranchRowDeleting(this, new GD_BranchRowChangeEvent(((GD_BranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGD_BranchRow(GD_BranchRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GD_BranchDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ASAD_BranchDataTable : global::System.Data.TypedTableBase<ASAD_BranchRow> {
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnBranch;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASAD_BranchDataTable() {
                this.TableName = "ASAD_Branch";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ASAD_BranchDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ASAD_BranchDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASAD_BranchRow this[int index] {
                get {
                    return ((ASAD_BranchRow)(this.Rows[index]));
                }
            }
            
            public event ASAD_BranchRowChangeEventHandler ASAD_BranchRowChanging;
            
            public event ASAD_BranchRowChangeEventHandler ASAD_BranchRowChanged;
            
            public event ASAD_BranchRowChangeEventHandler ASAD_BranchRowDeleting;
            
            public event ASAD_BranchRowChangeEventHandler ASAD_BranchRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddASAD_BranchRow(ASAD_BranchRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASAD_BranchRow AddASAD_BranchRow(string District, int Branch) {
                ASAD_BranchRow rowASAD_BranchRow = ((ASAD_BranchRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        District,
                        Branch};
                rowASAD_BranchRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowASAD_BranchRow);
                return rowASAD_BranchRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ASAD_BranchDataTable cln = ((ASAD_BranchDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ASAD_BranchDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistrict = base.Columns["District"];
                this.columnBranch = base.Columns["Branch"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASAD_BranchRow NewASAD_BranchRow() {
                return ((ASAD_BranchRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ASAD_BranchRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ASAD_BranchRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ASAD_BranchRowChanged != null)) {
                    this.ASAD_BranchRowChanged(this, new ASAD_BranchRowChangeEvent(((ASAD_BranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ASAD_BranchRowChanging != null)) {
                    this.ASAD_BranchRowChanging(this, new ASAD_BranchRowChangeEvent(((ASAD_BranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ASAD_BranchRowDeleted != null)) {
                    this.ASAD_BranchRowDeleted(this, new ASAD_BranchRowChangeEvent(((ASAD_BranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ASAD_BranchRowDeleting != null)) {
                    this.ASAD_BranchRowDeleting(this, new ASAD_BranchRowChangeEvent(((ASAD_BranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveASAD_BranchRow(ASAD_BranchRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ASAD_BranchDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransferLetterDataTable : global::System.Data.TypedTableBase<TransferLetterRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnPresentBranch;
            
            private global::System.Data.DataColumn columnPresentDistrict;
            
            private global::System.Data.DataColumn columnDestinationBranch;
            
            private global::System.Data.DataColumn columnDestinationDistrict;
            
            private global::System.Data.DataColumn columnLetterNo;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            private global::System.Data.DataColumn columnLetterDate;
            
            private global::System.Data.DataColumn columnDuplication;
            
            private global::System.Data.DataColumn columnInsideAddress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferLetterDataTable() {
                this.TableName = "TransferLetter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransferLetterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransferLetterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PresentBranchColumn {
                get {
                    return this.columnPresentBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PresentDistrictColumn {
                get {
                    return this.columnPresentDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationBranchColumn {
                get {
                    return this.columnDestinationBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationDistrictColumn {
                get {
                    return this.columnDestinationDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterNoColumn {
                get {
                    return this.columnLetterNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterDateColumn {
                get {
                    return this.columnLetterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DuplicationColumn {
                get {
                    return this.columnDuplication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideAddressColumn {
                get {
                    return this.columnInsideAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferLetterRow this[int index] {
                get {
                    return ((TransferLetterRow)(this.Rows[index]));
                }
            }
            
            public event TransferLetterRowChangeEventHandler TransferLetterRowChanging;
            
            public event TransferLetterRowChangeEventHandler TransferLetterRowChanged;
            
            public event TransferLetterRowChangeEventHandler TransferLetterRowDeleting;
            
            public event TransferLetterRowChangeEventHandler TransferLetterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransferLetterRow(TransferLetterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferLetterRow AddTransferLetterRow(string Name, int Code, string PresentBranch, string PresentDistrict, string DestinationBranch, string DestinationDistrict, string LetterNo, System.DateTime JoiningDate, System.DateTime LetterDate, string Duplication, string InsideAddress) {
                TransferLetterRow rowTransferLetterRow = ((TransferLetterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        Code,
                        PresentBranch,
                        PresentDistrict,
                        DestinationBranch,
                        DestinationDistrict,
                        LetterNo,
                        JoiningDate,
                        LetterDate,
                        Duplication,
                        InsideAddress};
                rowTransferLetterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTransferLetterRow);
                return rowTransferLetterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TransferLetterDataTable cln = ((TransferLetterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TransferLetterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnCode = base.Columns["Code"];
                this.columnPresentBranch = base.Columns["PresentBranch"];
                this.columnPresentDistrict = base.Columns["PresentDistrict"];
                this.columnDestinationBranch = base.Columns["DestinationBranch"];
                this.columnDestinationDistrict = base.Columns["DestinationDistrict"];
                this.columnLetterNo = base.Columns["LetterNo"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
                this.columnLetterDate = base.Columns["LetterDate"];
                this.columnDuplication = base.Columns["Duplication"];
                this.columnInsideAddress = base.Columns["InsideAddress"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnPresentBranch = new global::System.Data.DataColumn("PresentBranch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentBranch);
                this.columnPresentDistrict = new global::System.Data.DataColumn("PresentDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentDistrict);
                this.columnDestinationBranch = new global::System.Data.DataColumn("DestinationBranch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationBranch);
                this.columnDestinationDistrict = new global::System.Data.DataColumn("DestinationDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationDistrict);
                this.columnLetterNo = new global::System.Data.DataColumn("LetterNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterNo);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnLetterDate = new global::System.Data.DataColumn("LetterDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterDate);
                this.columnDuplication = new global::System.Data.DataColumn("Duplication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuplication);
                this.columnInsideAddress = new global::System.Data.DataColumn("InsideAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideAddress);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferLetterRow NewTransferLetterRow() {
                return ((TransferLetterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TransferLetterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TransferLetterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransferLetterRowChanged != null)) {
                    this.TransferLetterRowChanged(this, new TransferLetterRowChangeEvent(((TransferLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransferLetterRowChanging != null)) {
                    this.TransferLetterRowChanging(this, new TransferLetterRowChangeEvent(((TransferLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransferLetterRowDeleted != null)) {
                    this.TransferLetterRowDeleted(this, new TransferLetterRowChangeEvent(((TransferLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransferLetterRowDeleting != null)) {
                    this.TransferLetterRowDeleting(this, new TransferLetterRowChangeEvent(((TransferLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransferLetterRow(TransferLetterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransferLetterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransferReportDataTable : global::System.Data.TypedTableBase<TransferReportRow> {
            
            private global::System.Data.DataColumn columnEmployee_ID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnLetterNo;
            
            private global::System.Data.DataColumn columnLetterDate;
            
            private global::System.Data.DataColumn columnFrom_Branch;
            
            private global::System.Data.DataColumn columnFrom_District;
            
            private global::System.Data.DataColumn columnTo_Branch;
            
            private global::System.Data.DataColumn columnTo_District;
            
            private global::System.Data.DataColumn columnTo_Branch_Date;
            
            private global::System.Data.DataColumn columnRemarks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferReportDataTable() {
                this.TableName = "TransferReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransferReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransferReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Employee_IDColumn {
                get {
                    return this.columnEmployee_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterNoColumn {
                get {
                    return this.columnLetterNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterDateColumn {
                get {
                    return this.columnLetterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn From_BranchColumn {
                get {
                    return this.columnFrom_Branch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn From_DistrictColumn {
                get {
                    return this.columnFrom_District;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_BranchColumn {
                get {
                    return this.columnTo_Branch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_DistrictColumn {
                get {
                    return this.columnTo_District;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn To_Branch_DateColumn {
                get {
                    return this.columnTo_Branch_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferReportRow this[int index] {
                get {
                    return ((TransferReportRow)(this.Rows[index]));
                }
            }
            
            public event TransferReportRowChangeEventHandler TransferReportRowChanging;
            
            public event TransferReportRowChangeEventHandler TransferReportRowChanged;
            
            public event TransferReportRowChangeEventHandler TransferReportRowDeleting;
            
            public event TransferReportRowChangeEventHandler TransferReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransferReportRow(TransferReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferReportRow AddTransferReportRow(int Employee_ID, string Name, string Designation, string LetterNo, System.DateTime LetterDate, string From_Branch, string From_District, string To_Branch, string To_District, System.DateTime To_Branch_Date, string Remarks) {
                TransferReportRow rowTransferReportRow = ((TransferReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Employee_ID,
                        Name,
                        Designation,
                        LetterNo,
                        LetterDate,
                        From_Branch,
                        From_District,
                        To_Branch,
                        To_District,
                        To_Branch_Date,
                        Remarks};
                rowTransferReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTransferReportRow);
                return rowTransferReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TransferReportDataTable cln = ((TransferReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TransferReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployee_ID = base.Columns["Employee_ID"];
                this.columnName = base.Columns["Name"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnLetterNo = base.Columns["LetterNo"];
                this.columnLetterDate = base.Columns["LetterDate"];
                this.columnFrom_Branch = base.Columns["From_Branch"];
                this.columnFrom_District = base.Columns["From_District"];
                this.columnTo_Branch = base.Columns["To_Branch"];
                this.columnTo_District = base.Columns["To_District"];
                this.columnTo_Branch_Date = base.Columns["To_Branch_Date"];
                this.columnRemarks = base.Columns["Remarks"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployee_ID = new global::System.Data.DataColumn("Employee_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployee_ID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnLetterNo = new global::System.Data.DataColumn("LetterNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterNo);
                this.columnLetterDate = new global::System.Data.DataColumn("LetterDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterDate);
                this.columnFrom_Branch = new global::System.Data.DataColumn("From_Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrom_Branch);
                this.columnFrom_District = new global::System.Data.DataColumn("From_District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrom_District);
                this.columnTo_Branch = new global::System.Data.DataColumn("To_Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_Branch);
                this.columnTo_District = new global::System.Data.DataColumn("To_District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_District);
                this.columnTo_Branch_Date = new global::System.Data.DataColumn("To_Branch_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTo_Branch_Date);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferReportRow NewTransferReportRow() {
                return ((TransferReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TransferReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TransferReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransferReportRowChanged != null)) {
                    this.TransferReportRowChanged(this, new TransferReportRowChangeEvent(((TransferReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransferReportRowChanging != null)) {
                    this.TransferReportRowChanging(this, new TransferReportRowChangeEvent(((TransferReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransferReportRowDeleted != null)) {
                    this.TransferReportRowDeleted(this, new TransferReportRowChangeEvent(((TransferReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransferReportRowDeleting != null)) {
                    this.TransferReportRowDeleting(this, new TransferReportRowChangeEvent(((TransferReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransferReportRow(TransferReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransferReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MultiLetterDataTable : global::System.Data.TypedTableBase<MultiLetterRow> {
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnLetterNo;
            
            private global::System.Data.DataColumn columnLetterDate;
            
            private global::System.Data.DataColumn columnAddressTo;
            
            private global::System.Data.DataColumn columnBody;
            
            private global::System.Data.DataColumn columnConclution;
            
            private global::System.Data.DataColumn columnSignatory;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnDuplication;
            
            private global::System.Data.DataColumn columnNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MultiLetterDataTable() {
                this.TableName = "MultiLetter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MultiLetterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MultiLetterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterNoColumn {
                get {
                    return this.columnLetterNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LetterDateColumn {
                get {
                    return this.columnLetterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressToColumn {
                get {
                    return this.columnAddressTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BodyColumn {
                get {
                    return this.columnBody;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConclutionColumn {
                get {
                    return this.columnConclution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignatoryColumn {
                get {
                    return this.columnSignatory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DuplicationColumn {
                get {
                    return this.columnDuplication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MultiLetterRow this[int index] {
                get {
                    return ((MultiLetterRow)(this.Rows[index]));
                }
            }
            
            public event MultiLetterRowChangeEventHandler MultiLetterRowChanging;
            
            public event MultiLetterRowChangeEventHandler MultiLetterRowChanged;
            
            public event MultiLetterRowChangeEventHandler MultiLetterRowDeleting;
            
            public event MultiLetterRowChangeEventHandler MultiLetterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMultiLetterRow(MultiLetterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MultiLetterRow AddMultiLetterRow(string Subject, string LetterNo, string LetterDate, string AddressTo, string Body, string Conclution, string Signatory, string Designation, string Duplication, string Note) {
                MultiLetterRow rowMultiLetterRow = ((MultiLetterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Subject,
                        LetterNo,
                        LetterDate,
                        AddressTo,
                        Body,
                        Conclution,
                        Signatory,
                        Designation,
                        Duplication,
                        Note};
                rowMultiLetterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMultiLetterRow);
                return rowMultiLetterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MultiLetterDataTable cln = ((MultiLetterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MultiLetterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSubject = base.Columns["Subject"];
                this.columnLetterNo = base.Columns["LetterNo"];
                this.columnLetterDate = base.Columns["LetterDate"];
                this.columnAddressTo = base.Columns["AddressTo"];
                this.columnBody = base.Columns["Body"];
                this.columnConclution = base.Columns["Conclution"];
                this.columnSignatory = base.Columns["Signatory"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnDuplication = base.Columns["Duplication"];
                this.columnNote = base.Columns["Note"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnLetterNo = new global::System.Data.DataColumn("LetterNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterNo);
                this.columnLetterDate = new global::System.Data.DataColumn("LetterDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterDate);
                this.columnAddressTo = new global::System.Data.DataColumn("AddressTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressTo);
                this.columnBody = new global::System.Data.DataColumn("Body", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBody);
                this.columnConclution = new global::System.Data.DataColumn("Conclution", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConclution);
                this.columnSignatory = new global::System.Data.DataColumn("Signatory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignatory);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnDuplication = new global::System.Data.DataColumn("Duplication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuplication);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MultiLetterRow NewMultiLetterRow() {
                return ((MultiLetterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MultiLetterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MultiLetterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MultiLetterRowChanged != null)) {
                    this.MultiLetterRowChanged(this, new MultiLetterRowChangeEvent(((MultiLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MultiLetterRowChanging != null)) {
                    this.MultiLetterRowChanging(this, new MultiLetterRowChangeEvent(((MultiLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MultiLetterRowDeleted != null)) {
                    this.MultiLetterRowDeleted(this, new MultiLetterRowChangeEvent(((MultiLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MultiLetterRowDeleting != null)) {
                    this.MultiLetterRowDeleting(this, new MultiLetterRowChangeEvent(((MultiLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMultiLetterRow(MultiLetterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MultiLetterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Salary_CardDataTable : global::System.Data.TypedTableBase<Salary_CardRow> {
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnSalary_Head;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnSalaryDate;
            
            private global::System.Data.DataColumn columnDeduction_Head;
            
            private global::System.Data.DataColumn columnDeductionAmt;
            
            private global::System.Data.DataColumn columnGrade;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnScale;
            
            private global::System.Data.DataColumn columnBankAccount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Salary_CardDataTable() {
                this.TableName = "Salary_Card";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Salary_CardDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Salary_CardDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Salary_HeadColumn {
                get {
                    return this.columnSalary_Head;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalaryDateColumn {
                get {
                    return this.columnSalaryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Deduction_HeadColumn {
                get {
                    return this.columnDeduction_Head;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeductionAmtColumn {
                get {
                    return this.columnDeductionAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GradeColumn {
                get {
                    return this.columnGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScaleColumn {
                get {
                    return this.columnScale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankAccountColumn {
                get {
                    return this.columnBankAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Salary_CardRow this[int index] {
                get {
                    return ((Salary_CardRow)(this.Rows[index]));
                }
            }
            
            public event Salary_CardRowChangeEventHandler Salary_CardRowChanging;
            
            public event Salary_CardRowChangeEventHandler Salary_CardRowChanged;
            
            public event Salary_CardRowChangeEventHandler Salary_CardRowDeleting;
            
            public event Salary_CardRowChangeEventHandler Salary_CardRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalary_CardRow(Salary_CardRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Salary_CardRow AddSalary_CardRow(int Code, string Name, string Salary_Head, double Amount, System.DateTime SalaryDate, string Deduction_Head, double DeductionAmt, string Grade, string Designation, string Scale, string BankAccount) {
                Salary_CardRow rowSalary_CardRow = ((Salary_CardRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Code,
                        Name,
                        Salary_Head,
                        Amount,
                        SalaryDate,
                        Deduction_Head,
                        DeductionAmt,
                        Grade,
                        Designation,
                        Scale,
                        BankAccount};
                rowSalary_CardRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalary_CardRow);
                return rowSalary_CardRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Salary_CardDataTable cln = ((Salary_CardDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Salary_CardDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnName = base.Columns["Name"];
                this.columnSalary_Head = base.Columns["Salary_Head"];
                this.columnAmount = base.Columns["Amount"];
                this.columnSalaryDate = base.Columns["SalaryDate"];
                this.columnDeduction_Head = base.Columns["Deduction_Head"];
                this.columnDeductionAmt = base.Columns["DeductionAmt"];
                this.columnGrade = base.Columns["Grade"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnScale = base.Columns["Scale"];
                this.columnBankAccount = base.Columns["BankAccount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSalary_Head = new global::System.Data.DataColumn("Salary_Head", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalary_Head);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnSalaryDate = new global::System.Data.DataColumn("SalaryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryDate);
                this.columnDeduction_Head = new global::System.Data.DataColumn("Deduction_Head", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeduction_Head);
                this.columnDeductionAmt = new global::System.Data.DataColumn("DeductionAmt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductionAmt);
                this.columnGrade = new global::System.Data.DataColumn("Grade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrade);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnScale = new global::System.Data.DataColumn("Scale", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScale);
                this.columnBankAccount = new global::System.Data.DataColumn("BankAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Salary_CardRow NewSalary_CardRow() {
                return ((Salary_CardRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Salary_CardRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Salary_CardRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Salary_CardRowChanged != null)) {
                    this.Salary_CardRowChanged(this, new Salary_CardRowChangeEvent(((Salary_CardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Salary_CardRowChanging != null)) {
                    this.Salary_CardRowChanging(this, new Salary_CardRowChangeEvent(((Salary_CardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Salary_CardRowDeleted != null)) {
                    this.Salary_CardRowDeleted(this, new Salary_CardRowChangeEvent(((Salary_CardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Salary_CardRowDeleting != null)) {
                    this.Salary_CardRowDeleting(this, new Salary_CardRowChangeEvent(((Salary_CardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalary_CardRow(Salary_CardRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Salary_CardDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GDTotalStaffRow : global::System.Data.DataRow {
            
            private GDTotalStaffDataTable tableGDTotalStaff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GDTotalStaffRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGDTotalStaff = ((GDTotalStaffDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grade {
                get {
                    try {
                        return ((string)(this[this.tableGDTotalStaff.GradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grade\' in table \'GDTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGDTotalStaff.GradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableGDTotalStaff.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'GDTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGDTotalStaff.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Male {
                get {
                    try {
                        return ((int)(this[this.tableGDTotalStaff.MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Male\' in table \'GDTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGDTotalStaff.MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Female {
                get {
                    try {
                        return ((int)(this[this.tableGDTotalStaff.FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Female\' in table \'GDTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGDTotalStaff.FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Permanent {
                get {
                    try {
                        return ((int)(this[this.tableGDTotalStaff.PermanentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Permanent\' in table \'GDTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGDTotalStaff.PermanentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Provisional {
                get {
                    try {
                        return ((int)(this[this.tableGDTotalStaff.ProvisionalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Provisional\' in table \'GDTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGDTotalStaff.ProvisionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total {
                get {
                    try {
                        return ((int)(this[this.tableGDTotalStaff.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'GDTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGDTotalStaff.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AsOnDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGDTotalStaff.AsOnDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AsOnDate\' in table \'GDTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGDTotalStaff.AsOnDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGradeNull() {
                return this.IsNull(this.tableGDTotalStaff.GradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGradeNull() {
                this[this.tableGDTotalStaff.GradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableGDTotalStaff.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableGDTotalStaff.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaleNull() {
                return this.IsNull(this.tableGDTotalStaff.MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaleNull() {
                this[this.tableGDTotalStaff.MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFemaleNull() {
                return this.IsNull(this.tableGDTotalStaff.FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFemaleNull() {
                this[this.tableGDTotalStaff.FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPermanentNull() {
                return this.IsNull(this.tableGDTotalStaff.PermanentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPermanentNull() {
                this[this.tableGDTotalStaff.PermanentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvisionalNull() {
                return this.IsNull(this.tableGDTotalStaff.ProvisionalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvisionalNull() {
                this[this.tableGDTotalStaff.ProvisionalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableGDTotalStaff.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableGDTotalStaff.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAsOnDateNull() {
                return this.IsNull(this.tableGDTotalStaff.AsOnDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAsOnDateNull() {
                this[this.tableGDTotalStaff.AsOnDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OwnDistrictWiseStaffRow : global::System.Data.DataRow {
            
            private OwnDistrictWiseStaffDataTable tableOwnDistrictWiseStaff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OwnDistrictWiseStaffRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOwnDistrictWiseStaff = ((OwnDistrictWiseStaffDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tableOwnDistrictWiseStaff.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Branch {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Orther_Branch {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.Orther_BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orther_Branch\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.Orther_BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LO_Male {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.LO_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LO_Male\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.LO_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LO_Female {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.LO_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LO_Female\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.LO_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BM_Male {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.BM_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BM_Male\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.BM_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BM_Female {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.BM_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BM_Female\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.BM_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ABM_Male {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.ABM_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABM_Male\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.ABM_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ABM_Female {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.ABM_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABM_Female\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.ABM_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RM_Male {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.RM_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RM_Male\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.RM_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RM_Female {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.RM_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RM_Female\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.RM_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DM_Male {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.DM_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DM_Male\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.DM_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DM_Female {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.DM_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DM_Female\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.DM_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Au_Male {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.Au_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Au_Male\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.Au_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Au_Female {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.Au_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Au_Female\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.Au_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Oth_Male {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.Oth_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oth_Male\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.Oth_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Oth_Female {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.Oth_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oth_Female\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.Oth_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total_Male {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.Total_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Male\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.Total_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total_Female {
                get {
                    try {
                        return ((int)(this[this.tableOwnDistrictWiseStaff.Total_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Female\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.Total_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AsOnDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOwnDistrictWiseStaff.AsOnDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AsOnDate\' in table \'OwnDistrictWiseStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOwnDistrictWiseStaff.AsOnDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableOwnDistrictWiseStaff.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tableOwnDistrictWiseStaff.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrther_BranchNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.Orther_BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrther_BranchNull() {
                this[this.tableOwnDistrictWiseStaff.Orther_BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLO_MaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.LO_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLO_MaleNull() {
                this[this.tableOwnDistrictWiseStaff.LO_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLO_FemaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.LO_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLO_FemaleNull() {
                this[this.tableOwnDistrictWiseStaff.LO_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBM_MaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.BM_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBM_MaleNull() {
                this[this.tableOwnDistrictWiseStaff.BM_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBM_FemaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.BM_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBM_FemaleNull() {
                this[this.tableOwnDistrictWiseStaff.BM_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABM_MaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.ABM_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABM_MaleNull() {
                this[this.tableOwnDistrictWiseStaff.ABM_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABM_FemaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.ABM_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABM_FemaleNull() {
                this[this.tableOwnDistrictWiseStaff.ABM_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRM_MaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.RM_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRM_MaleNull() {
                this[this.tableOwnDistrictWiseStaff.RM_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRM_FemaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.RM_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRM_FemaleNull() {
                this[this.tableOwnDistrictWiseStaff.RM_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDM_MaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.DM_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDM_MaleNull() {
                this[this.tableOwnDistrictWiseStaff.DM_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDM_FemaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.DM_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDM_FemaleNull() {
                this[this.tableOwnDistrictWiseStaff.DM_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAu_MaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.Au_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAu_MaleNull() {
                this[this.tableOwnDistrictWiseStaff.Au_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAu_FemaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.Au_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAu_FemaleNull() {
                this[this.tableOwnDistrictWiseStaff.Au_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOth_MaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.Oth_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOth_MaleNull() {
                this[this.tableOwnDistrictWiseStaff.Oth_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOth_FemaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.Oth_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOth_FemaleNull() {
                this[this.tableOwnDistrictWiseStaff.Oth_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_MaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.Total_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_MaleNull() {
                this[this.tableOwnDistrictWiseStaff.Total_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_FemaleNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.Total_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_FemaleNull() {
                this[this.tableOwnDistrictWiseStaff.Total_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAsOnDateNull() {
                return this.IsNull(this.tableOwnDistrictWiseStaff.AsOnDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAsOnDateNull() {
                this[this.tableOwnDistrictWiseStaff.AsOnDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AtAGlanceTotalStaffRow : global::System.Data.DataRow {
            
            private AtAGlanceTotalStaffDataTable tableAtAGlanceTotalStaff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AtAGlanceTotalStaffRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAtAGlanceTotalStaff = ((AtAGlanceTotalStaffDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Working {
                get {
                    try {
                        return ((int)(this[this.tableAtAGlanceTotalStaff.WorkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Working\' in table \'AtAGlanceTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtAGlanceTotalStaff.WorkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total {
                get {
                    try {
                        return ((int)(this[this.tableAtAGlanceTotalStaff.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'AtAGlanceTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtAGlanceTotalStaff.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Male {
                get {
                    try {
                        return ((int)(this[this.tableAtAGlanceTotalStaff.MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Male\' in table \'AtAGlanceTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtAGlanceTotalStaff.MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Female {
                get {
                    try {
                        return ((int)(this[this.tableAtAGlanceTotalStaff.FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Female\' in table \'AtAGlanceTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtAGlanceTotalStaff.FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaleRatio {
                get {
                    try {
                        return ((double)(this[this.tableAtAGlanceTotalStaff.MaleRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaleRatio\' in table \'AtAGlanceTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtAGlanceTotalStaff.MaleRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FemaleRatio {
                get {
                    try {
                        return ((double)(this[this.tableAtAGlanceTotalStaff.FemaleRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FemaleRatio\' in table \'AtAGlanceTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtAGlanceTotalStaff.FemaleRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AsOnDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAtAGlanceTotalStaff.AsOnDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AsOnDate\' in table \'AtAGlanceTotalStaff\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtAGlanceTotalStaff.AsOnDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkingNull() {
                return this.IsNull(this.tableAtAGlanceTotalStaff.WorkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkingNull() {
                this[this.tableAtAGlanceTotalStaff.WorkingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableAtAGlanceTotalStaff.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableAtAGlanceTotalStaff.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaleNull() {
                return this.IsNull(this.tableAtAGlanceTotalStaff.MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaleNull() {
                this[this.tableAtAGlanceTotalStaff.MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFemaleNull() {
                return this.IsNull(this.tableAtAGlanceTotalStaff.FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFemaleNull() {
                this[this.tableAtAGlanceTotalStaff.FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaleRatioNull() {
                return this.IsNull(this.tableAtAGlanceTotalStaff.MaleRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaleRatioNull() {
                this[this.tableAtAGlanceTotalStaff.MaleRatioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFemaleRatioNull() {
                return this.IsNull(this.tableAtAGlanceTotalStaff.FemaleRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFemaleRatioNull() {
                this[this.tableAtAGlanceTotalStaff.FemaleRatioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAsOnDateNull() {
                return this.IsNull(this.tableAtAGlanceTotalStaff.AsOnDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAsOnDateNull() {
                this[this.tableAtAGlanceTotalStaff.AsOnDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AsaDistrictWiseStaff1Row : global::System.Data.DataRow {
            
            private AsaDistrictWiseStaff1DataTable tableAsaDistrictWiseStaff1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AsaDistrictWiseStaff1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAsaDistrictWiseStaff1 = ((AsaDistrictWiseStaff1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tableAsaDistrictWiseStaff1.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Branch {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Orther_Branch {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.Orther_BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orther_Branch\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.Orther_BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LO_Male {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.LO_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LO_Male\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.LO_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LO_Female {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.LO_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LO_Female\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.LO_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BM_Male {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.BM_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BM_Male\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.BM_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BM_Female {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.BM_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BM_Female\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.BM_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ABM_Male {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.ABM_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABM_Male\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.ABM_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ABM_Female {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.ABM_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABM_Female\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.ABM_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RM_Male {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.RM_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RM_Male\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.RM_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RM_Female {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.RM_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RM_Female\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.RM_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DM_Male {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.DM_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DM_Male\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.DM_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DM_Female {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.DM_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DM_Female\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.DM_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Au_Male {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.Au_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Au_Male\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.Au_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Au_Female {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.Au_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Au_Female\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.Au_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Oth_Male {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.Oth_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oth_Male\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.Oth_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Oth_Female {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.Oth_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oth_Female\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.Oth_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total_Male {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.Total_MaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Male\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.Total_MaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total_Female {
                get {
                    try {
                        return ((int)(this[this.tableAsaDistrictWiseStaff1.Total_FemaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Female\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.Total_FemaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AsOnDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAsaDistrictWiseStaff1.AsOnDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AsOnDate\' in table \'AsaDistrictWiseStaff1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAsaDistrictWiseStaff1.AsOnDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableAsaDistrictWiseStaff1.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tableAsaDistrictWiseStaff1.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrther_BranchNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.Orther_BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrther_BranchNull() {
                this[this.tableAsaDistrictWiseStaff1.Orther_BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLO_MaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.LO_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLO_MaleNull() {
                this[this.tableAsaDistrictWiseStaff1.LO_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLO_FemaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.LO_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLO_FemaleNull() {
                this[this.tableAsaDistrictWiseStaff1.LO_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBM_MaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.BM_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBM_MaleNull() {
                this[this.tableAsaDistrictWiseStaff1.BM_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBM_FemaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.BM_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBM_FemaleNull() {
                this[this.tableAsaDistrictWiseStaff1.BM_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABM_MaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.ABM_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABM_MaleNull() {
                this[this.tableAsaDistrictWiseStaff1.ABM_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABM_FemaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.ABM_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABM_FemaleNull() {
                this[this.tableAsaDistrictWiseStaff1.ABM_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRM_MaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.RM_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRM_MaleNull() {
                this[this.tableAsaDistrictWiseStaff1.RM_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRM_FemaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.RM_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRM_FemaleNull() {
                this[this.tableAsaDistrictWiseStaff1.RM_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDM_MaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.DM_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDM_MaleNull() {
                this[this.tableAsaDistrictWiseStaff1.DM_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDM_FemaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.DM_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDM_FemaleNull() {
                this[this.tableAsaDistrictWiseStaff1.DM_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAu_MaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.Au_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAu_MaleNull() {
                this[this.tableAsaDistrictWiseStaff1.Au_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAu_FemaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.Au_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAu_FemaleNull() {
                this[this.tableAsaDistrictWiseStaff1.Au_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOth_MaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.Oth_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOth_MaleNull() {
                this[this.tableAsaDistrictWiseStaff1.Oth_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOth_FemaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.Oth_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOth_FemaleNull() {
                this[this.tableAsaDistrictWiseStaff1.Oth_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_MaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.Total_MaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_MaleNull() {
                this[this.tableAsaDistrictWiseStaff1.Total_MaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_FemaleNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.Total_FemaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_FemaleNull() {
                this[this.tableAsaDistrictWiseStaff1.Total_FemaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAsOnDateNull() {
                return this.IsNull(this.tableAsaDistrictWiseStaff1.AsOnDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAsOnDateNull() {
                this[this.tableAsaDistrictWiseStaff1.AsOnDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PenaltyReportRow : global::System.Data.DataRow {
            
            private PenaltyReportDataTable tablePenaltyReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PenaltyReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePenaltyReport = ((PenaltyReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpID {
                get {
                    try {
                        return ((int)(this[this.tablePenaltyReport.EmpIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpID\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.EmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablePenaltyReport.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JoiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePenaltyReport.JoiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JoiningDate\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PermanentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePenaltyReport.PermanentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PermanentDate\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.PermanentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tablePenaltyReport.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASA_District {
                get {
                    try {
                        return ((string)(this[this.tablePenaltyReport.ASA_DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASA_District\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.ASA_DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tablePenaltyReport.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LetterNo {
                get {
                    try {
                        return ((string)(this[this.tablePenaltyReport.LetterNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterNo\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.LetterNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LetterDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePenaltyReport.LetterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterDate\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.LetterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FineType {
                get {
                    try {
                        return ((string)(this[this.tablePenaltyReport.FineTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FineType\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.FineTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FineTime {
                get {
                    try {
                        return ((int)(this[this.tablePenaltyReport.FineTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FineTime\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.FineTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FineAmount {
                get {
                    try {
                        return ((double)(this[this.tablePenaltyReport.FineAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FineAmount\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.FineAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Duration {
                get {
                    try {
                        return ((int)(this[this.tablePenaltyReport.DurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Duration\' in table \'PenaltyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePenaltyReport.DurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpIDNull() {
                return this.IsNull(this.tablePenaltyReport.EmpIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpIDNull() {
                this[this.tablePenaltyReport.EmpIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tablePenaltyReport.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tablePenaltyReport.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoiningDateNull() {
                return this.IsNull(this.tablePenaltyReport.JoiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoiningDateNull() {
                this[this.tablePenaltyReport.JoiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPermanentDateNull() {
                return this.IsNull(this.tablePenaltyReport.PermanentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPermanentDateNull() {
                this[this.tablePenaltyReport.PermanentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tablePenaltyReport.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tablePenaltyReport.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASA_DistrictNull() {
                return this.IsNull(this.tablePenaltyReport.ASA_DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASA_DistrictNull() {
                this[this.tablePenaltyReport.ASA_DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tablePenaltyReport.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tablePenaltyReport.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterNoNull() {
                return this.IsNull(this.tablePenaltyReport.LetterNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterNoNull() {
                this[this.tablePenaltyReport.LetterNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterDateNull() {
                return this.IsNull(this.tablePenaltyReport.LetterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterDateNull() {
                this[this.tablePenaltyReport.LetterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFineTypeNull() {
                return this.IsNull(this.tablePenaltyReport.FineTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFineTypeNull() {
                this[this.tablePenaltyReport.FineTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFineTimeNull() {
                return this.IsNull(this.tablePenaltyReport.FineTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFineTimeNull() {
                this[this.tablePenaltyReport.FineTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFineAmountNull() {
                return this.IsNull(this.tablePenaltyReport.FineAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFineAmountNull() {
                this[this.tablePenaltyReport.FineAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDurationNull() {
                return this.IsNull(this.tablePenaltyReport.DurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDurationNull() {
                this[this.tablePenaltyReport.DurationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IncreamentHeldupRow : global::System.Data.DataRow {
            
            private IncreamentHeldupDataTable tableIncreamentHeldup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncreamentHeldupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIncreamentHeldup = ((IncreamentHeldupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpID {
                get {
                    try {
                        return ((int)(this[this.tableIncreamentHeldup.EmpIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpID\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.EmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableIncreamentHeldup.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JoiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncreamentHeldup.JoiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JoiningDate\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PermanentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncreamentHeldup.PermanentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PermanentDate\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.PermanentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tableIncreamentHeldup.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASA_District {
                get {
                    try {
                        return ((string)(this[this.tableIncreamentHeldup.ASA_DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASA_District\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.ASA_DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableIncreamentHeldup.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LetterNo {
                get {
                    try {
                        return ((string)(this[this.tableIncreamentHeldup.LetterNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterNo\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.LetterNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LetterDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncreamentHeldup.LetterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterDate\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.LetterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncreamentHeldup.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Todate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIncreamentHeldup.TodateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Todate\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.TodateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeldUpBranch {
                get {
                    try {
                        return ((string)(this[this.tableIncreamentHeldup.HeldUpBranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeldUpBranch\' in table \'IncreamentHeldup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIncreamentHeldup.HeldUpBranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpIDNull() {
                return this.IsNull(this.tableIncreamentHeldup.EmpIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpIDNull() {
                this[this.tableIncreamentHeldup.EmpIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableIncreamentHeldup.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableIncreamentHeldup.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoiningDateNull() {
                return this.IsNull(this.tableIncreamentHeldup.JoiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoiningDateNull() {
                this[this.tableIncreamentHeldup.JoiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPermanentDateNull() {
                return this.IsNull(this.tableIncreamentHeldup.PermanentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPermanentDateNull() {
                this[this.tableIncreamentHeldup.PermanentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tableIncreamentHeldup.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tableIncreamentHeldup.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASA_DistrictNull() {
                return this.IsNull(this.tableIncreamentHeldup.ASA_DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASA_DistrictNull() {
                this[this.tableIncreamentHeldup.ASA_DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableIncreamentHeldup.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableIncreamentHeldup.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterNoNull() {
                return this.IsNull(this.tableIncreamentHeldup.LetterNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterNoNull() {
                this[this.tableIncreamentHeldup.LetterNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterDateNull() {
                return this.IsNull(this.tableIncreamentHeldup.LetterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterDateNull() {
                this[this.tableIncreamentHeldup.LetterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateNull() {
                return this.IsNull(this.tableIncreamentHeldup.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateNull() {
                this[this.tableIncreamentHeldup.FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTodateNull() {
                return this.IsNull(this.tableIncreamentHeldup.TodateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTodateNull() {
                this[this.tableIncreamentHeldup.TodateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeldUpBranchNull() {
                return this.IsNull(this.tableIncreamentHeldup.HeldUpBranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeldUpBranchNull() {
                this[this.tableIncreamentHeldup.HeldUpBranchColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WarningRow : global::System.Data.DataRow {
            
            private WarningDataTable tableWarning;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WarningRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWarning = ((WarningDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpID {
                get {
                    try {
                        return ((int)(this[this.tableWarning.EmpIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpID\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.EmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableWarning.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JoiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWarning.JoiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JoiningDate\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PermanentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWarning.PermanentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PermanentDate\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.PermanentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tableWarning.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASA_District {
                get {
                    try {
                        return ((string)(this[this.tableWarning.ASA_DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASA_District\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.ASA_DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableWarning.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LetterNo {
                get {
                    try {
                        return ((string)(this[this.tableWarning.LetterNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterNo\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.LetterNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LetterDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWarning.LetterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterDate\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.LetterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Duration {
                get {
                    try {
                        return ((int)(this[this.tableWarning.DurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Duration\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.DurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalWarningTime {
                get {
                    try {
                        return ((int)(this[this.tableWarning.TotalWarningTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalWarningTime\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.TotalWarningTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarningBranch {
                get {
                    try {
                        return ((string)(this[this.tableWarning.WarningBranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WarningBranch\' in table \'Warning\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarning.WarningBranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpIDNull() {
                return this.IsNull(this.tableWarning.EmpIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpIDNull() {
                this[this.tableWarning.EmpIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableWarning.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableWarning.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoiningDateNull() {
                return this.IsNull(this.tableWarning.JoiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoiningDateNull() {
                this[this.tableWarning.JoiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPermanentDateNull() {
                return this.IsNull(this.tableWarning.PermanentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPermanentDateNull() {
                this[this.tableWarning.PermanentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tableWarning.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tableWarning.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASA_DistrictNull() {
                return this.IsNull(this.tableWarning.ASA_DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASA_DistrictNull() {
                this[this.tableWarning.ASA_DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableWarning.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableWarning.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterNoNull() {
                return this.IsNull(this.tableWarning.LetterNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterNoNull() {
                this[this.tableWarning.LetterNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterDateNull() {
                return this.IsNull(this.tableWarning.LetterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterDateNull() {
                this[this.tableWarning.LetterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDurationNull() {
                return this.IsNull(this.tableWarning.DurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDurationNull() {
                this[this.tableWarning.DurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalWarningTimeNull() {
                return this.IsNull(this.tableWarning.TotalWarningTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalWarningTimeNull() {
                this[this.tableWarning.TotalWarningTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarningBranchNull() {
                return this.IsNull(this.tableWarning.WarningBranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarningBranchNull() {
                this[this.tableWarning.WarningBranchColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IndivisualLeaveRow : global::System.Data.DataRow {
            
            private IndivisualLeaveDataTable tableIndivisualLeave;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IndivisualLeaveRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIndivisualLeave = ((IndivisualLeaveDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpID {
                get {
                    try {
                        return ((int)(this[this.tableIndivisualLeave.EmpIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpID\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.EmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableIndivisualLeave.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JoiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIndivisualLeave.JoiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JoiningDate\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PermanentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIndivisualLeave.PermanentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PermanentDate\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.PermanentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tableIndivisualLeave.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASA_District {
                get {
                    try {
                        return ((string)(this[this.tableIndivisualLeave.ASA_DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASA_District\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.ASA_DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableIndivisualLeave.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LetterNo {
                get {
                    try {
                        return ((string)(this[this.tableIndivisualLeave.LetterNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterNo\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.LetterNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LetterDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIndivisualLeave.LetterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterDate\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.LetterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableIndivisualLeave.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIndivisualLeave.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIndivisualLeave.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'IndivisualLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndivisualLeave.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpIDNull() {
                return this.IsNull(this.tableIndivisualLeave.EmpIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpIDNull() {
                this[this.tableIndivisualLeave.EmpIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableIndivisualLeave.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableIndivisualLeave.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoiningDateNull() {
                return this.IsNull(this.tableIndivisualLeave.JoiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoiningDateNull() {
                this[this.tableIndivisualLeave.JoiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPermanentDateNull() {
                return this.IsNull(this.tableIndivisualLeave.PermanentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPermanentDateNull() {
                this[this.tableIndivisualLeave.PermanentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tableIndivisualLeave.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tableIndivisualLeave.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASA_DistrictNull() {
                return this.IsNull(this.tableIndivisualLeave.ASA_DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASA_DistrictNull() {
                this[this.tableIndivisualLeave.ASA_DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableIndivisualLeave.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableIndivisualLeave.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterNoNull() {
                return this.IsNull(this.tableIndivisualLeave.LetterNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterNoNull() {
                this[this.tableIndivisualLeave.LetterNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterDateNull() {
                return this.IsNull(this.tableIndivisualLeave.LetterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterDateNull() {
                this[this.tableIndivisualLeave.LetterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableIndivisualLeave.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableIndivisualLeave.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableIndivisualLeave.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableIndivisualLeave.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableIndivisualLeave.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tableIndivisualLeave.EndDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GD_BranchRow : global::System.Data.DataRow {
            
            private GD_BranchDataTable tableGD_Branch;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GD_BranchRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGD_Branch = ((GD_BranchDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Division {
                get {
                    try {
                        return ((string)(this[this.tableGD_Branch.DivisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Division\' in table \'GD_Branch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGD_Branch.DivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tableGD_Branch.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'GD_Branch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGD_Branch.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Branch {
                get {
                    try {
                        return ((int)(this[this.tableGD_Branch.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'GD_Branch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGD_Branch.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivisionNull() {
                return this.IsNull(this.tableGD_Branch.DivisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivisionNull() {
                this[this.tableGD_Branch.DivisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableGD_Branch.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableGD_Branch.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tableGD_Branch.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tableGD_Branch.BranchColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ASAD_BranchRow : global::System.Data.DataRow {
            
            private ASAD_BranchDataTable tableASAD_Branch;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ASAD_BranchRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableASAD_Branch = ((ASAD_BranchDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tableASAD_Branch.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'ASAD_Branch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASAD_Branch.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Branch {
                get {
                    try {
                        return ((int)(this[this.tableASAD_Branch.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'ASAD_Branch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASAD_Branch.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableASAD_Branch.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableASAD_Branch.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNull() {
                return this.IsNull(this.tableASAD_Branch.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNull() {
                this[this.tableASAD_Branch.BranchColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransferLetterRow : global::System.Data.DataRow {
            
            private TransferLetterDataTable tableTransferLetter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransferLetterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransferLetter = ((TransferLetterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableTransferLetter.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Code {
                get {
                    try {
                        return ((int)(this[this.tableTransferLetter.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PresentBranch {
                get {
                    try {
                        return ((string)(this[this.tableTransferLetter.PresentBranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PresentBranch\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.PresentBranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PresentDistrict {
                get {
                    try {
                        return ((string)(this[this.tableTransferLetter.PresentDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PresentDistrict\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.PresentDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationBranch {
                get {
                    try {
                        return ((string)(this[this.tableTransferLetter.DestinationBranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationBranch\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.DestinationBranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationDistrict {
                get {
                    try {
                        return ((string)(this[this.tableTransferLetter.DestinationDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationDistrict\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.DestinationDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LetterNo {
                get {
                    try {
                        return ((string)(this[this.tableTransferLetter.LetterNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterNo\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.LetterNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JoiningDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTransferLetter.JoiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JoiningDate\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LetterDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTransferLetter.LetterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterDate\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.LetterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Duplication {
                get {
                    try {
                        return ((string)(this[this.tableTransferLetter.DuplicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Duplication\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.DuplicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideAddress {
                get {
                    try {
                        return ((string)(this[this.tableTransferLetter.InsideAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsideAddress\' in table \'TransferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferLetter.InsideAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableTransferLetter.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableTransferLetter.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableTransferLetter.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableTransferLetter.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPresentBranchNull() {
                return this.IsNull(this.tableTransferLetter.PresentBranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPresentBranchNull() {
                this[this.tableTransferLetter.PresentBranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPresentDistrictNull() {
                return this.IsNull(this.tableTransferLetter.PresentDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPresentDistrictNull() {
                this[this.tableTransferLetter.PresentDistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationBranchNull() {
                return this.IsNull(this.tableTransferLetter.DestinationBranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationBranchNull() {
                this[this.tableTransferLetter.DestinationBranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationDistrictNull() {
                return this.IsNull(this.tableTransferLetter.DestinationDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationDistrictNull() {
                this[this.tableTransferLetter.DestinationDistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterNoNull() {
                return this.IsNull(this.tableTransferLetter.LetterNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterNoNull() {
                this[this.tableTransferLetter.LetterNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoiningDateNull() {
                return this.IsNull(this.tableTransferLetter.JoiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoiningDateNull() {
                this[this.tableTransferLetter.JoiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterDateNull() {
                return this.IsNull(this.tableTransferLetter.LetterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterDateNull() {
                this[this.tableTransferLetter.LetterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDuplicationNull() {
                return this.IsNull(this.tableTransferLetter.DuplicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDuplicationNull() {
                this[this.tableTransferLetter.DuplicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideAddressNull() {
                return this.IsNull(this.tableTransferLetter.InsideAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideAddressNull() {
                this[this.tableTransferLetter.InsideAddressColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransferReportRow : global::System.Data.DataRow {
            
            private TransferReportDataTable tableTransferReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransferReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransferReport = ((TransferReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Employee_ID {
                get {
                    try {
                        return ((int)(this[this.tableTransferReport.Employee_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Employee_ID\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.Employee_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableTransferReport.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableTransferReport.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LetterNo {
                get {
                    try {
                        return ((string)(this[this.tableTransferReport.LetterNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterNo\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.LetterNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LetterDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTransferReport.LetterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterDate\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.LetterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string From_Branch {
                get {
                    try {
                        return ((string)(this[this.tableTransferReport.From_BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'From_Branch\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.From_BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string From_District {
                get {
                    try {
                        return ((string)(this[this.tableTransferReport.From_DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'From_District\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.From_DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_Branch {
                get {
                    try {
                        return ((string)(this[this.tableTransferReport.To_BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_Branch\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.To_BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string To_District {
                get {
                    try {
                        return ((string)(this[this.tableTransferReport.To_DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_District\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.To_DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime To_Branch_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTransferReport.To_Branch_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'To_Branch_Date\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.To_Branch_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableTransferReport.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'TransferReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransferReport.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployee_IDNull() {
                return this.IsNull(this.tableTransferReport.Employee_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployee_IDNull() {
                this[this.tableTransferReport.Employee_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableTransferReport.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableTransferReport.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableTransferReport.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableTransferReport.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterNoNull() {
                return this.IsNull(this.tableTransferReport.LetterNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterNoNull() {
                this[this.tableTransferReport.LetterNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterDateNull() {
                return this.IsNull(this.tableTransferReport.LetterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterDateNull() {
                this[this.tableTransferReport.LetterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrom_BranchNull() {
                return this.IsNull(this.tableTransferReport.From_BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrom_BranchNull() {
                this[this.tableTransferReport.From_BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrom_DistrictNull() {
                return this.IsNull(this.tableTransferReport.From_DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrom_DistrictNull() {
                this[this.tableTransferReport.From_DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_BranchNull() {
                return this.IsNull(this.tableTransferReport.To_BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_BranchNull() {
                this[this.tableTransferReport.To_BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_DistrictNull() {
                return this.IsNull(this.tableTransferReport.To_DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_DistrictNull() {
                this[this.tableTransferReport.To_DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTo_Branch_DateNull() {
                return this.IsNull(this.tableTransferReport.To_Branch_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTo_Branch_DateNull() {
                this[this.tableTransferReport.To_Branch_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableTransferReport.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableTransferReport.RemarksColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MultiLetterRow : global::System.Data.DataRow {
            
            private MultiLetterDataTable tableMultiLetter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MultiLetterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMultiLetter = ((MultiLetterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    try {
                        return ((string)(this[this.tableMultiLetter.SubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subject\' in table \'MultiLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiLetter.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LetterNo {
                get {
                    try {
                        return ((string)(this[this.tableMultiLetter.LetterNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterNo\' in table \'MultiLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiLetter.LetterNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LetterDate {
                get {
                    try {
                        return ((string)(this[this.tableMultiLetter.LetterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterDate\' in table \'MultiLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiLetter.LetterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressTo {
                get {
                    try {
                        return ((string)(this[this.tableMultiLetter.AddressToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddressTo\' in table \'MultiLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiLetter.AddressToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Body {
                get {
                    try {
                        return ((string)(this[this.tableMultiLetter.BodyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Body\' in table \'MultiLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiLetter.BodyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Conclution {
                get {
                    try {
                        return ((string)(this[this.tableMultiLetter.ConclutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conclution\' in table \'MultiLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiLetter.ConclutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Signatory {
                get {
                    try {
                        return ((string)(this[this.tableMultiLetter.SignatoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Signatory\' in table \'MultiLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiLetter.SignatoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableMultiLetter.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'MultiLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiLetter.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Duplication {
                get {
                    try {
                        return ((string)(this[this.tableMultiLetter.DuplicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Duplication\' in table \'MultiLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiLetter.DuplicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    try {
                        return ((string)(this[this.tableMultiLetter.NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Note\' in table \'MultiLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMultiLetter.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNull() {
                return this.IsNull(this.tableMultiLetter.SubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNull() {
                this[this.tableMultiLetter.SubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterNoNull() {
                return this.IsNull(this.tableMultiLetter.LetterNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterNoNull() {
                this[this.tableMultiLetter.LetterNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLetterDateNull() {
                return this.IsNull(this.tableMultiLetter.LetterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLetterDateNull() {
                this[this.tableMultiLetter.LetterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressToNull() {
                return this.IsNull(this.tableMultiLetter.AddressToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressToNull() {
                this[this.tableMultiLetter.AddressToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBodyNull() {
                return this.IsNull(this.tableMultiLetter.BodyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBodyNull() {
                this[this.tableMultiLetter.BodyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConclutionNull() {
                return this.IsNull(this.tableMultiLetter.ConclutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConclutionNull() {
                this[this.tableMultiLetter.ConclutionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignatoryNull() {
                return this.IsNull(this.tableMultiLetter.SignatoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignatoryNull() {
                this[this.tableMultiLetter.SignatoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableMultiLetter.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableMultiLetter.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDuplicationNull() {
                return this.IsNull(this.tableMultiLetter.DuplicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDuplicationNull() {
                this[this.tableMultiLetter.DuplicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoteNull() {
                return this.IsNull(this.tableMultiLetter.NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoteNull() {
                this[this.tableMultiLetter.NoteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Salary_CardRow : global::System.Data.DataRow {
            
            private Salary_CardDataTable tableSalary_Card;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Salary_CardRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalary_Card = ((Salary_CardDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Code {
                get {
                    try {
                        return ((int)(this[this.tableSalary_Card.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableSalary_Card.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Salary_Head {
                get {
                    try {
                        return ((string)(this[this.tableSalary_Card.Salary_HeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Salary_Head\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.Salary_HeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tableSalary_Card.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalaryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalary_Card.SalaryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryDate\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.SalaryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Deduction_Head {
                get {
                    try {
                        return ((string)(this[this.tableSalary_Card.Deduction_HeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deduction_Head\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.Deduction_HeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DeductionAmt {
                get {
                    try {
                        return ((double)(this[this.tableSalary_Card.DeductionAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeductionAmt\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.DeductionAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grade {
                get {
                    try {
                        return ((string)(this[this.tableSalary_Card.GradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grade\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.GradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableSalary_Card.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Scale {
                get {
                    try {
                        return ((string)(this[this.tableSalary_Card.ScaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scale\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.ScaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankAccount {
                get {
                    try {
                        return ((string)(this[this.tableSalary_Card.BankAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccount\' in table \'Salary_Card\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalary_Card.BankAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableSalary_Card.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableSalary_Card.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableSalary_Card.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableSalary_Card.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalary_HeadNull() {
                return this.IsNull(this.tableSalary_Card.Salary_HeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalary_HeadNull() {
                this[this.tableSalary_Card.Salary_HeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableSalary_Card.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableSalary_Card.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalaryDateNull() {
                return this.IsNull(this.tableSalary_Card.SalaryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalaryDateNull() {
                this[this.tableSalary_Card.SalaryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeduction_HeadNull() {
                return this.IsNull(this.tableSalary_Card.Deduction_HeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeduction_HeadNull() {
                this[this.tableSalary_Card.Deduction_HeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeductionAmtNull() {
                return this.IsNull(this.tableSalary_Card.DeductionAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeductionAmtNull() {
                this[this.tableSalary_Card.DeductionAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGradeNull() {
                return this.IsNull(this.tableSalary_Card.GradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGradeNull() {
                this[this.tableSalary_Card.GradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableSalary_Card.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableSalary_Card.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScaleNull() {
                return this.IsNull(this.tableSalary_Card.ScaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScaleNull() {
                this[this.tableSalary_Card.ScaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankAccountNull() {
                return this.IsNull(this.tableSalary_Card.BankAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankAccountNull() {
                this[this.tableSalary_Card.BankAccountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GDTotalStaffRowChangeEvent : global::System.EventArgs {
            
            private GDTotalStaffRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GDTotalStaffRowChangeEvent(GDTotalStaffRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GDTotalStaffRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OwnDistrictWiseStaffRowChangeEvent : global::System.EventArgs {
            
            private OwnDistrictWiseStaffRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OwnDistrictWiseStaffRowChangeEvent(OwnDistrictWiseStaffRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OwnDistrictWiseStaffRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AtAGlanceTotalStaffRowChangeEvent : global::System.EventArgs {
            
            private AtAGlanceTotalStaffRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AtAGlanceTotalStaffRowChangeEvent(AtAGlanceTotalStaffRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AtAGlanceTotalStaffRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AsaDistrictWiseStaff1RowChangeEvent : global::System.EventArgs {
            
            private AsaDistrictWiseStaff1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AsaDistrictWiseStaff1RowChangeEvent(AsaDistrictWiseStaff1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AsaDistrictWiseStaff1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PenaltyReportRowChangeEvent : global::System.EventArgs {
            
            private PenaltyReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PenaltyReportRowChangeEvent(PenaltyReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PenaltyReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IncreamentHeldupRowChangeEvent : global::System.EventArgs {
            
            private IncreamentHeldupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncreamentHeldupRowChangeEvent(IncreamentHeldupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncreamentHeldupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WarningRowChangeEvent : global::System.EventArgs {
            
            private WarningRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WarningRowChangeEvent(WarningRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WarningRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IndivisualLeaveRowChangeEvent : global::System.EventArgs {
            
            private IndivisualLeaveRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IndivisualLeaveRowChangeEvent(IndivisualLeaveRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IndivisualLeaveRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GD_BranchRowChangeEvent : global::System.EventArgs {
            
            private GD_BranchRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GD_BranchRowChangeEvent(GD_BranchRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GD_BranchRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ASAD_BranchRowChangeEvent : global::System.EventArgs {
            
            private ASAD_BranchRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASAD_BranchRowChangeEvent(ASAD_BranchRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASAD_BranchRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransferLetterRowChangeEvent : global::System.EventArgs {
            
            private TransferLetterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferLetterRowChangeEvent(TransferLetterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferLetterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransferReportRowChangeEvent : global::System.EventArgs {
            
            private TransferReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferReportRowChangeEvent(TransferReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MultiLetterRowChangeEvent : global::System.EventArgs {
            
            private MultiLetterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MultiLetterRowChangeEvent(MultiLetterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MultiLetterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Salary_CardRowChangeEvent : global::System.EventArgs {
            
            private Salary_CardRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Salary_CardRowChangeEvent(Salary_CardRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Salary_CardRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591